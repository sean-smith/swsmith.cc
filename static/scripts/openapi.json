{
   "tags": [
     {
       "name": "slurm",
       "description": "methods that query slurmctld"
     },
     {
       "name": "openapi",
       "description": "methods that query for OpenAPI specifications"
     }
   ],
   "paths": {
     "\/slurm\/v0.0.37\/diag": {
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmctld_diag",
         "summary": "get diagnostics",
         "responses": {
           "200": {
             "description": "diagnostic results",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.37_diag"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.37_diag"
                 }
               }
             }
           },
           "default": {
             "description": "unable to request ping test"
           }
         }
       }
     },
     "\/slurm\/v0.0.37\/ping": {
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmctld_ping",
         "summary": "ping test",
         "responses": {
           "200": {
             "description": "results of ping test",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.37_pings"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.37_pings"
                 }
               }
             }
           },
           "default": {
             "description": "unable to request ping test"
           }
         }
       }
     },
     "\/slurm\/v0.0.37\/jobs": {
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmctld_get_jobs",
         "summary": "get list of jobs",
         "parameters": [
           {
             "name": "update_time",
             "in": "query",
             "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
             "required": false,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "integer",
               "format": "int64"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "job(s) information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.37_jobs_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.37_jobs_response"
                 }
               }
             }
           },
           "default": {
             "description": "job not found"
           }
         }
       }
     },
     "\/slurm\/v0.0.37\/job\/{job_id}": {
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmctld_get_job",
         "summary": "get job info",
         "parameters": [
           {
             "name": "job_id",
             "in": "path",
             "description": "Slurm JobID",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "job(s) information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.37_jobs_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.37_jobs_response"
                 }
               }
             }
           },
           "default": {
             "description": "job matching JobId not found"
           }
         }
       },
       "post": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmctld_update_job",
         "summary": "update job",
         "parameters": [
           {
             "name": "job_id",
             "in": "path",
             "description": "Slurm Job ID",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "requestBody": {
           "description": "update job",
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.37_job_properties"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.37_job_properties"
               }
             }
           },
           "required": true
         },
         "responses": {
           "200": {
             "description": "job information"
           },
           "500": {
             "description": "job not found"
           }
         }
       },
       "delete": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmctld_cancel_job",
         "summary": "cancel or signal job",
         "parameters": [
           {
             "name": "job_id",
             "in": "path",
             "description": "Slurm Job ID",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "signal",
             "in": "query",
             "description": "signal to send to job",
             "required": false,
             "style": "form",
             "explode": true,
             "schema": {
               "$ref": "#\/components\/schemas\/v0.0.37_signal"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "job cancelled or sent signal"
           },
           "500": {
             "description": "job not found"
           }
         }
       }
     },
     "\/slurm\/v0.0.37\/job\/submit": {
       "post": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmctld_submit_job",
         "summary": "submit new job",
         "requestBody": {
           "description": "submit new job",
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.37_job_submission"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.37_job_submission"
               }
             }
           },
           "required": true
         },
         "responses": {
           "200": {
             "description": "job submitted",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.37_job_submission_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.37_job_submission_response"
                 }
               }
             }
           },
           "default": {
             "description": "job rejected"
           }
         }
       }
     },
     "\/slurm\/v0.0.37\/nodes": {
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmctld_get_nodes",
         "summary": "get all node info",
         "parameters": [
           {
             "name": "update_time",
             "in": "query",
             "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
             "required": false,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "integer",
               "format": "int64"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "node information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.37_nodes_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.37_nodes_response"
                 }
               }
             }
           },
           "default": {
             "description": "no nodes in cluster"
           }
         }
       }
     },
     "\/slurm\/v0.0.37\/node\/{node_name}": {
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmctld_get_node",
         "summary": "get node info",
         "parameters": [
           {
             "name": "node_name",
             "in": "path",
             "description": "Slurm Node Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "node information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.37_nodes_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.37_nodes_response"
                 }
               }
             }
           },
           "default": {
             "description": "node not found"
           }
         }
       }
     },
     "\/slurm\/v0.0.37\/partitions": {
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmctld_get_partitions",
         "summary": "get all partition info",
         "parameters": [
           {
             "name": "update_time",
             "in": "query",
             "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
             "required": false,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "integer",
               "format": "int64"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "partition information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.37_partitions_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.37_partitions_response"
                 }
               }
             }
           },
           "default": {
             "description": "no partitions found"
           }
         }
       }
     },
     "\/slurm\/v0.0.37\/partition\/{partition_name}": {
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmctld_get_partition",
         "summary": "get partition info",
         "parameters": [
           {
             "name": "partition_name",
             "in": "path",
             "description": "Slurm Partition Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "update_time",
             "in": "query",
             "description": "Filter if there were no partition changes (not limited to partition in URL endpoint) since update_time.",
             "required": false,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "integer",
               "format": "int64"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "partition information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.37_partitions_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.37_partitions_response"
                 }
               }
             }
           },
           "default": {
             "description": "no partitions found"
           }
         }
       }
     },
     "\/slurm\/v0.0.37\/reservations": {
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmctld_get_reservations",
         "summary": "get all reservation info",
         "parameters": [
           {
             "name": "update_time",
             "in": "query",
             "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
             "required": false,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "integer",
               "format": "int64"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "reservation information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.37_reservations_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.37_reservations_response"
                 }
               }
             }
           },
           "default": {
             "description": "no reservations found"
           }
         }
       }
     },
     "\/slurm\/v0.0.37\/reservation\/{reservation_name}": {
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmctld_get_reservation",
         "summary": "get reservation info",
         "parameters": [
           {
             "name": "reservation_name",
             "in": "path",
             "description": "Slurm Reservation Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "update_time",
             "in": "query",
             "description": "Filter if no reservation (not limited to reservation in URL) changed since update_time.",
             "required": false,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "integer",
               "format": "int64"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "reservation information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.37_reservations_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.37_reservations_response"
                 }
               }
             }
           },
           "default": {
             "description": "no reservations found"
           }
         }
       }
     },
     "\/openapi.yaml": {
       "get": {
         "tags": [
           "openapi"
         ],
         "responses": {
           "200": {
             "description": "OpenAPI Specification"
           }
         },
         "summary": "Retrieve OpenAPI Specification"
       },
       "servers": [
         {
           "url": "\/"
         }
       ]
     },
     "\/openapi.json": {
       "get": {
         "tags": [
           "openapi"
         ],
         "responses": {
           "200": {
             "description": "OpenAPI Specification"
           }
         },
         "summary": "Retrieve OpenAPI Specification"
       },
       "servers": [
         {
           "url": "\/"
         }
       ]
     },
     "\/openapi": {
       "get": {
         "tags": [
           "openapi"
         ],
         "responses": {
           "200": {
             "description": "OpenAPI Specification"
           }
         },
         "summary": "Retrieve OpenAPI Specification"
       },
       "servers": [
         {
           "url": "\/"
         }
       ]
     },
     "\/openapi\/v3": {
       "get": {
         "tags": [
           "openapi"
         ],
         "responses": {
           "200": {
             "description": "OpenAPI Specification"
           }
         },
         "summary": "Retrieve OpenAPI Specification"
       },
       "servers": [
         {
           "url": "\/"
         }
       ]
     },
     "\/slurm\/v0.0.38\/diag": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_38_diag",
         "summary": "get diagnostics",
         "responses": {
           "200": {
             "description": "diagnostic results",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_diag"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_diag"
                 }
               }
             }
           },
           "default": {
             "description": "unable to request ping test",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_errors"
                 }
               }
             }
           }
         }
       }
     },
     "\/slurm\/v0.0.38\/licenses": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_38_slurmctld_get_licenses",
         "summary": "get all Slurm tracked license info",
         "responses": {
           "200": {
             "description": "results of get all licenses",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_licenses"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_licenses"
                 }
               }
             }
           },
           "default": {
             "description": "unable to request licenses"
           }
         }
       }
     },
     "\/slurm\/v0.0.38\/ping": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_38_ping",
         "summary": "ping test",
         "responses": {
           "200": {
             "description": "results of ping test",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_pings"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_pings"
                 }
               }
             }
           },
           "default": {
             "description": "unable to request ping test",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_errors"
                 }
               }
             }
           }
         }
       }
     },
     "\/slurm\/v0.0.38\/jobs": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_38_get_jobs",
         "summary": "get list of jobs",
         "parameters": [
           {
             "name": "update_time",
             "in": "query",
             "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "integer",
               "format": "int64"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "job(s) information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_jobs_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_jobs_response"
                 }
               }
             }
           },
           "default": {
             "description": "job not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_errors"
                 }
               }
             }
           }
         }
       }
     },
     "\/slurm\/v0.0.38\/job\/{job_id}": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_38_get_job",
         "summary": "get job info",
         "parameters": [
           {
             "name": "job_id",
             "in": "path",
             "description": "Slurm JobID",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "job(s) information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_jobs_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_jobs_response"
                 }
               }
             }
           },
           "default": {
             "description": "job matching JobId not found"
           }
         }
       },
       "post": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_38_update_job",
         "summary": "update job",
         "parameters": [
           {
             "name": "job_id",
             "in": "path",
             "description": "Slurm Job ID",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "requestBody": {
           "description": "update job",
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.38_job_properties"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.38_job_properties"
               }
             }
           },
           "required": true
         },
         "responses": {
           "200": {
             "description": "job information"
           },
           "500": {
             "description": "job not found"
           }
         }
       },
       "delete": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_38_cancel_job",
         "summary": "cancel or signal job",
         "parameters": [
           {
             "name": "job_id",
             "in": "path",
             "description": "Slurm Job ID",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "signal",
             "in": "query",
             "description": "signal to send to job",
             "required": false,
             "style": "form",
             "explode": true,
             "schema": {
               "$ref": "#\/components\/schemas\/v0.0.38_signal"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "job cancelled or sent signal"
           },
           "500": {
             "description": "job not found"
           }
         }
       }
     },
     "\/slurm\/v0.0.38\/job\/submit": {
       "post": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_38_submit_job",
         "summary": "submit new job",
         "requestBody": {
           "description": "submit new job",
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.38_job_submission"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.38_job_submission"
               }
             }
           },
           "required": true
         },
         "responses": {
           "200": {
             "description": "job submitted",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_job_submission_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_job_submission_response"
                 }
               }
             }
           },
           "default": {
             "description": "job rejected",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_errors"
                 }
               }
             }
           }
         }
       }
     },
     "\/slurm\/v0.0.38\/nodes": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_38_get_nodes",
         "summary": "get all node info",
         "parameters": [
           {
             "name": "update_time",
             "in": "query",
             "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "integer",
               "format": "int64"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "node information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_nodes_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_nodes_response"
                 }
               }
             }
           },
           "default": {
             "description": "no nodes in cluster",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_errors"
                 }
               }
             }
           }
         }
       }
     },
     "\/slurm\/v0.0.38\/node\/{node_name}": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_38_get_node",
         "summary": "get node info",
         "parameters": [
           {
             "name": "node_name",
             "in": "path",
             "description": "Slurm Node Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "node information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_nodes_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_nodes_response"
                 }
               }
             }
           },
           "default": {
             "description": "node not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_errors"
                 }
               }
             }
           }
         }
       }
     },
     "\/slurm\/v0.0.38\/partitions": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_38_get_partitions",
         "summary": "get all partition info",
         "parameters": [
           {
             "name": "update_time",
             "in": "query",
             "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "integer",
               "format": "int64"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "partition information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_partitions_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_partitions_response"
                 }
               }
             }
           },
           "default": {
             "description": "no partitions found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_errors"
                 }
               }
             }
           }
         }
       }
     },
     "\/slurm\/v0.0.38\/partition\/{partition_name}": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_38_get_partition",
         "summary": "get partition info",
         "parameters": [
           {
             "name": "partition_name",
             "in": "path",
             "description": "Slurm Partition Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "update_time",
             "in": "query",
             "description": "Filter if there were no partition changes (not limited to partition in URL endpoint) since update_time.",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "integer",
               "format": "int64"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "partition information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_partitions_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_partitions_response"
                 }
               }
             }
           },
           "default": {
             "description": "no partitions found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_errors"
                 }
               }
             }
           }
         }
       }
     },
     "\/slurm\/v0.0.38\/reservations": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_38_get_reservations",
         "summary": "get all reservation info",
         "parameters": [
           {
             "name": "update_time",
             "in": "query",
             "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "integer",
               "format": "int64"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "reservation information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_reservations_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_reservations_response"
                 }
               }
             }
           },
           "default": {
             "description": "no reservations found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_errors"
                 }
               }
             }
           }
         }
       }
     },
     "\/slurm\/v0.0.38\/reservation\/{reservation_name}": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_38_get_reservation",
         "summary": "get reservation info",
         "parameters": [
           {
             "name": "reservation_name",
             "in": "path",
             "description": "Slurm Reservation Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "update_time",
             "in": "query",
             "description": "Filter if no reservation (not limited to reservation in URL) changed since update_time.",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "integer",
               "format": "int64"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "reservation information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_reservations_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_reservations_response"
                 }
               }
             }
           },
           "default": {
             "description": "no reservations found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.38_errors"
                 }
               }
             }
           }
         }
       }
     },
     "\/slurm\/v0.0.39\/diag": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_39_diag",
         "summary": "get diagnostics",
         "responses": {
           "200": {
             "description": "diagnostic results",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_diag"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_diag"
                 }
               }
             }
           },
           "default": {
             "description": "unable to request ping test",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         }
       }
     },
     "\/slurm\/v0.0.39\/licenses": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_39_slurmctld_get_licenses",
         "summary": "get all Slurm tracked license info",
         "responses": {
           "200": {
             "description": "results of get all licenses",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_licenses_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_licenses_info"
                 }
               }
             }
           },
           "default": {
             "description": "unable to request licenses"
           }
         }
       }
     },
     "\/slurm\/v0.0.39\/ping": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_39_ping",
         "summary": "ping test",
         "responses": {
           "200": {
             "description": "results of ping test",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_pings"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_pings"
                 }
               }
             }
           },
           "default": {
             "description": "unable to request ping test",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         }
       }
     },
     "\/slurm\/v0.0.39\/jobs": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_39_get_jobs",
         "summary": "get list of jobs",
         "parameters": [
           {
             "name": "update_time",
             "in": "query",
             "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "integer",
               "format": "int64"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "job(s) information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_jobs_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_jobs_response"
                 }
               }
             }
           },
           "default": {
             "description": "job not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         }
       }
     },
     "\/slurm\/v0.0.39\/job\/{job_id}": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_39_get_job",
         "summary": "get job info",
         "parameters": [
           {
             "name": "job_id",
             "in": "path",
             "description": "Slurm JobID",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "job(s) information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_jobs_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_jobs_response"
                 }
               }
             }
           },
           "default": {
             "description": "job matching JobId not found"
           }
         }
       },
       "post": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_39_update_job",
         "summary": "update job",
         "parameters": [
           {
             "name": "job_id",
             "in": "path",
             "description": "Slurm Job ID",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "requestBody": {
           "description": "update job",
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.39_job_desc_msg"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.39_job_desc_msg"
               }
             }
           },
           "required": true
         },
         "responses": {
           "200": {
             "description": "job updated",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_job_update_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_job_update_response"
                 }
               }
             }
           },
           "default": {
             "description": "job update failed",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         }
       },
       "delete": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_39_cancel_job",
         "summary": "cancel or signal job",
         "parameters": [
           {
             "name": "job_id",
             "in": "path",
             "description": "Slurm Job ID",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "signal",
             "in": "query",
             "description": "signal to send to job",
             "required": false,
             "style": "form",
             "explode": true,
             "schema": {
               "type": "string",
               "description": "POSIX signal name",
               "enum": [
                 "HUP",
                 "INT",
                 "QUIT",
                 "ABRT",
                 "KILL",
                 "ALRM",
                 "TERM",
                 "USR1",
                 "USR2",
                 "URG",
                 "CONT",
                 "STOP",
                 "TSTP",
                 "TTIN",
                 "TTOU"
               ]
             }
           }
         ],
         "responses": {
           "200": {
             "description": "job cancelled or sent signal",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           },
           "default": {
             "description": "Job cancel request failed",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         }
       }
     },
     "\/slurm\/v0.0.39\/job\/submit": {
       "post": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_39_submit_job",
         "summary": "submit new job",
         "requestBody": {
           "description": "submit new job",
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.39_job_submission"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.39_job_submission"
               }
             }
           },
           "required": true
         },
         "responses": {
           "200": {
             "description": "job submitted",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_job_submission_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_job_submission_response"
                 }
               }
             }
           },
           "default": {
             "description": "job rejected",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         }
       }
     },
     "\/slurm\/v0.0.39\/nodes": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_39_get_nodes",
         "summary": "get all node info",
         "parameters": [
           {
             "name": "update_time",
             "in": "query",
             "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "integer",
               "format": "int64"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "node information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_nodes_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_nodes_response"
                 }
               }
             }
           },
           "default": {
             "description": "no nodes in cluster",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         }
       }
     },
     "\/slurm\/v0.0.39\/node\/{node_name}": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_39_get_node",
         "summary": "get node info",
         "parameters": [
           {
             "name": "node_name",
             "in": "path",
             "description": "Slurm Node Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "node information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_nodes_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_nodes_response"
                 }
               }
             }
           },
           "default": {
             "description": "node not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         }
       },
       "post": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_39_update_node",
         "summary": "update node properties",
         "parameters": [
           {
             "name": "node_name",
             "in": "path",
             "description": "Slurm Node Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "requestBody": {
           "description": "update node",
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.39_update_node_msg"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.39_update_node_msg"
               }
             }
           },
           "required": true
         },
         "responses": {
           "200": {
             "description": "node information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           },
           "default": {
             "description": "node update failed",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         }
       },
       "delete": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_39_delete_node",
         "summary": "delete node",
         "parameters": [
           {
             "name": "node_name",
             "in": "path",
             "description": "Slurm Node Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "node deleted",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           },
           "default": {
             "description": "node delete request failed",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         }
       }
     },
     "\/slurm\/v0.0.39\/partitions": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_39_get_partitions",
         "summary": "get all partition info",
         "parameters": [
           {
             "name": "update_time",
             "in": "query",
             "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "integer",
               "format": "int64"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "partition information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_partitions_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_partitions_response"
                 }
               }
             }
           },
           "default": {
             "description": "no partitions found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         }
       }
     },
     "\/slurm\/v0.0.39\/partition\/{partition_name}": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_39_get_partition",
         "summary": "get partition info",
         "parameters": [
           {
             "name": "partition_name",
             "in": "path",
             "description": "Slurm Partition Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "update_time",
             "in": "query",
             "description": "Filter if there were no partition changes (not limited to partition in URL endpoint) since update_time.",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "integer",
               "format": "int64"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "partition information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_partitions_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_partitions_response"
                 }
               }
             }
           },
           "default": {
             "description": "no partitions found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         }
       }
     },
     "\/slurm\/v0.0.39\/reservations": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_39_get_reservations",
         "summary": "get all reservation info",
         "parameters": [
           {
             "name": "update_time",
             "in": "query",
             "description": "Filter if changed since update_time. Use of this parameter can result in faster replies.",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "integer",
               "format": "int64"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "reservation information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_reservations_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_reservations_response"
                 }
               }
             }
           },
           "default": {
             "description": "no reservations found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         }
       }
     },
     "\/slurm\/v0.0.39\/reservation\/{reservation_name}": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurm_v0_0_39_get_reservation",
         "summary": "get reservation info",
         "parameters": [
           {
             "name": "reservation_name",
             "in": "path",
             "description": "Slurm Reservation Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "update_time",
             "in": "query",
             "description": "Filter if no reservation (not limited to reservation in URL) changed since update_time.",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "integer",
               "format": "int64"
             }
           }
         ],
         "responses": {
           "200": {
             "description": "reservation information",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_reservations_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.39_reservations_response"
                 }
               }
             }
           },
           "default": {
             "description": "no reservations found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         }
       }
     },
     "\/slurmdb\/v0.0.37\/job\/{job_id}": {
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdbd_get_job",
         "summary": "Get job info",
         "description": "This endpoint may return multiple job entries since job_id is not a unique key - only the tuple (cluster, job_id, start_time) is unique. If the requested job_id is a component of a heterogeneous job all components are returned.",
         "parameters": [
           {
             "name": "job_id",
             "in": "path",
             "description": "Slurm Job ID",
             "required": true,
             "style": "label",
             "explode": false,
             "schema": {
               "type": "integer",
               "format": "int64"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_job_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_job_info"
                 }
               }
             },
             "description": "Job description"
           },
           "default": {
             "description": "Unable to find job"
           }
         }
       }
     },
     "\/slurmdb\/v0.0.37\/config": {
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdbd_get_db_config",
         "summary": "Dump all configuration information",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_config_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_config_info"
                 }
               }
             },
             "description": "slurmdbd configuration"
           },
           "default": {
             "description": "Unable to dump config"
           }
         }
       },
       "post": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdbd_set_db_config",
         "summary": "Load all configuration information",
         "responses": {
           "200": {
             "description": "Load config",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_config_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_config_response"
                 }
               }
             }
           },
           "default": {
             "description": "Unable to set config"
           }
         }
       }
     },
     "\/slurmdb\/v0.0.37\/tres": {
       "post": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdbd_update_tres",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_response_tres"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_response_tres"
                 }
               }
             },
             "description": "List of TRES"
           },
           "default": {
             "description": "Unable to update TRES"
           }
         },
         "summary": "Set TRES info"
       },
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdbd_get_tres",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_tres_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_tres_info"
                 }
               }
             },
             "description": "List of TRES"
           },
           "default": {
             "description": "Unable to retrieve TRES"
           }
         },
         "summary": "Get TRES info"
       }
     },
     "\/slurmdb\/v0.0.37\/qos\/{qos_name}": {
       "delete": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "summary": "Delete QOS",
         "operationId": "slurmdbd_delete_qos",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_response_qos_delete"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_response_qos_delete"
                 }
               }
             },
             "description": "Delete qos"
           },
           "default": {
             "description": "Unable to delete QOS"
           }
         },
         "parameters": [
           {
             "name": "qos_name",
             "in": "path",
             "description": "Slurm QOS Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ]
       },
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "summary": "Get QOS info",
         "operationId": "slurmdbd_get_single_qos",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_qos_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_qos_info"
                 }
               }
             },
             "description": "QOS information"
           },
           "default": {
             "description": "QOS not found"
           }
         },
         "parameters": [
           {
             "name": "qos_name",
             "in": "path",
             "description": "Slurm QOS Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ]
       }
     },
     "\/slurmdb\/v0.0.37\/qos": {
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdbd_get_qos",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_qos_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_qos_info"
                 }
               }
             },
             "description": "List of QOS'"
           },
           "default": {
             "description": "QOS not found"
           }
         },
         "summary": "Get QOS list"
       }
     },
     "\/slurmdb\/v0.0.37\/associations": {
       "post": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdbd_update_associations",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_response_associations"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_response_associations"
                 }
               }
             },
             "description": "status of associations update"
           },
           "default": {
             "description": "Unable to update associations"
           }
         },
         "summary": "Set associations info"
       },
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdbd_get_associations",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_associations_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_associations_info"
                 }
               }
             },
             "description": "List of associations"
           },
           "default": {
             "description": "Association not found"
           }
         },
         "summary": "Get association list"
       }
     },
     "\/slurmdb\/v0.0.37\/association": {
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdbd_get_association",
         "parameters": [
           {
             "name": "cluster",
             "in": "query",
             "description": "Cluster name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "account",
             "in": "query",
             "description": "Account name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "user",
             "in": "query",
             "description": "User name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "partition",
             "in": "query",
             "description": "Partition Name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_associations_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_associations_info"
                 }
               }
             },
             "description": "List of associations"
           },
           "default": {
             "description": "Association not found"
           }
         },
         "summary": "Get association info"
       },
       "delete": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdbd_delete_association",
         "parameters": [
           {
             "name": "cluster",
             "in": "query",
             "description": "Cluster name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "account",
             "in": "query",
             "description": "Account name",
             "required": true,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "user",
             "in": "query",
             "description": "User name",
             "required": true,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "partition",
             "in": "query",
             "description": "Partition Name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_response_association_delete"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_response_association_delete"
                 }
               }
             },
             "description": "Delete associations"
           },
           "default": {
             "description": "Association not found or unable to delete association"
           }
         },
         "summary": "Delete association"
       }
     },
     "\/slurmdb\/v0.0.37\/user\/{user_name}": {
       "delete": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "summary": "Delete user",
         "operationId": "slurmdbd_delete_user",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_response_user_delete"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_response_user_delete"
                 }
               }
             },
             "description": "Delete user"
           },
           "default": {
             "description": "User not found or unable to delete user"
           }
         },
         "parameters": [
           {
             "name": "user_name",
             "in": "path",
             "description": "Slurm User Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ]
       },
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "summary": "Get user info",
         "operationId": "slurmdbd_get_user",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_user_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_user_info"
                 }
               }
             },
             "description": "List of users"
           },
           "default": {
             "description": "User not found"
           }
         },
         "parameters": [
           {
             "name": "user_name",
             "in": "path",
             "description": "Slurm User Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ]
       }
     },
     "\/slurmdb\/v0.0.37\/users": {
       "post": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "summary": "Update user",
         "operationId": "slurmdbd_update_users",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_response_user_update"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_response_user_update"
                 }
               }
             },
             "description": "Update users"
           },
           "default": {
             "description": "User not found or not able to update user"
           }
         }
       },
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "summary": "Get user list",
         "operationId": "slurmdbd_get_users",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_user_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_user_info"
                 }
               }
             },
             "description": "List of users"
           },
           "default": {
             "description": "User not found"
           }
         }
       }
     },
     "\/slurmdb\/v0.0.37\/cluster\/{cluster_name}": {
       "delete": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "summary": "Delete cluster",
         "operationId": "slurmdbd_delete_cluster",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_response_cluster_delete"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_response_cluster_delete"
                 }
               }
             },
             "description": "Delete cluster"
           },
           "default": {
             "description": "Cluster not found or unable to delete cluster"
           }
         },
         "parameters": [
           {
             "name": "cluster_name",
             "in": "path",
             "description": "Slurm cluster name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ]
       },
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "summary": "Get cluster info",
         "operationId": "slurmdbd_get_cluster",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_cluster_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_cluster_info"
                 }
               }
             },
             "description": "Cluster information"
           },
           "default": {
             "description": "Cluster not found"
           }
         },
         "parameters": [
           {
             "name": "cluster_name",
             "in": "path",
             "description": "Slurm cluster name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ]
       }
     },
     "\/slurmdb\/v0.0.37\/clusters": {
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdbd_get_clusters",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_cluster_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_cluster_info"
                 }
               }
             },
             "description": "List of clusters"
           },
           "default": {
             "description": "Cluster not found"
           }
         },
         "summary": "Get cluster list"
       },
       "post": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdbd_add_clusters",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_response_cluster_add"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_response_cluster_add"
                 }
               }
             },
             "description": "List of clusters"
           },
           "default": {
             "description": "Unable to add cluster"
           }
         },
         "summary": "Add clusters"
       }
     },
     "\/slurmdb\/v0.0.37\/wckey\/{wckey}": {
       "delete": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "summary": "Delete wckey",
         "operationId": "slurmdbd_delete_wckey",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_response_wckey_delete"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_response_wckey_delete"
                 }
               }
             },
             "description": "Delete wckey"
           },
           "default": {
             "description": "wckey not found or unable to delete wckey"
           }
         },
         "parameters": [
           {
             "name": "wckey",
             "in": "path",
             "description": "Slurm wckey name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ]
       },
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "summary": "Get wckey info",
         "operationId": "slurmdbd_get_wckey",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_wckey_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_wckey_info"
                 }
               }
             },
             "description": "List of wckey"
           },
           "default": {
             "description": "wckey not found"
           }
         },
         "parameters": [
           {
             "name": "wckey",
             "in": "path",
             "description": "Slurm wckey name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ]
       }
     },
     "\/slurmdb\/v0.0.37\/wckeys": {
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdbd_get_wckeys",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_wckey_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_wckey_info"
                 }
               }
             },
             "description": "List of wckeys"
           },
           "default": {
             "description": "wckey not found"
           }
         },
         "summary": "Get wckey list"
       },
       "post": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdbd_add_wckeys",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_response_wckey_add"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_response_wckey_add"
                 }
               }
             },
             "description": "List of wckeys"
           },
           "default": {
             "description": "Unable to add wckey"
           }
         },
         "summary": "Add wckeys"
       }
     },
     "\/slurmdb\/v0.0.37\/account\/{account_name}": {
       "delete": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "summary": "Delete account",
         "operationId": "slurmdbd_delete_account",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_response_account_delete"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_response_account_delete"
                 }
               }
             },
             "description": "Delete account"
           },
           "default": {
             "description": "Unable to delete account"
           }
         },
         "parameters": [
           {
             "name": "account_name",
             "in": "path",
             "description": "Slurm Account Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ]
       },
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "summary": "Get account info",
         "operationId": "slurmdbd_get_account",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_account_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_account_info"
                 }
               }
             },
             "description": "List of accounts"
           },
           "default": {
             "description": "Account not found"
           }
         },
         "parameters": [
           {
             "name": "account_name",
             "in": "path",
             "description": "Slurm Account Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ]
       }
     },
     "\/slurmdb\/v0.0.37\/accounts": {
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdbd_get_accounts",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_account_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_account_info"
                 }
               }
             },
             "description": "List of accounts"
           },
           "default": {
             "description": "Account not found"
           }
         },
         "summary": "Get account list"
       },
       "post": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdbd_update_account",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_account_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_account_response"
                 }
               }
             },
             "description": "Add\/update list of accounts"
           },
           "default": {
             "description": "Unable to add or update accounts"
           }
         },
         "summary": "Update accounts"
       }
     },
     "\/slurmdb\/v0.0.37\/jobs": {
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdbd_get_jobs",
         "parameters": [
           {
             "in": "query",
             "name": "submit_time",
             "description": "Filter by submission time\n Accepted formats:\n HH:MM[:SS] [AM|PM]\r\nMMDD[YY] or MM\/DD[\/YY] or MM.DD[.YY]\r\nMM\/DD[\/YY]-HH:MM[:SS]\r\nYYYY-MM-DD[THH:MM[:SS]]",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "start_time",
             "description": "Filter by start time\n Accepted formats:\n HH:MM[:SS] [AM|PM]\r\nMMDD[YY] or MM\/DD[\/YY] or MM.DD[.YY]\r\nMM\/DD[\/YY]-HH:MM[:SS]\r\nYYYY-MM-DD[THH:MM[:SS]]",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "end_time",
             "description": "Filter by end time\n Accepted formats:\n HH:MM[:SS] [AM|PM]\r\nMMDD[YY] or MM\/DD[\/YY] or MM.DD[.YY]\r\nMM\/DD[\/YY]-HH:MM[:SS]\r\nYYYY-MM-DD[THH:MM[:SS]]",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "account",
             "description": "Comma delimited list of accounts to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "association",
             "description": "Comma delimited list of associations to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "cluster",
             "description": "Comma delimited list of cluster to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "constraints",
             "description": "Comma delimited list of constraints to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "cpus_max",
             "description": "Number of CPUs high range",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "cpus_min",
             "description": "Number of CPUs low range",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "skip_steps",
             "description": "Report job step information",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "boolean"
             }
           },
           {
             "in": "query",
             "name": "disable_wait_for_result",
             "description": "Disable waiting for result from slurmdbd",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "boolean"
             }
           },
           {
             "in": "query",
             "name": "exit_code",
             "description": "Exit code of job",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "format",
             "description": "Comma delimited list of formats to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "group",
             "description": "Comma delimited list of groups to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "job_name",
             "description": "Comma delimited list of job names to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "nodes_max",
             "description": "Number of nodes high range",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "nodes_min",
             "description": "Number of nodes low range",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "partition",
             "description": "Comma delimited list of partitions to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "qos",
             "description": "Comma delimited list of QOS to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "reason",
             "description": "Comma delimited list of job reasons to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "reservation",
             "description": "Comma delimited list of reservations to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "state",
             "description": "Comma delimited list of states to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "step",
             "description": "Comma delimited list of job steps to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "node",
             "description": "Comma delimited list of used nodes to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "wckey",
             "description": "Comma delimited list of wckeys to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_job_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_job_info"
                 }
               }
             },
             "description": "List of jobs"
           },
           "default": {
             "description": "Unable to query jobs"
           }
         },
         "summary": "Get job list"
       }
     },
     "\/slurmdb\/v0.0.37\/diag": {
       "get": {
         "deprecated": true,
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdbd_diag",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_diag"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.37_diag"
                 }
               }
             },
             "description": "Dictionary of statistics"
           },
           "default": {
             "description": "Unable to query diagnostics"
           }
         },
         "summary": "Get slurmdb diagnostics"
       }
     },
     "\/slurmdb\/v0.0.38\/job\/{job_id}": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_38_get_job",
         "summary": "Get job info",
         "description": "This endpoint may return multiple job entries since job_id is not a unique key - only the tuple (cluster, job_id, start_time) is unique. If the requested job_id is a component of a heterogeneous job all components are returned.",
         "parameters": [
           {
             "name": "job_id",
             "in": "path",
             "description": "Slurm JobID",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_job_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_job_info"
                 }
               }
             },
             "description": "Job description"
           },
           "default": {
             "description": "Unable to find job",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         }
       }
     },
     "\/slurmdb\/v0.0.38\/config": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_38_get_config",
         "summary": "Dump all configuration information",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_config_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_config_info"
                 }
               }
             },
             "description": "slurmdbd configuration"
           },
           "default": {
             "description": "Unable to dump config",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         }
       },
       "post": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_38_set_config",
         "summary": "Load all configuration information",
         "responses": {
           "200": {
             "description": "Load config",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_config_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_config_response"
                 }
               }
             }
           },
           "default": {
             "description": "Unable to set config",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "requestBody": {
           "description": "Add or update config",
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.38_set_config"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.38_set_config"
               }
             }
           },
           "required": false
         }
       }
     },
     "\/slurmdb\/v0.0.38\/tres": {
       "post": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_38_update_tres",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_tres"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_tres"
                 }
               }
             },
             "description": "List of TRES"
           },
           "default": {
             "description": "Unable to update TRES",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "summary": "Set TRES info",
         "requestBody": {
           "description": "Add or Update TRES",
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.38_tres_update"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.38_tres_update"
               }
             }
           },
           "required": true
         }
       },
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_38_get_tres",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_tres_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_tres_info"
                 }
               }
             },
             "description": "List of TRES"
           },
           "default": {
             "description": "Unable to retrieve TRES"
           }
         },
         "summary": "Get TRES info"
       }
     },
     "\/slurmdb\/v0.0.38\/qos\/{qos_name}": {
       "delete": {
         "tags": [
           "slurm"
         ],
         "summary": "Delete QOS",
         "operationId": "slurmdb_v0_0_38_delete_qos",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_qos_delete"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_qos_delete"
                 }
               }
             },
             "description": "Delete qos"
           },
           "default": {
             "description": "Unable to delete QOS",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "parameters": [
           {
             "name": "qos_name",
             "in": "path",
             "description": "Slurm QOS Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ]
       },
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "Get QOS info",
         "operationId": "slurmdb_v0_0_38_get_single_qos",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_qos_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_qos_info"
                 }
               }
             },
             "description": "QOS information"
           },
           "default": {
             "description": "QOS not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "parameters": [
           {
             "name": "qos_name",
             "in": "path",
             "description": "Slurm QOS Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "with_deleted",
             "in": "query",
             "description": "Include deleted QOSs. False by default.",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "boolean"
             }
           }
         ]
       }
     },
     "\/slurmdb\/v0.0.38\/qos": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_38_get_qos",
         "parameters": [
           {
             "name": "with_deleted",
             "in": "query",
             "description": "Include deleted QOSs. False by default.",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "boolean"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_qos_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_qos_info"
                 }
               }
             },
             "description": "List of QOS'"
           },
           "default": {
             "description": "QOS not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "summary": "Get QOS list"
       },
       "post": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_38_update_qos",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_qos"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_qos"
                 }
               }
             },
             "description": "QOS update response"
           },
           "default": {
             "description": "Unable to update QOSs",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "requestBody": {
           "description": "Add or update QOSs",
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.38_update_qos"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.38_update_qos"
               }
             }
           },
           "required": true
         },
         "summary": "Set QOS info"
       }
     },
     "\/slurmdb\/v0.0.38\/associations": {
       "post": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_38_update_associations",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_associations"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_associations"
                 }
               }
             },
             "description": "status of associations update"
           },
           "default": {
             "description": "Unable to update associations",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "summary": "Set associations info",
         "requestBody": {
           "description": "Add or update associations",
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.38_associations_info"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.38_associations_info"
               }
             }
           },
           "required": true
         }
       },
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_38_get_associations",
         "parameters": [
           {
             "name": "cluster",
             "in": "query",
             "description": "Cluster name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "account",
             "in": "query",
             "description": "Account name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "user",
             "in": "query",
             "description": "User name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "partition",
             "in": "query",
             "description": "Partition Name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_associations_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_associations_info"
                 }
               }
             },
             "description": "List of associations"
           },
           "default": {
             "description": "Association not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "summary": "Get association list"
       },
       "delete": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_38_delete_associations",
         "parameters": [
           {
             "name": "cluster",
             "in": "query",
             "description": "Cluster name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "account",
             "in": "query",
             "description": "Account name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "user",
             "in": "query",
             "description": "User name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "partition",
             "in": "query",
             "description": "Partition Name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_associations_delete"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_associations_delete"
                 }
               }
             },
             "description": "Delete associations"
           },
           "default": {
             "description": "Associations not found or unable to delete association",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "summary": "Delete associations"
       }
     },
     "\/slurmdb\/v0.0.38\/association": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_38_get_association",
         "parameters": [
           {
             "name": "cluster",
             "in": "query",
             "description": "Cluster name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "account",
             "in": "query",
             "description": "Account name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "user",
             "in": "query",
             "description": "User name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "partition",
             "in": "query",
             "description": "Partition Name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_associations_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_associations_info"
                 }
               }
             },
             "description": "List of associations"
           },
           "default": {
             "description": "Association not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "summary": "Get association info"
       },
       "delete": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_38_delete_association",
         "parameters": [
           {
             "name": "cluster",
             "in": "query",
             "description": "Cluster name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "account",
             "in": "query",
             "description": "Account name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "user",
             "in": "query",
             "description": "User name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "partition",
             "in": "query",
             "description": "Partition Name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_associations_delete"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_associations_delete"
                 }
               }
             },
             "description": "Delete associations"
           },
           "default": {
             "description": "Association not found or unable to delete association",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "summary": "Delete association"
       }
     },
     "\/slurmdb\/v0.0.38\/user\/{user_name}": {
       "delete": {
         "tags": [
           "slurm"
         ],
         "summary": "Delete user",
         "operationId": "slurmdb_v0_0_38_delete_user",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_user_delete"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_user_delete"
                 }
               }
             },
             "description": "Delete user"
           },
           "default": {
             "description": "User not found or unable to delete user",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "parameters": [
           {
             "name": "user_name",
             "in": "path",
             "description": "Slurm User Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ]
       },
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "Get user info",
         "operationId": "slurmdb_v0_0_38_get_user",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_user_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_user_info"
                 }
               }
             },
             "description": "List of users"
           },
           "default": {
             "description": "User not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "parameters": [
           {
             "name": "user_name",
             "in": "path",
             "description": "Slurm User Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "with_deleted",
             "in": "query",
             "description": "Include deleted users. False by default.",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "boolean"
             }
           }
         ]
       }
     },
     "\/slurmdb\/v0.0.38\/users": {
       "post": {
         "tags": [
           "slurm"
         ],
         "summary": "Update user",
         "operationId": "slurmdb_v0_0_38_update_users",
         "requestBody": {
           "description": "add or update user",
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.38_update_users"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.38_update_users"
               }
             }
           },
           "required": true
         },
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_user_update"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_user_update"
                 }
               }
             },
             "description": "Update users"
           },
           "default": {
             "description": "User not found or not able to update user",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         }
       },
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "Get user list",
         "operationId": "slurmdb_v0_0_38_get_users",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_user_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_user_info"
                 }
               }
             },
             "description": "List of users"
           },
           "default": {
             "description": "User not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "parameters": [
           {
             "name": "with_deleted",
             "in": "query",
             "description": "Include deleted users. False by default.",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "boolean"
             }
           }
         ]
       }
     },
     "\/slurmdb\/v0.0.38\/cluster\/{cluster_name}": {
       "delete": {
         "tags": [
           "slurm"
         ],
         "summary": "Delete cluster",
         "operationId": "slurmdb_v0_0_38_delete_cluster",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_cluster_delete"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_cluster_delete"
                 }
               }
             },
             "description": "Delete cluster"
           },
           "default": {
             "description": "Cluster not found or unable to delete cluster",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "parameters": [
           {
             "name": "cluster_name",
             "in": "path",
             "description": "Slurm cluster name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ]
       },
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "Get cluster info",
         "operationId": "slurmdb_v0_0_38_get_cluster",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_cluster_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_cluster_info"
                 }
               }
             },
             "description": "Cluster information"
           },
           "default": {
             "description": "Cluster not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "parameters": [
           {
             "name": "cluster_name",
             "in": "path",
             "description": "Slurm cluster name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ]
       }
     },
     "\/slurmdb\/v0.0.38\/clusters": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_38_get_clusters",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_cluster_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_cluster_info"
                 }
               }
             },
             "description": "List of clusters"
           },
           "default": {
             "description": "Cluster not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "summary": "Get cluster list"
       },
       "post": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_38_add_clusters",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_cluster_add"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_cluster_add"
                 }
               }
             },
             "description": "List of clusters"
           },
           "default": {
             "description": "Unable to add cluster",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "summary": "Add clusters",
         "requestBody": {
           "description": "Add or update clusters",
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.38_clusters_properties"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.38_clusters_properties"
               }
             }
           },
           "required": true
         }
       }
     },
     "\/slurmdb\/v0.0.38\/wckey\/{wckey}": {
       "delete": {
         "tags": [
           "slurm"
         ],
         "summary": "Delete wckey",
         "operationId": "slurmdb_v0_0_38_delete_wckey",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_wckey_delete"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_wckey_delete"
                 }
               }
             },
             "description": "Delete wckey"
           },
           "default": {
             "description": "wckey not found or unable to delete wckey",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "parameters": [
           {
             "name": "wckey",
             "in": "path",
             "description": "Slurm wckey name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ]
       },
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "Get wckey info",
         "operationId": "slurmdb_v0_0_38_get_wckey",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_wckey_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_wckey_info"
                 }
               }
             },
             "description": "List of wckey"
           },
           "default": {
             "description": "wckey not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "parameters": [
           {
             "name": "wckey",
             "in": "path",
             "description": "Slurm wckey name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ]
       }
     },
     "\/slurmdb\/v0.0.38\/wckeys": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_38_get_wckeys",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_wckey_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_wckey_info"
                 }
               }
             },
             "description": "List of wckeys"
           },
           "default": {
             "description": "wckey not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "summary": "Get wckey list"
       },
       "post": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_38_add_wckeys",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_wckey_add"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_wckey_add"
                 }
               }
             },
             "description": "List of wckeys"
           },
           "default": {
             "description": "Unable to add wckey",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "summary": "Add wckeys",
         "requestBody": {
           "description": "add wckeys",
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.38_wckey_info"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.38_wckey_info"
               }
             }
           },
           "required": false
         }
       }
     },
     "\/slurmdb\/v0.0.38\/account\/{account_name}": {
       "delete": {
         "tags": [
           "slurm"
         ],
         "summary": "Delete account",
         "operationId": "slurmdb_v0_0_38_delete_account",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_account_delete"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_response_account_delete"
                 }
               }
             },
             "description": "Delete account"
           },
           "default": {
             "description": "Unable to delete account",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "parameters": [
           {
             "name": "account_name",
             "in": "path",
             "description": "Slurm Account Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ]
       },
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "Get account info",
         "operationId": "slurmdb_v0_0_38_get_account",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_account_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_account_info"
                 }
               }
             },
             "description": "List of accounts"
           },
           "default": {
             "description": "Account not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "parameters": [
           {
             "name": "account_name",
             "in": "path",
             "description": "Slurm Account Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "with_deleted",
             "in": "query",
             "description": "Include deleted accounts. False by default.",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "boolean"
             }
           }
         ]
       }
     },
     "\/slurmdb\/v0.0.38\/accounts": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_38_get_accounts",
         "parameters": [
           {
             "name": "with_deleted",
             "in": "query",
             "description": "Include deleted accounts. False by default.",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "boolean"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_account_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_account_info"
                 }
               }
             },
             "description": "List of accounts"
           },
           "default": {
             "description": "Account not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "summary": "Get account list"
       },
       "post": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_38_update_account",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_account_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_account_response"
                 }
               }
             },
             "description": "Add\/update list of accounts"
           },
           "default": {
             "description": "Unable to add or update accounts",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "summary": "Update accounts",
         "requestBody": {
           "description": "update\/create accounts",
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.38_update_account"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.38_update_account"
               }
             }
           },
           "required": true
         }
       }
     },
     "\/slurmdb\/v0.0.38\/jobs": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_38_get_jobs",
         "parameters": [
           {
             "in": "query",
             "name": "submit_time",
             "description": "Filter by submission time\n Accepted formats:\n HH:MM[:SS] [AM|PM]\r\nMMDD[YY] or MM\/DD[\/YY] or MM.DD[.YY]\r\nMM\/DD[\/YY]-HH:MM[:SS]\r\nYYYY-MM-DD[THH:MM[:SS]]",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "start_time",
             "description": "Filter by start time\n Accepted formats:\n HH:MM[:SS] [AM|PM]\r\nMMDD[YY] or MM\/DD[\/YY] or MM.DD[.YY]\r\nMM\/DD[\/YY]-HH:MM[:SS]\r\nYYYY-MM-DD[THH:MM[:SS]]",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "end_time",
             "description": "Filter by end time\n Accepted formats:\n HH:MM[:SS] [AM|PM]\r\nMMDD[YY] or MM\/DD[\/YY] or MM.DD[.YY]\r\nMM\/DD[\/YY]-HH:MM[:SS]\r\nYYYY-MM-DD[THH:MM[:SS]]",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "account",
             "description": "Comma delimited list of accounts to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "association",
             "description": "Comma delimited list of associations to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "cluster",
             "description": "Comma delimited list of cluster to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "constraints",
             "description": "Comma delimited list of constraints to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "cpus_max",
             "description": "Number of CPUs high range",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "cpus_min",
             "description": "Number of CPUs low range",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "skip_steps",
             "description": "Report job step information",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "boolean"
             }
           },
           {
             "in": "query",
             "name": "disable_wait_for_result",
             "description": "Disable waiting for result from slurmdbd",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "boolean"
             }
           },
           {
             "in": "query",
             "name": "exit_code",
             "description": "Exit code of job",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "format",
             "description": "Comma delimited list of formats to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "group",
             "description": "Comma delimited list of groups to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "job_name",
             "description": "Comma delimited list of job names to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "nodes_max",
             "description": "Number of nodes high range",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "nodes_min",
             "description": "Number of nodes low range",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "partition",
             "description": "Comma delimited list of partitions to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "qos",
             "description": "Comma delimited list of QOS to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "reason",
             "description": "Comma delimited list of job reasons to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "reservation",
             "description": "Comma delimited list of reservations to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "state",
             "description": "Comma delimited list of states to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "step",
             "description": "Comma delimited list of job steps to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "node",
             "description": "Comma delimited list of used nodes to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "wckey",
             "description": "Comma delimited list of wckeys to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_job_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_job_info"
                 }
               }
             },
             "description": "List of jobs"
           },
           "default": {
             "description": "Unable to query jobs",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "summary": "Get job list"
       }
     },
     "\/slurmdb\/v0.0.38\/diag": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_38_diag",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_diag"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_diag"
                 }
               }
             },
             "description": "Dictionary of statistics"
           },
           "default": {
             "description": "Unable to query diagnostics",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.38_errors"
                 }
               }
             }
           }
         },
         "summary": "Get slurmdb diagnostics"
       }
     },
     "\/slurmdb\/v0.0.39\/job\/{job_id}": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_39_get_job",
         "summary": "Get job info",
         "description": "This endpoint may return multiple job entries since job_id is not a unique key - only the tuple (cluster, job_id, start_time) is unique. If the requested job_id is a component of a heterogeneous job all components are returned.",
         "parameters": [
           {
             "name": "job_id",
             "in": "path",
             "description": "Slurm JobID",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_job_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_job_info"
                 }
               }
             },
             "description": "Job description"
           },
           "default": {
             "description": "Unable to find job",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         }
       }
     },
     "\/slurmdb\/v0.0.39\/config": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_39_get_config",
         "summary": "Dump all configuration information",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_config_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_config_info"
                 }
               }
             },
             "description": "slurmdbd configuration"
           },
           "default": {
             "description": "Unable to dump config",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         }
       },
       "post": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_39_set_config",
         "summary": "Load all configuration information",
         "responses": {
           "200": {
             "description": "Load config",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           },
           "default": {
             "description": "Unable to set config",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "requestBody": {
           "description": "Add or update config",
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.39_set_config"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.39_set_config"
               }
             }
           },
           "required": false
         }
       }
     },
     "\/slurmdb\/v0.0.39\/tres": {
       "post": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_39_update_tres",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             },
             "description": "List of TRES"
           },
           "default": {
             "description": "Unable to update TRES",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "summary": "Set TRES info",
         "requestBody": {
           "description": "Add or Update TRES",
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.39_tres_update"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.39_tres_update"
               }
             }
           },
           "required": true
         }
       },
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_39_get_tres",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_tres_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_tres_info"
                 }
               }
             },
             "description": "List of TRES"
           },
           "default": {
             "description": "Unable to retrieve TRES"
           }
         },
         "summary": "Get TRES info"
       }
     },
     "\/slurmdb\/v0.0.39\/qos\/{qos_name}": {
       "delete": {
         "tags": [
           "slurm"
         ],
         "summary": "Delete QOS",
         "operationId": "slurmdb_v0_0_39_delete_qos",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             },
             "description": "Delete qos"
           },
           "default": {
             "description": "Unable to delete QOS",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "parameters": [
           {
             "name": "qos_name",
             "in": "path",
             "description": "Slurm QOS Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ]
       },
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "Get QOS info",
         "operationId": "slurmdb_v0_0_39_get_single_qos",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_qos_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_qos_info"
                 }
               }
             },
             "description": "QOS information"
           },
           "default": {
             "description": "QOS not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "parameters": [
           {
             "name": "qos_name",
             "in": "path",
             "description": "Slurm QOS Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "with_deleted",
             "in": "query",
             "description": "Include deleted QOSs. False by default.",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string",
               "enum": [
                 "true",
                 "false"
               ],
               "default": "false"
             }
           }
         ]
       }
     },
     "\/slurmdb\/v0.0.39\/qos": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_39_get_qos",
         "parameters": [
           {
             "name": "with_deleted",
             "in": "query",
             "description": "Include deleted QOSs. False by default.",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string",
               "enum": [
                 "true",
                 "false"
               ],
               "default": "false"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_qos_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_qos_info"
                 }
               }
             },
             "description": "List of QOS'"
           },
           "default": {
             "description": "QOS not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "summary": "Get QOS list"
       },
       "post": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_39_update_qos",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             },
             "description": "QOS update response"
           },
           "default": {
             "description": "Unable to update QOSs",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "requestBody": {
           "description": "Add or update QOSs",
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.39_update_qos"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.39_update_qos"
               }
             }
           },
           "required": true
         },
         "summary": "Set QOS info"
       }
     },
     "\/slurmdb\/v0.0.39\/associations": {
       "post": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_39_update_associations",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             },
             "description": "status of associations update"
           },
           "default": {
             "description": "Unable to update associations",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "summary": "Set associations info",
         "requestBody": {
           "description": "Add or update associations",
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.39_associations_info"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.39_associations_info"
               }
             }
           },
           "required": true
         }
       },
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_39_get_associations",
         "parameters": [
           {
             "name": "cluster",
             "in": "query",
             "description": "Cluster name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "account",
             "in": "query",
             "description": "Account name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "user",
             "in": "query",
             "description": "User name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "partition",
             "in": "query",
             "description": "Partition Name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_associations_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_associations_info"
                 }
               }
             },
             "description": "List of associations"
           },
           "default": {
             "description": "Association not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "summary": "Get association list"
       },
       "delete": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_39_delete_associations",
         "parameters": [
           {
             "name": "cluster",
             "in": "query",
             "description": "Cluster name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "account",
             "in": "query",
             "description": "Account name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "user",
             "in": "query",
             "description": "User name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "partition",
             "in": "query",
             "description": "Partition Name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_response_associations_delete"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_response_associations_delete"
                 }
               }
             },
             "description": "Delete associations"
           },
           "default": {
             "description": "Associations not found or unable to delete association",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "summary": "Delete associations"
       }
     },
     "\/slurmdb\/v0.0.39\/association": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_39_get_association",
         "parameters": [
           {
             "name": "cluster",
             "in": "query",
             "description": "Cluster name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "account",
             "in": "query",
             "description": "Account name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "user",
             "in": "query",
             "description": "User name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "partition",
             "in": "query",
             "description": "Partition Name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_associations_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_associations_info"
                 }
               }
             },
             "description": "List of associations"
           },
           "default": {
             "description": "Association not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "summary": "Get association info"
       },
       "delete": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_39_delete_association",
         "parameters": [
           {
             "name": "cluster",
             "in": "query",
             "description": "Cluster name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "account",
             "in": "query",
             "description": "Account name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "user",
             "in": "query",
             "description": "User name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "partition",
             "in": "query",
             "description": "Partition Name",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_response_associations_delete"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_response_associations_delete"
                 }
               }
             },
             "description": "Delete associations"
           },
           "default": {
             "description": "Association not found or unable to delete association",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "summary": "Delete association"
       }
     },
     "\/slurmdb\/v0.0.39\/user\/{user_name}": {
       "delete": {
         "tags": [
           "slurm"
         ],
         "summary": "Delete user",
         "operationId": "slurmdb_v0_0_39_delete_user",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             },
             "description": "User deleted"
           },
           "default": {
             "description": "User not found or unable to delete user",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "parameters": [
           {
             "name": "user_name",
             "in": "path",
             "description": "Slurm User Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ]
       },
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "Get user info",
         "operationId": "slurmdb_v0_0_39_get_user",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_user_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_user_info"
                 }
               }
             },
             "description": "List of users"
           },
           "default": {
             "description": "User not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "parameters": [
           {
             "name": "user_name",
             "in": "path",
             "description": "Slurm User Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "with_deleted",
             "in": "query",
             "description": "Include deleted users. False by default.",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string",
               "enum": [
                 "true",
                 "false"
               ],
               "default": "false"
             }
           }
         ]
       }
     },
     "\/slurmdb\/v0.0.39\/users": {
       "post": {
         "tags": [
           "slurm"
         ],
         "summary": "Update user",
         "operationId": "slurmdb_v0_0_39_update_users",
         "requestBody": {
           "description": "add or update user",
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.39_update_users"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.39_update_users"
               }
             }
           },
           "required": true
         },
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             },
             "description": "Update users"
           },
           "default": {
             "description": "User not found or not able to update user",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         }
       },
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "Get user list",
         "operationId": "slurmdb_v0_0_39_get_users",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_user_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_user_info"
                 }
               }
             },
             "description": "List of users"
           },
           "default": {
             "description": "User not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "parameters": [
           {
             "name": "with_deleted",
             "in": "query",
             "description": "Include deleted users. False by default.",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string",
               "enum": [
                 "true",
                 "false"
               ],
               "default": "false"
             }
           }
         ]
       }
     },
     "\/slurmdb\/v0.0.39\/cluster\/{cluster_name}": {
       "delete": {
         "tags": [
           "slurm"
         ],
         "summary": "Delete cluster",
         "operationId": "slurmdb_v0_0_39_delete_cluster",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             },
             "description": "Delete cluster"
           },
           "default": {
             "description": "Cluster not found or unable to delete cluster",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "parameters": [
           {
             "name": "cluster_name",
             "in": "path",
             "description": "Slurm cluster name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ]
       },
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "Get cluster info",
         "operationId": "slurmdb_v0_0_39_get_cluster",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_clusters_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_clusters_info"
                 }
               }
             },
             "description": "Cluster information"
           },
           "default": {
             "description": "Cluster not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "parameters": [
           {
             "name": "cluster_name",
             "in": "path",
             "description": "Slurm cluster name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ]
       }
     },
     "\/slurmdb\/v0.0.39\/clusters": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_39_get_clusters",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_clusters_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_clusters_info"
                 }
               }
             },
             "description": "List of clusters"
           },
           "default": {
             "description": "Cluster not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "summary": "Get cluster list"
       },
       "post": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_39_add_clusters",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             },
             "description": "List of clusters"
           },
           "default": {
             "description": "Unable to add cluster",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "summary": "Add clusters",
         "requestBody": {
           "description": "Add or update clusters",
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.39_clusters_info"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.39_clusters_info"
               }
             }
           },
           "required": true
         }
       }
     },
     "\/slurmdb\/v0.0.39\/wckey\/{wckey}": {
       "delete": {
         "tags": [
           "slurm"
         ],
         "summary": "Delete wckey",
         "operationId": "slurmdb_v0_0_39_delete_wckey",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             },
             "description": "Delete wckey"
           },
           "default": {
             "description": "wckey not found or unable to delete wckey",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "parameters": [
           {
             "name": "wckey",
             "in": "path",
             "description": "Slurm wckey name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ]
       },
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "Get wckey info",
         "operationId": "slurmdb_v0_0_39_get_wckey",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_wckey_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_wckey_info"
                 }
               }
             },
             "description": "List of wckey"
           },
           "default": {
             "description": "wckey not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "parameters": [
           {
             "name": "wckey",
             "in": "path",
             "description": "Slurm wckey name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ]
       }
     },
     "\/slurmdb\/v0.0.39\/wckeys": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_39_get_wckeys",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_wckey_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_wckey_info"
                 }
               }
             },
             "description": "List of wckeys"
           },
           "default": {
             "description": "wckey not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "summary": "Get wckey list"
       },
       "post": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_39_add_wckeys",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             },
             "description": "List of wckeys"
           },
           "default": {
             "description": "Unable to add wckey",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "summary": "Add wckeys",
         "requestBody": {
           "description": "add wckeys",
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.39_wckey_info"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.39_wckey_info"
               }
             }
           },
           "required": false
         }
       }
     },
     "\/slurmdb\/v0.0.39\/account\/{account_name}": {
       "delete": {
         "tags": [
           "slurm"
         ],
         "summary": "Delete account",
         "operationId": "slurmdb_v0_0_39_delete_account",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             },
             "description": "Delete account"
           },
           "default": {
             "description": "Unable to delete account",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "parameters": [
           {
             "name": "account_name",
             "in": "path",
             "description": "Slurm Account Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ]
       },
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "Get account info",
         "operationId": "slurmdb_v0_0_39_get_account",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_account_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_account_info"
                 }
               }
             },
             "description": "List of accounts"
           },
           "default": {
             "description": "Account not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "parameters": [
           {
             "name": "account_name",
             "in": "path",
             "description": "Slurm Account Name",
             "required": true,
             "style": "simple",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "name": "with_deleted",
             "in": "query",
             "description": "Include deleted accounts. False by default.",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string",
               "enum": [
                 "true",
                 "false"
               ],
               "default": "false"
             }
           }
         ]
       }
     },
     "\/slurmdb\/v0.0.39\/accounts": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_39_get_accounts",
         "parameters": [
           {
             "name": "with_deleted",
             "in": "query",
             "description": "Include deleted accounts. False by default.",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string",
               "enum": [
                 "true",
                 "false"
               ],
               "default": "false"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_account_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_account_info"
                 }
               }
             },
             "description": "List of accounts"
           },
           "default": {
             "description": "Account not found",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "summary": "Get account list"
       },
       "post": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_39_update_accounts",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             },
             "description": "Add\/update list of accounts"
           },
           "default": {
             "description": "Unable to add or update accounts",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "summary": "Update accounts",
         "requestBody": {
           "description": "update\/create accounts",
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.39_account_info"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/dbv0.0.39_account_info"
               }
             }
           },
           "required": true
         }
       }
     },
     "\/slurmdb\/v0.0.39\/jobs": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_39_get_jobs",
         "parameters": [
           {
             "in": "query",
             "name": "users",
             "description": "Filter by comma delimited list of user names",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "submit_time",
             "description": "Filter by submission time\n Accepted formats:\n HH:MM[:SS] [AM|PM]\r\nMMDD[YY] or MM\/DD[\/YY] or MM.DD[.YY]\r\nMM\/DD[\/YY]-HH:MM[:SS]\r\nYYYY-MM-DD[THH:MM[:SS]]",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "start_time",
             "description": "Filter by start time\n Accepted formats:\n HH:MM[:SS] [AM|PM]\r\nMMDD[YY] or MM\/DD[\/YY] or MM.DD[.YY]\r\nMM\/DD[\/YY]-HH:MM[:SS]\r\nYYYY-MM-DD[THH:MM[:SS]]",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "end_time",
             "description": "Filter by end time\n Accepted formats:\n HH:MM[:SS] [AM|PM]\r\nMMDD[YY] or MM\/DD[\/YY] or MM.DD[.YY]\r\nMM\/DD[\/YY]-HH:MM[:SS]\r\nYYYY-MM-DD[THH:MM[:SS]]",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "account",
             "description": "Comma delimited list of accounts to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "association",
             "description": "Comma delimited list of associations to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "cluster",
             "description": "Comma delimited list of cluster to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "constraints",
             "description": "Comma delimited list of constraints to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "cpus_max",
             "description": "Number of CPUs high range",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "cpus_min",
             "description": "Number of CPUs low range",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "skip_steps",
             "description": "Report job step information",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string",
               "enum": [
                 "true",
                 "false"
               ],
               "default": "false"
             }
           },
           {
             "in": "query",
             "name": "disable_wait_for_result",
             "description": "Disable waiting for result from slurmdbd",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string",
               "enum": [
                 "true",
                 "false"
               ],
               "default": "false"
             }
           },
           {
             "in": "query",
             "name": "exit_code",
             "description": "Exit code of job",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "format",
             "description": "Comma delimited list of formats to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "group",
             "description": "Comma delimited list of groups to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "job_name",
             "description": "Comma delimited list of job names to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "nodes_max",
             "description": "Number of nodes high range",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "nodes_min",
             "description": "Number of nodes low range",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "partition",
             "description": "Comma delimited list of partitions to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "qos",
             "description": "Comma delimited list of QOS to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "reason",
             "description": "Comma delimited list of job reasons to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "reservation",
             "description": "Comma delimited list of reservations to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "state",
             "description": "Comma delimited list of states to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "step",
             "description": "Comma delimited list of job steps to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "node",
             "description": "Comma delimited list of used nodes to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "wckey",
             "description": "Comma delimited list of wckeys to match",
             "required": false,
             "style": "form",
             "explode": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_job_info"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_job_info"
                 }
               }
             },
             "description": "List of jobs"
           },
           "default": {
             "description": "Unable to query jobs",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "summary": "Get job list"
       }
     },
     "\/slurmdb\/v0.0.39\/diag": {
       "get": {
         "tags": [
           "slurm"
         ],
         "operationId": "slurmdb_v0_0_39_diag",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_diag"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/dbv0.0.39_diag"
                 }
               }
             },
             "description": "Dictionary of statistics"
           },
           "default": {
             "description": "Unable to query diagnostics",
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/status"
                 }
               }
             }
           }
         },
         "summary": "Get slurmdb diagnostics"
       }
     }
   },
   "components": {
     "schemas": {
       "v0.0.37_diag": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.37_error"
             }
           },
           "statistics": {
             "type": "object",
             "description": "Slurm statistics",
             "properties": {
               "parts_packed": {
                 "type": "integer",
                 "description": "partition records packed"
               },
               "req_time": {
                 "type": "integer",
                 "description": "generation time"
               },
               "req_time_start": {
                 "type": "integer",
                 "description": "data since"
               },
               "server_thread_count": {
                 "type": "integer",
                 "description": "Server thread count"
               },
               "agent_queue_size": {
                 "type": "integer",
                 "description": "Agent queue size"
               },
               "agent_count": {
                 "type": "integer",
                 "description": "Agent count"
               },
               "agent_thread_count": {
                 "type": "integer",
                 "description": "Agent thread count"
               },
               "dbd_agent_queue_size": {
                 "type": "integer",
                 "description": "DBD Agent queue size"
               },
               "gettimeofday_latency": {
                 "type": "integer",
                 "description": "Latency for 1000 calls to gettimeofday()"
               },
               "schedule_cycle_max": {
                 "type": "integer",
                 "description": "Main Schedule max cycle"
               },
               "schedule_cycle_last": {
                 "type": "integer",
                 "description": "Main Schedule last cycle"
               },
               "schedule_cycle_total": {
                 "type": "integer",
                 "description": "Main Schedule cycle iterations"
               },
               "schedule_cycle_mean": {
                 "type": "integer",
                 "description": "Average time for Schedule Max cycle"
               },
               "schedule_cycle_mean_depth": {
                 "type": "integer",
                 "description": "Average depth for Schedule Max cycle"
               },
               "schedule_cycle_per_minute": {
                 "type": "integer",
                 "description": "Main Schedule Cycles per minute"
               },
               "schedule_queue_length": {
                 "type": "integer",
                 "description": "Main Schedule Last queue length"
               },
               "jobs_submitted": {
                 "type": "integer",
                 "description": "Job submitted"
               },
               "jobs_started": {
                 "type": "integer",
                 "description": "Job started"
               },
               "jobs_completed": {
                 "type": "integer",
                 "description": "Job completed"
               },
               "jobs_canceled": {
                 "type": "integer",
                 "description": "Job cancelled"
               },
               "jobs_failed": {
                 "type": "integer",
                 "description": "Job failed"
               },
               "jobs_pending": {
                 "type": "integer",
                 "description": "Job pending"
               },
               "jobs_running": {
                 "type": "integer",
                 "description": "Job running"
               },
               "job_states_ts": {
                 "type": "integer",
                 "description": "Job states timestamp"
               },
               "bf_backfilled_jobs": {
                 "type": "integer",
                 "description": "Total backfilled jobs (since last slurm start)"
               },
               "bf_last_backfilled_jobs": {
                 "type": "integer",
                 "description": "Total backfilled jobs (since last stats cycle start)"
               },
               "bf_backfilled_het_jobs": {
                 "type": "integer",
                 "description": "Total backfilled heterogeneous job components"
               },
               "bf_cycle_counter": {
                 "type": "integer",
                 "description": "Backfill Schedule Total cycles"
               },
               "bf_cycle_mean": {
                 "type": "integer",
                 "description": "Backfill Schedule Mean cycle"
               },
               "bf_cycle_max": {
                 "type": "integer",
                 "description": "Backfill Schedule Max cycle time"
               },
               "bf_last_depth": {
                 "type": "integer",
                 "description": "Backfill Schedule Last depth cycle"
               },
               "bf_last_depth_try": {
                 "type": "integer",
                 "description": "Backfill Schedule Mean cycle (try sched)"
               },
               "bf_depth_mean": {
                 "type": "integer",
                 "description": "Backfill Schedule Depth Mean"
               },
               "bf_depth_mean_try": {
                 "type": "integer",
                 "description": "Backfill Schedule Depth Mean (try sched)"
               },
               "bf_cycle_last": {
                 "type": "integer",
                 "description": "Backfill Schedule Last cycle time"
               },
               "bf_queue_len": {
                 "type": "integer",
                 "description": "Backfill Schedule Last queue length"
               },
               "bf_queue_len_mean": {
                 "type": "integer",
                 "description": "Backfill Schedule Mean queue length"
               },
               "bf_when_last_cycle": {
                 "type": "integer",
                 "description": "Last cycle timestamp"
               },
               "bf_active": {
                 "type": "boolean",
                 "description": "Backfill Schedule currently active"
               }
             }
           }
         }
       },
       "v0.0.37_pings": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.37_error"
             }
           },
           "pings": {
             "type": "array",
             "description": "slurm controller pings",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.37_ping"
             }
           }
         }
       },
       "v0.0.37_ping": {
         "type": "object",
         "properties": {
           "hostname": {
             "type": "string",
             "description": "slurm controller hostname"
           },
           "ping": {
             "type": "string",
             "description": "slurm controller host up",
             "enum": [
               "UP",
               "DOWN"
             ]
           },
           "mode": {
             "type": "string",
             "description": "slurm controller mode"
           },
           "status": {
             "type": "integer",
             "description": "slurm controller status"
           }
         }
       },
       "v0.0.37_partition": {
         "type": "object",
         "properties": {
           "flags": {
             "type": "array",
             "description": "partition options",
             "items": {
               "type": "string"
             }
           },
           "preemption_mode": {
             "type": "array",
             "description": "preemption type",
             "items": {
               "type": "string"
             }
           },
           "allowed_allocation_nodes": {
             "type": "string",
             "description": "list names of allowed allocating nodes"
           },
           "allowed_accounts": {
             "type": "string",
             "description": "comma delimited list of accounts"
           },
           "allowed_groups": {
             "type": "string",
             "description": "comma delimited list of groups"
           },
           "allowed_qos": {
             "type": "string",
             "description": "comma delimited list of qos"
           },
           "alternative": {
             "type": "string",
             "description": "name of alternate partition"
           },
           "billing_weights": {
             "type": "string",
             "description": "TRES billing weights"
           },
           "default_memory_per_cpu": {
             "type": "integer",
             "format": "int64",
             "description": "default MB memory per allocated CPU"
           },
           "default_time_limit": {
             "type": "integer",
             "format": "int64",
             "description": "default time limit (minutes)"
           },
           "denied_accounts": {
             "type": "string",
             "description": "comma delimited list of denied accounts"
           },
           "denied_qos": {
             "type": "string",
             "description": "comma delimited list of denied qos"
           },
           "preemption_grace_time": {
             "type": "integer",
             "format": "int64",
             "description": "preemption grace time (seconds)"
           },
           "maximum_cpus_per_node": {
             "type": "integer",
             "description": "maximum allocated CPUs per node"
           },
           "maximum_memory_per_node": {
             "type": "integer",
             "format": "int64",
             "description": "maximum memory per allocated CPU (MiB)"
           },
           "maximum_nodes_per_job": {
             "type": "integer",
             "description": "Max nodes per job"
           },
           "max_time_limit": {
             "type": "integer",
             "format": "int64",
             "description": "Max time limit per job"
           },
           "min_nodes_per_job": {
             "type": "integer",
             "description": "Min number of nodes per job"
           },
           "name": {
             "type": "string",
             "description": "Partition name"
           },
           "nodes": {
             "type": "string",
             "description": "list names of nodes in partition"
           },
           "over_time_limit": {
             "type": "integer",
             "description": "job's time limit can be exceeded by this number of minutes before cancellation"
           },
           "priority_job_factor": {
             "type": "integer",
             "description": "job priority weight factor"
           },
           "priority_tier": {
             "type": "integer",
             "description": "tier for scheduling and preemption"
           },
           "qos": {
             "type": "string",
             "description": "partition QOS name"
           },
           "state": {
             "type": "string",
             "description": "Partition state"
           },
           "total_cpus": {
             "type": "integer",
             "description": "Total cpus in partition"
           },
           "total_nodes": {
             "type": "integer",
             "description": "Total number of nodes in partition"
           },
           "tres": {
             "type": "string",
             "description": "configured TRES in partition"
           }
         }
       },
       "v0.0.37_partitions_response": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.37_error"
             }
           },
           "partitions": {
             "type": "array",
             "description": "partition info",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.37_partition"
             }
           }
         }
       },
       "v0.0.37_reservation": {
         "type": "object",
         "properties": {
           "accounts": {
             "type": "string",
             "description": "Allowed accounts"
           },
           "burst_buffer": {
             "type": "string",
             "description": "Reserved burst buffer"
           },
           "core_count": {
             "type": "integer",
             "description": "Number of reserved cores"
           },
           "core_spec_cnt": {
             "type": "integer",
             "description": "Number of reserved specialized cores"
           },
           "end_time": {
             "type": "integer",
             "description": "End time of the reservation"
           },
           "features": {
             "type": "string",
             "description": "List of features"
           },
           "flags": {
             "type": "array",
             "description": "Reservation options",
             "items": {
               "type": "string"
             }
           },
           "groups": {
             "type": "string",
             "description": "List of groups permitted to use the reserved nodes"
           },
           "licenses": {
             "type": "string",
             "description": "List of licenses"
           },
           "max_start_delay": {
             "type": "integer",
             "description": "Maximum delay in which jobs outside of the reservation will be permitted to overlap once any jobs are queued for the reservation"
           },
           "name": {
             "type": "string",
             "description": "Reservationn name"
           },
           "node_count": {
             "type": "integer",
             "description": "Count of nodes reserved"
           },
           "node_list": {
             "type": "string",
             "description": "List of reserved nodes"
           },
           "partition": {
             "type": "string",
             "description": "Partition"
           },
           "purge_completed": {
             "type": "object",
             "description": "If PURGE_COMP flag is set the amount of seconds this reservation will sit idle until it is revoked",
             "properties": {
               "time": {
                 "type": "integer",
                 "description": "amount of seconds this reservation will sit idle until it is revoked"
               }
             }
           },
           "start_time": {
             "type": "integer",
             "description": "Start time of reservation"
           },
           "watts": {
             "type": "integer",
             "description": "amount of power to reserve in watts"
           },
           "tres": {
             "type": "string",
             "description": "List of TRES"
           },
           "users": {
             "type": "string",
             "description": "List of users"
           }
         }
       },
       "v0.0.37_reservations_response": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.37_error"
             }
           },
           "reservations": {
             "type": "array",
             "description": "reservation info",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.37_reservation"
             }
           }
         }
       },
       "v0.0.37_error": {
         "type": "object",
         "properties": {
           "error": {
             "type": "string",
             "description": "error message"
           },
           "errno": {
             "type": "integer",
             "description": "error number"
           }
         }
       },
       "v0.0.37_signal": {
         "type": "string",
         "description": "POSIX signal name",
         "format": "int32",
         "enum": [
           "HUP",
           "INT",
           "QUIT",
           "ABRT",
           "KILL",
           "ALRM",
           "TERM",
           "USR1",
           "USR2",
           "URG",
           "CONT",
           "STOP",
           "TSTP",
           "TTIN",
           "TTOU"
         ]
       },
       "v0.0.37_job_submission_response": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.37_error"
             }
           },
           "job_id": {
             "description": "new job ID",
             "type": "integer"
           },
           "step_id": {
             "description": "new job step ID",
             "type": "string"
           },
           "job_submit_user_msg": {
             "description": "Message to user from job_submit plugin",
             "type": "string"
           }
         }
       },
       "v0.0.37_job_submission": {
         "required": [
           "script"
         ],
         "properties": {
           "script": {
             "type": "string",
             "description": "Executable script (full contents) to run in batch step"
           },
           "job": {
             "description": "Properties of an array job or non-HetJob",
             "$ref": "#\/components\/schemas\/v0.0.37_job_properties"
           },
           "jobs": {
             "description": "Properties of an HetJob",
             "type": "array",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.37_job_properties"
             }
           }
         }
       },
       "v0.0.37_jobs_response": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.37_error"
             }
           },
           "jobs": {
             "type": "array",
             "description": "job descriptions",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.37_job_response_properties"
             }
           }
         }
       },
       "v0.0.37_job_response_properties": {
         "type": "object",
         "properties": {
           "account": {
             "type": "string",
             "description": "Charge resources used by this job to specified account"
           },
           "accrue_time": {
             "type": "integer",
             "format": "int64",
             "description": "time job is eligible for running"
           },
           "admin_comment": {
             "type": "string",
             "description": "administrator's arbitrary comment"
           },
           "array_job_id": {
             "type": "string",
             "description": "job_id of a job array or 0 if N\/A"
           },
           "array_task_id": {
             "type": "string",
             "description": "task_id of a job array"
           },
           "array_max_tasks": {
             "type": "string",
             "description": "Maximum number of running array tasks"
           },
           "array_task_string": {
             "type": "string",
             "description": "string expression of task IDs in this record"
           },
           "association_id": {
             "type": "string",
             "description": "association id for job"
           },
           "batch_features": {
             "type": "string",
             "description": "features required for batch script's node"
           },
           "batch_flag": {
             "type": "boolean",
             "description": "if batch: queued job with script"
           },
           "batch_host": {
             "type": "string",
             "description": "name of host running batch script"
           },
           "flags": {
             "type": "array",
             "description": "Job flags",
             "items": {
               "type": "string"
             }
           },
           "burst_buffer": {
             "type": "string",
             "description": "burst buffer specifications"
           },
           "burst_buffer_state": {
             "type": "string",
             "description": "burst buffer state info"
           },
           "cluster": {
             "type": "string",
             "description": "name of cluster that the job is on"
           },
           "cluster_features": {
             "type": "string",
             "description": "comma separated list of required cluster features"
           },
           "command": {
             "type": "string",
             "description": "command to be executed"
           },
           "comment": {
             "type": "string",
             "description": "arbitrary comment"
           },
           "contiguous": {
             "type": "boolean",
             "description": "job requires contiguous nodes"
           },
           "core_spec": {
             "type": "string",
             "description": "specialized core count"
           },
           "thread_spec": {
             "type": "string",
             "description": "specialized thread count"
           },
           "cores_per_socket": {
             "type": "string",
             "description": "cores per socket required by job"
           },
           "billable_tres": {
             "type": "string",
             "description": "billable TRES"
           },
           "cpus_per_task": {
             "type": "string",
             "description": "number of processors required for each task"
           },
           "cpu_frequency_minimum": {
             "type": "string",
             "description": "Minimum cpu frequency"
           },
           "cpu_frequency_maximum": {
             "type": "string",
             "description": "Maximum cpu frequency"
           },
           "cpu_frequency_governor": {
             "type": "string",
             "description": "cpu frequency governor"
           },
           "cpus_per_tres": {
             "type": "string",
             "description": "semicolon delimited list of TRES=# values"
           },
           "deadline": {
             "type": "string",
             "description": "job start deadline "
           },
           "delay_boot": {
             "type": "string",
             "description": "command to be executed"
           },
           "dependency": {
             "type": "string",
             "description": "synchronize job execution with other jobs"
           },
           "derived_exit_code": {
             "type": "string",
             "description": "highest exit code of all job steps"
           },
           "eligible_time": {
             "type": "integer",
             "format": "int64",
             "description": "time job is eligible for running"
           },
           "end_time": {
             "type": "integer",
             "format": "int64",
             "description": "time of termination, actual or expected"
           },
           "excluded_nodes": {
             "type": "string",
             "description": "comma separated list of excluded nodes"
           },
           "exit_code": {
             "type": "integer",
             "description": "exit code for job"
           },
           "features": {
             "type": "string",
             "description": "comma separated list of required features"
           },
           "federation_origin": {
             "type": "string",
             "description": "Origin cluster's name"
           },
           "federation_siblings_active": {
             "type": "string",
             "description": "string of active sibling names"
           },
           "federation_siblings_viable": {
             "type": "string",
             "description": "string of viable sibling names"
           },
           "gres_detail": {
             "type": "array",
             "description": "Job flags",
             "items": {
               "type": "string"
             }
           },
           "group_id": {
             "type": "string",
             "description": "group job submitted as"
           },
           "job_id": {
             "type": "string",
             "description": "job ID"
           },
           "job_resources": {
             "$ref": "#\/components\/schemas\/v0.0.37_job_resources"
           },
           "job_state": {
             "type": "string",
             "description": "state of the job"
           },
           "last_sched_evaluation": {
             "type": "string",
             "description": "last time job was evaluated for scheduling"
           },
           "licenses": {
             "type": "string",
             "description": "licenses required by the job"
           },
           "max_cpus": {
             "type": "string",
             "description": "maximum number of cpus usable by job"
           },
           "max_nodes": {
             "type": "string",
             "description": "maximum number of nodes usable by job"
           },
           "mcs_label": {
             "type": "string",
             "description": "mcs_label if mcs plugin in use"
           },
           "memory_per_tres": {
             "type": "string",
             "description": "semicolon delimited list of TRES=# values"
           },
           "name": {
             "type": "string",
             "description": "name of the job"
           },
           "nodes": {
             "type": "string",
             "description": "list of nodes allocated to job"
           },
           "nice": {
             "type": "string",
             "description": "requested priority change"
           },
           "tasks_per_core": {
             "type": "string",
             "description": "number of tasks to invoke on each core"
           },
           "tasks_per_socket": {
             "type": "string",
             "description": "number of tasks to invoke on each socket"
           },
           "tasks_per_board": {
             "type": "string",
             "description": "number of tasks to invoke on each board"
           },
           "cpus": {
             "type": "string",
             "description": "minimum number of cpus required by job"
           },
           "node_count": {
             "type": "string",
             "description": "minimum number of nodes required by job"
           },
           "tasks": {
             "type": "string",
             "description": "requested task count"
           },
           "het_job_id": {
             "type": "string",
             "description": "job ID of hetjob leader"
           },
           "het_job_id_set": {
             "type": "string",
             "description": "job IDs for all components"
           },
           "het_job_offset": {
             "type": "string",
             "description": "HetJob component offset from leader"
           },
           "partition": {
             "type": "string",
             "description": "name of assigned partition"
           },
           "memory_per_node": {
             "type": "string",
             "description": "minimum real memory per node"
           },
           "memory_per_cpu": {
             "type": "string",
             "description": "minimum real memory per cpu"
           },
           "minimum_cpus_per_node": {
             "type": "string",
             "description": "minimum # CPUs per node"
           },
           "minimum_tmp_disk_per_node": {
             "type": "string",
             "description": "minimum tmp disk per node"
           },
           "preempt_time": {
             "type": "integer",
             "format": "int64",
             "description": "preemption signal time"
           },
           "pre_sus_time": {
             "type": "integer",
             "format": "int64",
             "description": "time job ran prior to last suspend"
           },
           "priority": {
             "type": "string",
             "description": "relative priority of the job"
           },
           "profile": {
             "type": "array",
             "description": "Job profiling requested",
             "items": {
               "type": "string"
             }
           },
           "qos": {
             "type": "string",
             "description": "Quality of Service"
           },
           "reboot": {
             "type": "boolean",
             "description": "node reboot requested before start"
           },
           "required_nodes": {
             "type": "string",
             "description": "comma separated list of required nodes"
           },
           "requeue": {
             "type": "boolean",
             "description": "enable or disable job requeue option"
           },
           "resize_time": {
             "type": "integer",
             "format": "int64",
             "description": "time of latest size change"
           },
           "restart_cnt": {
             "type": "string",
             "description": "count of job restarts"
           },
           "resv_name": {
             "type": "string",
             "description": "reservation name"
           },
           "shared": {
             "type": "string",
             "description": "type and if job can share nodes with other jobs"
           },
           "show_flags": {
             "type": "array",
             "description": "details requested",
             "items": {
               "type": "string"
             }
           },
           "sockets_per_board": {
             "type": "string",
             "description": "sockets per board required by job"
           },
           "sockets_per_node": {
             "type": "string",
             "description": "sockets per node required by job"
           },
           "start_time": {
             "type": "integer",
             "format": "int64",
             "description": "time execution begins, actual or expected"
           },
           "state_description": {
             "type": "string",
             "description": "optional details for state_reason"
           },
           "state_reason": {
             "type": "string",
             "description": "reason job still pending or failed"
           },
           "standard_error": {
             "type": "string",
             "description": "pathname of job's stderr file"
           },
           "standard_input": {
             "type": "string",
             "description": "pathname of job's stdin file"
           },
           "standard_output": {
             "type": "string",
             "description": "pathname of job's stdout file"
           },
           "submit_time": {
             "type": "integer",
             "format": "int64",
             "description": "time of job submission"
           },
           "suspend_time": {
             "type": "integer",
             "format": "int64",
             "description": "time job last suspended or resumed"
           },
           "system_comment": {
             "type": "string",
             "description": "slurmctld's arbitrary comment"
           },
           "time_limit": {
             "type": "string",
             "description": "maximum run time in minutes"
           },
           "time_minimum": {
             "type": "string",
             "description": "minimum run time in minutes"
           },
           "threads_per_core": {
             "type": "string",
             "description": "threads per core required by job"
           },
           "tres_bind": {
             "type": "string",
             "description": "Task to TRES binding directives"
           },
           "tres_freq": {
             "type": "string",
             "description": "TRES frequency directives"
           },
           "tres_per_job": {
             "type": "string",
             "description": "semicolon delimited list of TRES=# values"
           },
           "tres_per_node": {
             "type": "string",
             "description": "semicolon delimited list of TRES=# values"
           },
           "tres_per_socket": {
             "type": "string",
             "description": "semicolon delimited list of TRES=# values"
           },
           "tres_per_task": {
             "type": "string",
             "description": "semicolon delimited list of TRES=# values"
           },
           "tres_req_str": {
             "type": "string",
             "description": "tres reqeusted in the job"
           },
           "tres_alloc_str": {
             "type": "string",
             "description": "tres used in the job"
           },
           "user_id": {
             "type": "string",
             "description": "user id the job runs as"
           },
           "user_name": {
             "type": "string",
             "description": "user the job runs as"
           },
           "wckey": {
             "type": "string",
             "description": "wckey for job"
           },
           "current_working_directory": {
             "type": "string",
             "description": "pathname of working directory"
           }
         }
       },
       "v0.0.37_job_resources": {
         "type": "object",
         "properties": {
           "nodes": {
             "type": "string",
             "description": "list of assigned job nodes"
           },
           "allocated_cpus": {
             "type": "integer",
             "description": "number of assigned job cpus"
           },
           "allocated_hosts": {
             "type": "integer",
             "description": "number of assigned job hosts"
           },
           "allocated_nodes": {
             "type": "array",
             "description": "node allocations",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.37_node_allocation"
             }
           }
         }
       },
       "v0.0.37_node_allocation": {
         "type": "object",
         "properties": {
           "memory": {
             "type": "integer",
             "description": "amount of assigned job memory"
           },
           "cpus": {
             "type": "object",
             "description": "amount of assigned job CPUs"
           },
           "sockets": {
             "type": "object",
             "description": "assignment status of each socket by socket id"
           },
           "cores": {
             "type": "object",
             "description": "assignment status of each core by core id"
           }
         }
       },
       "v0.0.37_job_properties": {
         "type": "object",
         "required": [
           "environment"
         ],
         "properties": {
           "account": {
             "type": "string",
             "description": "Charge resources used by this job to specified account."
           },
           "account_gather_frequency": {
             "type": "string",
             "description": "Define the job accounting and profiling sampling intervals."
           },
           "argv": {
             "type": "array",
             "description": "Arguments to the script.",
             "items": {
               "type": "string"
             }
           },
           "array": {
             "type": "string",
             "description": "Submit a job array, multiple jobs to be executed with identical parameters. The indexes specification identifies what array index values should be used."
           },
           "batch_features": {
             "type": "string",
             "description": "features required for batch script's node"
           },
           "begin_time": {
             "type": "integer",
             "format": "int64",
             "description": "Submit the batch script to the Slurm controller immediately, like normal, but tell the controller to defer the allocation of the job until the specified time."
           },
           "burst_buffer": {
             "type": "string",
             "description": "Burst buffer specification."
           },
           "cluster_constraint": {
             "type": "string",
             "description": "Specifies features that a federated cluster must have to have a sibling job submitted to it."
           },
           "comment": {
             "type": "string",
             "description": "An arbitrary comment."
           },
           "constraints": {
             "type": "string",
             "description": "node features required by job."
           },
           "core_specification": {
             "type": "integer",
             "description": "Count of specialized threads per node reserved by the job for system operations and not used by the application."
           },
           "cores_per_socket": {
             "type": "integer",
             "description": "Restrict node selection to nodes with at least the specified number of cores per socket."
           },
           "cpu_binding": {
             "type": "string",
             "description": "Cpu binding"
           },
           "cpu_binding_hint": {
             "type": "string",
             "description": "Cpu binding hint"
           },
           "cpu_frequency": {
             "type": "string",
             "description": "Request that job steps initiated by srun commands inside this sbatch script be run at some requested frequency if possible, on the CPUs selected for the step on the compute node(s)."
           },
           "cpus_per_gpu": {
             "type": "string",
             "description": "Number of CPUs requested per allocated GPU."
           },
           "cpus_per_task": {
             "type": "integer",
             "description": "Advise the Slurm controller that ensuing job steps will require ncpus number of processors per task."
           },
           "current_working_directory": {
             "type": "string",
             "description": "Instruct Slurm to connect the batch script's standard output directly to the file name."
           },
           "deadline": {
             "type": "string",
             "description": "Remove the job if no ending is possible before this deadline (start > (deadline - time[-min]))."
           },
           "delay_boot": {
             "type": "integer",
             "description": "Do not reboot nodes in order to satisfied this job's feature specification if the job has been eligible to run for less than this time period."
           },
           "dependency": {
             "type": "string",
             "description": "Defer the start of this job until the specified dependencies have been satisfied completed."
           },
           "distribution": {
             "type": "string",
             "description": "Specify alternate distribution methods for remote processes."
           },
           "environment": {
             "type": "object",
             "description": "Dictionary of environment entries."
           },
           "exclusive": {
             "type": "string",
             "description": "The job allocation can share nodes just other users with the \"user\" option or with the \"mcs\" option).",
             "enum": [
               "user",
               "mcs",
               "true",
               "false"
             ]
           },
           "get_user_environment": {
             "type": "boolean",
             "description": "Load new login environment for user on job node."
           },
           "gres": {
             "type": "string",
             "description": "Specifies a comma delimited list of generic consumable resources."
           },
           "gres_flags": {
             "type": "string",
             "description": "Specify generic resource task binding options.",
             "enum": [
               "disable-binding",
               "enforce-binding"
             ]
           },
           "gpu_binding": {
             "type": "string",
             "description": "Requested binding of tasks to GPU."
           },
           "gpu_frequency": {
             "type": "string",
             "description": "Requested GPU frequency."
           },
           "gpus": {
             "type": "string",
             "description": "GPUs per job."
           },
           "gpus_per_node": {
             "type": "string",
             "description": "GPUs per node."
           },
           "gpus_per_socket": {
             "type": "string",
             "description": "GPUs per socket."
           },
           "gpus_per_task": {
             "type": "string",
             "description": "GPUs per task."
           },
           "hold": {
             "type": "boolean",
             "description": "Specify the job is to be submitted in a held state (priority of zero)."
           },
           "kill_on_invalid_dependency": {
             "type": "boolean",
             "description": "If a job has an invalid dependency, then Slurm is to terminate it."
           },
           "licenses": {
             "type": "string",
             "description": "Specification of licenses (or other resources available on all nodes of the cluster) which must be allocated to this job."
           },
           "mail_type": {
             "type": "string",
             "description": "Notify user by email when certain event types occur."
           },
           "mail_user": {
             "type": "string",
             "description": "User to receive email notification of state changes as defined by mail_type."
           },
           "mcs_label": {
             "type": "string",
             "description": "This parameter is a group among the groups of the user."
           },
           "memory_binding": {
             "type": "string",
             "description": "Bind tasks to memory."
           },
           "memory_per_cpu": {
             "type": "integer",
             "description": "Minimum real memory per cpu (MB)."
           },
           "memory_per_gpu": {
             "type": "integer",
             "description": "Minimum memory required per allocated GPU."
           },
           "memory_per_node": {
             "type": "integer",
             "description": "Minimum real memory per node (MB)."
           },
           "minimum_cpus_per_node": {
             "type": "integer",
             "description": "Minimum number of CPUs per node."
           },
           "minimum_nodes": {
             "type": "boolean",
             "description": "If a range of node counts is given, prefer the smaller count."
           },
           "name": {
             "type": "string",
             "description": "Specify a name for the job allocation."
           },
           "nice": {
             "type": "string",
             "description": "Run the job with an adjusted scheduling priority within Slurm."
           },
           "no_kill": {
             "type": "boolean",
             "description": "Do not automatically terminate a job if one of the nodes it has been allocated fails."
           },
           "nodes": {
             "maxItems": 2,
             "minItems": 1,
             "type": "array",
             "description": "Request that a minimum of minnodes nodes and a maximum node count.",
             "items": {
               "type": "integer"
             }
           },
           "open_mode": {
             "type": "string",
             "description": "Open the output and error files using append or truncate mode as specified.",
             "default": "append",
             "enum": [
               "append",
               "truncate"
             ]
           },
           "partition": {
             "type": "string",
             "description": "Request a specific partition for the resource allocation."
           },
           "priority": {
             "type": "string",
             "description": "Request a specific job priority."
           },
           "qos": {
             "type": "string",
             "description": "Request a quality of service for the job."
           },
           "requeue": {
             "type": "boolean",
             "description": "Specifies that the batch job should eligible to being requeue."
           },
           "reservation": {
             "type": "string",
             "description": "Allocate resources for the job from the named reservation."
           },
           "signal": {
             "pattern": "(B:|)sig_num(@sig_time|)",
             "type": "string",
             "description": "When a job is within sig_time seconds of its end time, send it the signal sig_num."
           },
           "sockets_per_node": {
             "type": "integer",
             "description": "Restrict node selection to nodes with at least the specified number of sockets."
           },
           "spread_job": {
             "type": "boolean",
             "description": "Spread the job allocation over as many nodes as possible and attempt to evenly distribute tasks across the allocated nodes."
           },
           "standard_error": {
             "type": "string",
             "description": "Instruct Slurm to connect the batch script's standard error directly to the file name."
           },
           "standard_input": {
             "type": "string",
             "description": "Instruct Slurm to connect the batch script's standard input directly to the file name specified."
           },
           "standard_output": {
             "type": "string",
             "description": "Instruct Slurm to connect the batch script's standard output directly to the file name."
           },
           "tasks": {
             "type": "integer",
             "description": "Advises the Slurm controller that job steps run within the allocation will launch a maximum of number tasks and to provide for sufficient resources."
           },
           "tasks_per_core": {
             "type": "integer",
             "description": "Request the maximum ntasks be invoked on each core."
           },
           "tasks_per_node": {
             "type": "integer",
             "description": "Request the maximum ntasks be invoked on each node."
           },
           "tasks_per_socket": {
             "type": "integer",
             "description": "Request the maximum ntasks be invoked on each socket."
           },
           "thread_specification": {
             "type": "integer",
             "description": "Count of specialized threads per node reserved by the job for system operations and not used by the application."
           },
           "threads_per_core": {
             "type": "integer",
             "description": "Restrict node selection to nodes with at least the specified number of threads per core."
           },
           "time_limit": {
             "type": "integer",
             "description": "Step time limit."
           },
           "time_minimum": {
             "type": "integer",
             "description": "Minimum run time in minutes."
           },
           "wait_all_nodes": {
             "type": "boolean",
             "description": "Do not begin execution until all nodes are ready for use."
           },
           "wckey": {
             "type": "string",
             "description": "Specify wckey to be used with job."
           }
         }
       },
       "v0.0.37_node": {
         "type": "object",
         "properties": {
           "architecture": {
             "type": "string",
             "description": "computer architecture"
           },
           "burstbuffer_network_address": {
             "type": "string",
             "description": "BcastAddr"
           },
           "boards": {
             "type": "integer",
             "description": "total number of boards per node"
           },
           "boot_time": {
             "type": "integer",
             "format": "int64",
             "description": "timestamp of node boot"
           },
           "cores": {
             "type": "integer",
             "description": "number of cores per socket"
           },
           "cpu_binding": {
             "type": "integer",
             "description": "Default task binding"
           },
           "cpu_load": {
             "type": "integer",
             "format": "int64",
             "description": "CPU load * 100"
           },
           "free_memory": {
             "type": "integer",
             "description": "free memory in MiB"
           },
           "cpus": {
             "type": "integer",
             "description": "configured count of cpus running on the node"
           },
           "features": {
             "type": "string",
             "description": ""
           },
           "active_features": {
             "type": "string",
             "description": "list of a node's available features"
           },
           "gres": {
             "type": "string",
             "description": "list of a node's generic resources"
           },
           "gres_drained": {
             "type": "string",
             "description": "list of drained GRES"
           },
           "gres_used": {
             "type": "string",
             "description": "list of GRES in current use"
           },
           "mcs_label": {
             "type": "string",
             "description": "mcs label if mcs plugin in use"
           },
           "name": {
             "type": "string",
             "description": "node name to slurm"
           },
           "next_state_after_reboot": {
             "type": "string",
             "description": "state after reboot"
           },
           "next_state_after_reboot_flags": {
             "type": "array",
             "description": "node state flags",
             "items": {
               "type": "string"
             }
           },
           "address": {
             "type": "string",
             "description": "state after reboot"
           },
           "hostname": {
             "type": "string",
             "description": "node's hostname"
           },
           "state": {
             "type": "string",
             "description": "current node state"
           },
           "state_flags": {
             "type": "array",
             "description": "node state flags",
             "items": {
               "type": "string"
             }
           },
           "operating_system": {
             "type": "string",
             "description": "operating system"
           },
           "owner": {
             "type": "string",
             "description": "User allowed to use this node"
           },
           "partitions": {
             "type": "array",
             "description": "assigned partitions",
             "items": {
               "type": "string"
             }
           },
           "port": {
             "type": "integer",
             "description": "TCP port number of the slurmd"
           },
           "real_memory": {
             "type": "integer",
             "description": "configured MB of real memory on the node"
           },
           "reason": {
             "type": "string",
             "description": "reason for node being DOWN or DRAINING"
           },
           "reason_changed_at": {
             "type": "integer",
             "description": "Time stamp when reason was set"
           },
           "reason_set_by_user": {
             "type": "string",
             "description": "User that set the reason"
           },
           "slurmd_start_time": {
             "type": "integer",
             "format": "int64",
             "description": "timestamp of slurmd startup"
           },
           "sockets": {
             "type": "integer",
             "description": "total number of sockets per node"
           },
           "threads": {
             "type": "integer",
             "description": "number of threads per core"
           },
           "temporary_disk": {
             "type": "integer",
             "description": "configured MB of total disk in TMP_FS"
           },
           "weight": {
             "type": "integer",
             "description": "arbitrary priority of node for scheduling"
           },
           "tres": {
             "type": "string",
             "description": "TRES on node"
           },
           "tres_used": {
             "type": "string",
             "description": "TRES used on node"
           },
           "tres_weighted": {
             "type": "number",
             "format": "double",
             "description": "TRES weight used on node"
           },
           "slurmd_version": {
             "type": "string",
             "description": "Slurmd version"
           },
           "alloc_cpus": {
             "type": "integer",
             "format": "int64",
             "description": "Allocated CPUs"
           },
           "idle_cpus": {
             "type": "integer",
             "format": "int64",
             "description": "Idle CPUs"
           },
           "alloc_memory": {
             "type": "integer",
             "format": "int64",
             "description": "Allocated memory (MB)"
           }
         }
       },
       "v0.0.37_nodes_response": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.37_error"
             }
           },
           "nodes": {
             "type": "array",
             "description": "nodes info",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.37_node"
             }
           }
         }
       },
       "v0.0.38_diag": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.38_error"
             }
           },
           "statistics": {
             "type": "object",
             "description": "Slurm statistics",
             "properties": {
               "parts_packed": {
                 "type": "integer",
                 "description": "partition records packed"
               },
               "req_time": {
                 "type": "integer",
                 "description": "generation time"
               },
               "req_time_start": {
                 "type": "integer",
                 "description": "data since"
               },
               "server_thread_count": {
                 "type": "integer",
                 "description": "Server thread count"
               },
               "agent_queue_size": {
                 "type": "integer",
                 "description": "Agent queue size"
               },
               "agent_count": {
                 "type": "integer",
                 "description": "Agent count"
               },
               "agent_thread_count": {
                 "type": "integer",
                 "description": "Agent thread count"
               },
               "dbd_agent_queue_size": {
                 "type": "integer",
                 "description": "DBD Agent queue size"
               },
               "gettimeofday_latency": {
                 "type": "integer",
                 "description": "Latency for 1000 calls to gettimeofday()"
               },
               "schedule_cycle_max": {
                 "type": "integer",
                 "description": "Main Schedule max cycle"
               },
               "schedule_cycle_last": {
                 "type": "integer",
                 "description": "Main Schedule last cycle"
               },
               "schedule_cycle_total": {
                 "type": "integer",
                 "description": "Main Schedule cycle iterations"
               },
               "schedule_cycle_mean": {
                 "type": "integer",
                 "description": "Average time for Schedule Max cycle"
               },
               "schedule_cycle_mean_depth": {
                 "type": "integer",
                 "description": "Average depth for Schedule Max cycle"
               },
               "schedule_cycle_per_minute": {
                 "type": "integer",
                 "description": "Main Schedule Cycles per minute"
               },
               "schedule_queue_length": {
                 "type": "integer",
                 "description": "Main Schedule Last queue length"
               },
               "jobs_submitted": {
                 "type": "integer",
                 "description": "Job submitted"
               },
               "jobs_started": {
                 "type": "integer",
                 "description": "Job started"
               },
               "jobs_completed": {
                 "type": "integer",
                 "description": "Job completed"
               },
               "jobs_canceled": {
                 "type": "integer",
                 "description": "Job cancelled"
               },
               "jobs_failed": {
                 "type": "integer",
                 "description": "Job failed"
               },
               "jobs_pending": {
                 "type": "integer",
                 "description": "Job pending"
               },
               "jobs_running": {
                 "type": "integer",
                 "description": "Job running"
               },
               "job_states_ts": {
                 "type": "integer",
                 "description": "Job states timestamp"
               },
               "bf_backfilled_jobs": {
                 "type": "integer",
                 "description": "Total backfilled jobs (since last slurm start)"
               },
               "bf_last_backfilled_jobs": {
                 "type": "integer",
                 "description": "Total backfilled jobs (since last stats cycle start)"
               },
               "bf_backfilled_het_jobs": {
                 "type": "integer",
                 "description": "Total backfilled heterogeneous job components"
               },
               "bf_cycle_counter": {
                 "type": "integer",
                 "description": "Backfill Schedule Total cycles"
               },
               "bf_cycle_mean": {
                 "type": "integer",
                 "description": "Backfill Schedule Mean cycle"
               },
               "bf_cycle_max": {
                 "type": "integer",
                 "description": "Backfill Schedule Max cycle time"
               },
               "bf_last_depth": {
                 "type": "integer",
                 "description": "Backfill Schedule Last depth cycle"
               },
               "bf_last_depth_try": {
                 "type": "integer",
                 "description": "Backfill Schedule Mean cycle (try sched)"
               },
               "bf_depth_mean": {
                 "type": "integer",
                 "description": "Backfill Schedule Depth Mean"
               },
               "bf_depth_mean_try": {
                 "type": "integer",
                 "description": "Backfill Schedule Depth Mean (try sched)"
               },
               "bf_cycle_last": {
                 "type": "integer",
                 "description": "Backfill Schedule Last cycle time"
               },
               "bf_queue_len": {
                 "type": "integer",
                 "description": "Backfill Schedule Last queue length"
               },
               "bf_queue_len_mean": {
                 "type": "integer",
                 "description": "Backfill Schedule Mean queue length"
               },
               "bf_table_size": {
                 "type": "integer",
                 "description": "Backfill Schedule Last table size"
               },
               "bf_table_size_mean": {
                 "type": "integer",
                 "description": "Backfill Schedule Mean table size"
               },
               "bf_when_last_cycle": {
                 "type": "integer",
                 "description": "Last cycle timestamp"
               },
               "bf_active": {
                 "type": "boolean",
                 "description": "Backfill Schedule currently active"
               },
               "rpcs_by_message_type": {
                 "type": "array",
                 "description": "Remote Procedure Call statistics by message type",
                 "items": {
                   "$ref": "#\/components\/schemas\/v0.0.38_diag_rpcm"
                 }
               },
               "rpcs_by_user": {
                 "type": "array",
                 "description": "Remote Procedure Call statistics by user",
                 "items": {
                   "$ref": "#\/components\/schemas\/v0.0.38_diag_rpcu"
                 }
               }
             }
           }
         }
       },
       "v0.0.38_diag_rpcm": {
         "type": "object",
         "properties": {
           "message_type": {
             "type": "string",
             "description": "message type"
           },
           "type_id": {
             "type": "integer",
             "description": "message type id"
           },
           "count": {
             "type": "integer",
             "description": "rpc count"
           },
           "average_time": {
             "type": "integer",
             "description": "average time"
           },
           "total_time": {
             "type": "integer",
             "description": "total time"
           }
         }
       },
       "v0.0.38_diag_rpcu": {
         "type": "object",
         "properties": {
           "user": {
             "type": "string",
             "description": "user"
           },
           "user_id": {
             "type": "integer",
             "description": "user id"
           },
           "count": {
             "type": "integer",
             "description": "rpc count"
           },
           "average_time": {
             "type": "integer",
             "description": "average time"
           },
           "total_time": {
             "type": "integer",
             "description": "total time"
           }
         }
       },
       "v0.0.38_licenses": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.38_error"
             }
           },
           "licenses": {
             "type": "array",
             "description": "licenses info",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.38_license"
             }
           }
         }
       },
       "v0.0.38_license": {
         "type": "object",
         "properties": {
           "LicenseName": {
             "type": "string",
             "description": "name of license"
           },
           "Total": {
             "type": "integer",
             "description": "total number of licenses"
           },
           "Used": {
             "type": "integer",
             "description": "number of licenses in use"
           },
           "Free": {
             "type": "integer",
             "description": "number of licenses available"
           },
           "Reserved": {
             "type": "integer",
             "description": "number of licenses reserved"
           },
           "Remote": {
             "type": "boolean",
             "description": "license is remote"
           }
         }
       },
       "v0.0.38_pings": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.38_error"
             }
           },
           "pings": {
             "type": "array",
             "description": "slurm controller pings",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.38_ping"
             }
           }
         }
       },
       "v0.0.38_ping": {
         "type": "object",
         "properties": {
           "hostname": {
             "type": "string",
             "description": "slurm controller hostname"
           },
           "ping": {
             "type": "string",
             "description": "slurm controller host up",
             "enum": [
               "UP",
               "DOWN"
             ]
           },
           "mode": {
             "type": "string",
             "description": "slurm controller mode"
           },
           "status": {
             "type": "integer",
             "description": "slurm controller status"
           }
         }
       },
       "v0.0.38_partition": {
         "type": "object",
         "properties": {
           "flags": {
             "type": "array",
             "description": "partition options",
             "items": {
               "type": "string"
             }
           },
           "preemption_mode": {
             "type": "array",
             "description": "preemption type",
             "items": {
               "type": "string"
             }
           },
           "allowed_allocation_nodes": {
             "type": "string",
             "description": "list names of allowed allocating nodes"
           },
           "allowed_accounts": {
             "type": "string",
             "description": "comma delimited list of accounts"
           },
           "allowed_groups": {
             "type": "string",
             "description": "comma delimited list of groups"
           },
           "allowed_qos": {
             "type": "string",
             "description": "comma delimited list of qos"
           },
           "alternative": {
             "type": "string",
             "description": "name of alternate partition"
           },
           "billing_weights": {
             "type": "string",
             "description": "TRES billing weights"
           },
           "default_memory_per_cpu": {
             "type": "integer",
             "format": "int64",
             "description": "default MB memory per allocated CPU"
           },
           "default_time_limit": {
             "type": "integer",
             "format": "int64",
             "description": "default time limit (minutes)"
           },
           "denied_accounts": {
             "type": "string",
             "description": "comma delimited list of denied accounts"
           },
           "denied_qos": {
             "type": "string",
             "description": "comma delimited list of denied qos"
           },
           "preemption_grace_time": {
             "type": "integer",
             "format": "int64",
             "description": "preemption grace time (seconds)"
           },
           "maximum_cpus_per_node": {
             "type": "integer",
             "description": "maximum allocated CPUs per node"
           },
           "maximum_memory_per_node": {
             "type": "integer",
             "format": "int64",
             "description": "maximum memory per allocated node (MiB)"
           },
           "maximum_nodes_per_job": {
             "type": "integer",
             "description": "Max nodes per job"
           },
           "max_time_limit": {
             "type": "integer",
             "format": "int64",
             "description": "Max time limit per job"
           },
           "min_nodes_per_job": {
             "type": "integer",
             "description": "Min number of nodes per job"
           },
           "name": {
             "type": "string",
             "description": "Partition name"
           },
           "nodes": {
             "type": "string",
             "description": "list names of nodes in partition"
           },
           "over_time_limit": {
             "type": "integer",
             "description": "job's time limit can be exceeded by this number of minutes before cancellation"
           },
           "priority_job_factor": {
             "type": "integer",
             "description": "job priority weight factor"
           },
           "priority_tier": {
             "type": "integer",
             "description": "tier for scheduling and preemption"
           },
           "qos": {
             "type": "string",
             "description": "partition QOS name"
           },
           "state": {
             "type": "string",
             "description": "Partition state"
           },
           "total_cpus": {
             "type": "integer",
             "description": "Total cpus in partition"
           },
           "total_nodes": {
             "type": "integer",
             "description": "Total number of nodes in partition"
           },
           "tres": {
             "type": "string",
             "description": "configured TRES in partition"
           },
           "maximum_memory_per_cpu": {
             "type": "integer",
             "format": "int64",
             "description": "maximum memory per allocated CPU (MiB)"
           },
           "default_memory_per_node": {
             "type": "integer",
             "format": "int64",
             "description": "default MB memory per allocated node"
           }
         }
       },
       "v0.0.38_partitions_response": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.38_error"
             }
           },
           "partitions": {
             "type": "array",
             "description": "partition info",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.38_partition"
             }
           }
         }
       },
       "v0.0.38_reservation": {
         "type": "object",
         "properties": {
           "accounts": {
             "type": "string",
             "description": "Allowed accounts"
           },
           "burst_buffer": {
             "type": "string",
             "description": "Reserved burst buffer"
           },
           "core_count": {
             "type": "integer",
             "description": "Number of reserved cores"
           },
           "core_spec_cnt": {
             "type": "integer",
             "description": "Number of reserved specialized cores"
           },
           "end_time": {
             "type": "integer",
             "description": "End time of the reservation"
           },
           "features": {
             "type": "string",
             "description": "List of features"
           },
           "flags": {
             "type": "array",
             "description": "Reservation options",
             "items": {
               "type": "string"
             }
           },
           "groups": {
             "type": "string",
             "description": "List of groups permitted to use the reserved nodes"
           },
           "licenses": {
             "type": "string",
             "description": "List of licenses"
           },
           "max_start_delay": {
             "type": "integer",
             "description": "Maximum delay in which jobs outside of the reservation will be permitted to overlap once any jobs are queued for the reservation"
           },
           "name": {
             "type": "string",
             "description": "Reservationn name"
           },
           "node_count": {
             "type": "integer",
             "description": "Count of nodes reserved"
           },
           "node_list": {
             "type": "string",
             "description": "List of reserved nodes"
           },
           "partition": {
             "type": "string",
             "description": "Partition"
           },
           "purge_completed": {
             "type": "object",
             "description": "If PURGE_COMP flag is set the amount of seconds this reservation will sit idle until it is revoked",
             "properties": {
               "time": {
                 "type": "integer",
                 "description": "amount of seconds this reservation will sit idle until it is revoked"
               }
             }
           },
           "start_time": {
             "type": "integer",
             "description": "Start time of reservation"
           },
           "watts": {
             "type": "integer",
             "description": "amount of power to reserve in watts"
           },
           "tres": {
             "type": "string",
             "description": "List of TRES"
           },
           "users": {
             "type": "string",
             "description": "List of users"
           }
         }
       },
       "v0.0.38_reservations_response": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.38_error"
             }
           },
           "reservations": {
             "type": "array",
             "description": "reservation info",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.38_reservation"
             }
           }
         }
       },
       "v0.0.38_errors": {
         "type": "array",
         "description": "Slurm errors",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.38_error"
         }
       },
       "v0.0.38_error": {
         "type": "object",
         "properties": {
           "error": {
             "type": "string",
             "description": "error message"
           },
           "error_number": {
             "description": "Slurm internal error number",
             "type": "integer"
           }
         }
       },
       "v0.0.38_signal": {
         "type": "string",
         "description": "POSIX signal name",
         "format": "int32",
         "enum": [
           "HUP",
           "INT",
           "QUIT",
           "ABRT",
           "KILL",
           "ALRM",
           "TERM",
           "USR1",
           "USR2",
           "URG",
           "CONT",
           "STOP",
           "TSTP",
           "TTIN",
           "TTOU"
         ]
       },
       "v0.0.38_job_submission_response": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.38_error"
             }
           },
           "job_id": {
             "description": "new job ID",
             "type": "integer"
           },
           "step_id": {
             "description": "new job step ID",
             "type": "string"
           },
           "job_submit_user_msg": {
             "description": "Message to user from job_submit plugin",
             "type": "string"
           }
         }
       },
       "v0.0.38_job_submission": {
         "required": [
           "script"
         ],
         "properties": {
           "script": {
             "type": "string",
             "description": "Executable script (full contents) to run in batch step"
           },
           "job": {
             "$ref": "#\/components\/schemas\/v0.0.38_job_properties"
           },
           "jobs": {
             "description": "Properties of an HetJob",
             "type": "array",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.38_job_properties"
             }
           }
         }
       },
       "v0.0.38_jobs_response": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.38_error"
             }
           },
           "jobs": {
             "type": "array",
             "description": "job descriptions",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.38_job_response_properties"
             }
           }
         }
       },
       "v0.0.38_job_response_properties": {
         "type": "object",
         "properties": {
           "account": {
             "type": "string",
             "description": "Charge resources used by this job to specified account"
           },
           "accrue_time": {
             "type": "integer",
             "format": "int64",
             "description": "time job is eligible for running"
           },
           "admin_comment": {
             "type": "string",
             "description": "administrator's arbitrary comment"
           },
           "array_job_id": {
             "type": "integer",
             "description": "job_id of a job array or 0 if N\/A"
           },
           "array_task_id": {
             "type": "integer",
             "description": "task_id of a job array"
           },
           "array_max_tasks": {
             "type": "integer",
             "description": "Maximum number of running array tasks"
           },
           "array_task_string": {
             "type": "string",
             "description": "string expression of task IDs in this record"
           },
           "association_id": {
             "type": "integer",
             "description": "association id for job"
           },
           "batch_features": {
             "type": "string",
             "description": "features required for batch script's node"
           },
           "batch_flag": {
             "type": "boolean",
             "description": "if batch: queued job with script"
           },
           "batch_host": {
             "type": "string",
             "description": "name of host running batch script"
           },
           "flags": {
             "type": "array",
             "description": "Job flags",
             "items": {
               "type": "string"
             }
           },
           "burst_buffer": {
             "type": "string",
             "description": "burst buffer specifications"
           },
           "burst_buffer_state": {
             "type": "string",
             "description": "burst buffer state info"
           },
           "cluster": {
             "type": "string",
             "description": "name of cluster that the job is on"
           },
           "cluster_features": {
             "type": "string",
             "description": "comma separated list of required cluster features"
           },
           "command": {
             "type": "string",
             "description": "command to be executed"
           },
           "comment": {
             "type": "string",
             "description": "arbitrary comment"
           },
           "container": {
             "type": "string",
             "description": "absolute path to OCI container bundle"
           },
           "contiguous": {
             "type": "boolean",
             "description": "job requires contiguous nodes"
           },
           "core_spec": {
             "type": "string",
             "description": "specialized core count"
           },
           "thread_spec": {
             "type": "string",
             "description": "specialized thread count"
           },
           "cores_per_socket": {
             "type": "string",
             "description": "cores per socket required by job"
           },
           "billable_tres": {
             "type": "number",
             "description": "billable TRES"
           },
           "cpus_per_task": {
             "type": "string",
             "description": "number of processors required for each task"
           },
           "cpu_frequency_minimum": {
             "type": "string",
             "description": "Minimum cpu frequency"
           },
           "cpu_frequency_maximum": {
             "type": "string",
             "description": "Maximum cpu frequency"
           },
           "cpu_frequency_governor": {
             "type": "string",
             "description": "cpu frequency governor"
           },
           "cpus_per_tres": {
             "type": "string",
             "description": "semicolon delimited list of TRES=# values"
           },
           "deadline": {
             "type": "integer",
             "description": "job start deadline "
           },
           "delay_boot": {
             "type": "integer",
             "description": "command to be executed"
           },
           "dependency": {
             "type": "string",
             "description": "synchronize job execution with other jobs"
           },
           "derived_exit_code": {
             "type": "integer",
             "description": "highest exit code of all job steps"
           },
           "eligible_time": {
             "type": "integer",
             "format": "int64",
             "description": "time job is eligible for running"
           },
           "end_time": {
             "type": "integer",
             "format": "int64",
             "description": "time of termination, actual or expected"
           },
           "excluded_nodes": {
             "type": "string",
             "description": "comma separated list of excluded nodes"
           },
           "exit_code": {
             "type": "integer",
             "description": "exit code for job"
           },
           "features": {
             "type": "string",
             "description": "comma separated list of required features"
           },
           "federation_origin": {
             "type": "string",
             "description": "Origin cluster's name"
           },
           "federation_siblings_active": {
             "type": "string",
             "description": "string of active sibling names"
           },
           "federation_siblings_viable": {
             "type": "string",
             "description": "string of viable sibling names"
           },
           "gres_detail": {
             "type": "array",
             "description": "Job flags",
             "items": {
               "type": "string"
             }
           },
           "group_id": {
             "type": "integer",
             "description": "group job submitted as"
           },
           "job_id": {
             "type": "integer",
             "description": "job ID"
           },
           "job_resources": {
             "$ref": "#\/components\/schemas\/v0.0.38_job_resources"
           },
           "job_state": {
             "type": "string",
             "description": "state of the job"
           },
           "last_sched_evaluation": {
             "type": "integer",
             "description": "last time job was evaluated for scheduling"
           },
           "licenses": {
             "type": "string",
             "description": "licenses required by the job"
           },
           "max_cpus": {
             "type": "integer",
             "description": "maximum number of cpus usable by job"
           },
           "max_nodes": {
             "type": "integer",
             "description": "maximum number of nodes usable by job"
           },
           "mcs_label": {
             "type": "string",
             "description": "mcs_label if mcs plugin in use"
           },
           "memory_per_tres": {
             "type": "string",
             "description": "semicolon delimited list of TRES=# values"
           },
           "name": {
             "type": "string",
             "description": "name of the job"
           },
           "nodes": {
             "type": "string",
             "description": "list of nodes allocated to job"
           },
           "nice": {
             "type": "integer",
             "description": "requested priority change"
           },
           "tasks_per_core": {
             "type": "integer",
             "description": "number of tasks to invoke on each core"
           },
           "tasks_per_socket": {
             "type": "integer",
             "description": "number of tasks to invoke on each socket"
           },
           "tasks_per_board": {
             "type": "integer",
             "description": "number of tasks to invoke on each board"
           },
           "cpus": {
             "type": "integer",
             "description": "minimum number of cpus required by job"
           },
           "node_count": {
             "type": "integer",
             "description": "minimum number of nodes required by job"
           },
           "tasks": {
             "type": "integer",
             "description": "requested task count"
           },
           "het_job_id": {
             "type": "integer",
             "description": "job ID of hetjob leader"
           },
           "het_job_id_set": {
             "type": "string",
             "description": "job IDs for all components"
           },
           "het_job_offset": {
             "type": "integer",
             "description": "HetJob component offset from leader"
           },
           "partition": {
             "type": "string",
             "description": "name of assigned partition"
           },
           "memory_per_node": {
             "type": "integer",
             "description": "minimum real memory per node"
           },
           "memory_per_cpu": {
             "type": "integer",
             "description": "minimum real memory per cpu"
           },
           "minimum_cpus_per_node": {
             "type": "integer",
             "description": "minimum # CPUs per node"
           },
           "minimum_tmp_disk_per_node": {
             "type": "integer",
             "description": "minimum tmp disk per node"
           },
           "preempt_time": {
             "type": "integer",
             "format": "int64",
             "description": "preemption signal time"
           },
           "pre_sus_time": {
             "type": "integer",
             "format": "int64",
             "description": "time job ran prior to last suspend"
           },
           "priority": {
             "type": "integer",
             "description": "relative priority of the job"
           },
           "profile": {
             "type": "array",
             "description": "Job profiling requested",
             "items": {
               "type": "string"
             }
           },
           "qos": {
             "type": "string",
             "description": "Quality of Service"
           },
           "reboot": {
             "type": "boolean",
             "description": "node reboot requested before start"
           },
           "required_nodes": {
             "type": "string",
             "description": "comma separated list of required nodes"
           },
           "requeue": {
             "type": "boolean",
             "description": "enable or disable job requeue option"
           },
           "resize_time": {
             "type": "integer",
             "format": "int64",
             "description": "time of latest size change"
           },
           "restart_cnt": {
             "type": "integer",
             "description": "count of job restarts"
           },
           "resv_name": {
             "type": "string",
             "description": "reservation name"
           },
           "shared": {
             "type": "string",
             "description": "type and if job can share nodes with other jobs"
           },
           "show_flags": {
             "type": "array",
             "description": "details requested",
             "items": {
               "type": "string"
             }
           },
           "sockets_per_board": {
             "type": "integer",
             "description": "sockets per board required by job"
           },
           "sockets_per_node": {
             "type": "integer",
             "description": "sockets per node required by job"
           },
           "start_time": {
             "type": "integer",
             "format": "int64",
             "description": "time execution begins, actual or expected"
           },
           "state_description": {
             "type": "string",
             "description": "optional details for state_reason"
           },
           "state_reason": {
             "type": "string",
             "description": "reason job still pending or failed"
           },
           "standard_error": {
             "type": "string",
             "description": "pathname of job's stderr file"
           },
           "standard_input": {
             "type": "string",
             "description": "pathname of job's stdin file"
           },
           "standard_output": {
             "type": "string",
             "description": "pathname of job's stdout file"
           },
           "submit_time": {
             "type": "integer",
             "format": "int64",
             "description": "time of job submission"
           },
           "suspend_time": {
             "type": "integer",
             "format": "int64",
             "description": "time job last suspended or resumed"
           },
           "system_comment": {
             "type": "string",
             "description": "slurmctld's arbitrary comment"
           },
           "time_limit": {
             "type": "integer",
             "format": "int64",
             "description": "maximum run time in minutes"
           },
           "time_minimum": {
             "type": "integer",
             "format": "int64",
             "description": "minimum run time in minutes"
           },
           "threads_per_core": {
             "type": "integer",
             "description": "threads per core required by job"
           },
           "tres_bind": {
             "type": "string",
             "description": "Task to TRES binding directives"
           },
           "tres_freq": {
             "type": "string",
             "description": "TRES frequency directives"
           },
           "tres_per_job": {
             "type": "string",
             "description": "semicolon delimited list of TRES=# values"
           },
           "tres_per_node": {
             "type": "string",
             "description": "semicolon delimited list of TRES=# values"
           },
           "tres_per_socket": {
             "type": "string",
             "description": "semicolon delimited list of TRES=# values"
           },
           "tres_per_task": {
             "type": "string",
             "description": "semicolon delimited list of TRES=# values"
           },
           "tres_req_str": {
             "type": "string",
             "description": "tres reqeusted in the job"
           },
           "tres_alloc_str": {
             "type": "string",
             "description": "tres used in the job"
           },
           "user_id": {
             "type": "integer",
             "format": "int64",
             "description": "user id the job runs as"
           },
           "user_name": {
             "type": "string",
             "description": "user the job runs as"
           },
           "wckey": {
             "type": "string",
             "description": "wckey for job"
           },
           "current_working_directory": {
             "type": "string",
             "description": "pathname of working directory"
           }
         }
       },
       "v0.0.38_job_resources": {
         "type": "object",
         "properties": {
           "nodes": {
             "type": "string",
             "description": "list of assigned job nodes"
           },
           "allocated_cpus": {
             "type": "integer",
             "description": "number of assigned job cpus"
           },
           "allocated_hosts": {
             "type": "integer",
             "description": "number of assigned job hosts"
           },
           "allocated_nodes": {
             "type": "array",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.38_node_allocation"
             },
             "description": "array of allocated nodes"
           }
         }
       },
       "v0.0.38_node_allocation": {
         "type": "object",
         "properties": {
           "memory": {
             "type": "integer",
             "description": "amount of assigned job memory"
           },
           "cpus": {
             "type": "integer",
             "description": "number of assigned job CPUs"
           },
           "sockets": {
             "type": "object",
             "description": "assignment status of each socket by numeric socket id",
             "properties": {
               "cores": {
                 "type": "object",
                 "description": "assignment status of each core by core id in each socket"
               }
             }
           },
           "nodename": {
             "type": "string",
             "description": "node name"
           }
         }
       },
       "v0.0.38_job_properties": {
         "type": "object",
         "required": [
           "environment"
         ],
         "properties": {
           "account": {
             "type": "string",
             "description": "Charge resources used by this job to specified account."
           },
           "account_gather_frequency": {
             "type": "string",
             "description": "Define the job accounting and profiling sampling intervals."
           },
           "argv": {
             "type": "array",
             "description": "Arguments to the script.",
             "items": {
               "type": "string"
             }
           },
           "array": {
             "type": "string",
             "description": "Submit a job array, multiple jobs to be executed with identical parameters. The indexes specification identifies what array index values should be used."
           },
           "batch_features": {
             "type": "string",
             "description": "features required for batch script's node"
           },
           "begin_time": {
             "type": "integer",
             "format": "int64",
             "description": "Submit the batch script to the Slurm controller immediately, like normal, but tell the controller to defer the allocation of the job until the specified time."
           },
           "burst_buffer": {
             "type": "string",
             "description": "Burst buffer specification."
           },
           "cluster_constraint": {
             "type": "string",
             "description": "Specifies features that a federated cluster must have to have a sibling job submitted to it."
           },
           "comment": {
             "type": "string",
             "description": "An arbitrary comment."
           },
           "constraints": {
             "type": "string",
             "description": "node features required by job."
           },
           "container": {
             "type": "string",
             "description": "absolute path to OCI container bundle"
           },
           "core_specification": {
             "type": "integer",
             "description": "Count of specialized threads per node reserved by the job for system operations and not used by the application."
           },
           "cores_per_socket": {
             "type": "integer",
             "description": "Restrict node selection to nodes with at least the specified number of cores per socket."
           },
           "cpu_binding": {
             "type": "string",
             "description": "Cpu binding"
           },
           "cpu_binding_hint": {
             "type": "string",
             "description": "Cpu binding hint"
           },
           "cpu_frequency": {
             "type": "string",
             "description": "Request that job steps initiated by srun commands inside this sbatch script be run at some requested frequency if possible, on the CPUs selected for the step on the compute node(s)."
           },
           "cpus_per_gpu": {
             "type": "string",
             "description": "Number of CPUs requested per allocated GPU."
           },
           "cpus_per_task": {
             "type": "integer",
             "description": "Advise the Slurm controller that ensuing job steps will require ncpus number of processors per task."
           },
           "current_working_directory": {
             "type": "string",
             "description": "Instruct Slurm to connect the batch script's standard output directly to the file name."
           },
           "deadline": {
             "type": "string",
             "description": "Remove the job if no ending is possible before this deadline (start > (deadline - time[-min]))."
           },
           "delay_boot": {
             "type": "integer",
             "description": "Do not reboot nodes in order to satisfied this job's feature specification if the job has been eligible to run for less than this time period."
           },
           "dependency": {
             "type": "string",
             "description": "Defer the start of this job until the specified dependencies have been satisfied completed."
           },
           "distribution": {
             "type": "string",
             "description": "Specify alternate distribution methods for remote processes."
           },
           "environment": {
             "type": "object",
             "description": "Dictionary of environment entries."
           },
           "exclusive": {
             "type": "string",
             "description": "The job allocation can share nodes just other users with the \"user\" option or with the \"mcs\" option).",
             "enum": [
               "user",
               "mcs",
               "true",
               "false"
             ]
           },
           "get_user_environment": {
             "type": "boolean",
             "description": "Load new login environment for user on job node."
           },
           "gres": {
             "type": "string",
             "description": "Specifies a comma delimited list of generic consumable resources."
           },
           "gres_flags": {
             "type": "string",
             "description": "Specify generic resource task binding options.",
             "enum": [
               "disable-binding",
               "enforce-binding"
             ]
           },
           "gpu_binding": {
             "type": "string",
             "description": "Requested binding of tasks to GPU."
           },
           "gpu_frequency": {
             "type": "string",
             "description": "Requested GPU frequency."
           },
           "gpus": {
             "type": "string",
             "description": "GPUs per job."
           },
           "gpus_per_node": {
             "type": "string",
             "description": "GPUs per node."
           },
           "gpus_per_socket": {
             "type": "string",
             "description": "GPUs per socket."
           },
           "gpus_per_task": {
             "type": "string",
             "description": "GPUs per task."
           },
           "hold": {
             "type": "boolean",
             "description": "Specify the job is to be submitted in a held state (priority of zero)."
           },
           "kill_on_invalid_dependency": {
             "type": "boolean",
             "description": "If a job has an invalid dependency, then Slurm is to terminate it."
           },
           "licenses": {
             "type": "string",
             "description": "Specification of licenses (or other resources available on all nodes of the cluster) which must be allocated to this job."
           },
           "mail_type": {
             "type": "string",
             "description": "Notify user by email when certain event types occur."
           },
           "mail_user": {
             "type": "string",
             "description": "User to receive email notification of state changes as defined by mail_type."
           },
           "mcs_label": {
             "type": "string",
             "description": "This parameter is a group among the groups of the user."
           },
           "memory_binding": {
             "type": "string",
             "description": "Bind tasks to memory."
           },
           "memory_per_cpu": {
             "type": "integer",
             "description": "Minimum real memory per cpu (MB)."
           },
           "memory_per_gpu": {
             "type": "integer",
             "description": "Minimum memory required per allocated GPU."
           },
           "memory_per_node": {
             "type": "integer",
             "description": "Minimum real memory per node (MB)."
           },
           "minimum_cpus_per_node": {
             "type": "integer",
             "description": "Minimum number of CPUs per node."
           },
           "minimum_nodes": {
             "type": "boolean",
             "description": "If a range of node counts is given, prefer the smaller count."
           },
           "name": {
             "type": "string",
             "description": "Specify a name for the job allocation."
           },
           "nice": {
             "type": "integer",
             "description": "Run the job with an adjusted scheduling priority within Slurm."
           },
           "no_kill": {
             "type": "boolean",
             "description": "Do not automatically terminate a job if one of the nodes it has been allocated fails."
           },
           "nodes": {
             "maxItems": 2,
             "minItems": 1,
             "type": "array",
             "description": "Request that a minimum of minnodes nodes and a maximum node count.",
             "items": {
               "type": "integer"
             }
           },
           "open_mode": {
             "type": "string",
             "description": "Open the output and error files using append or truncate mode as specified.",
             "default": "append",
             "enum": [
               "append",
               "truncate"
             ]
           },
           "oversubscribe": {
             "type": "boolean",
             "description": "The job allocation can over-subscribe resources with other running jobs.",
             "default": "false"
           },
           "partition": {
             "type": "string",
             "description": "Request a specific partition for the resource allocation."
           },
           "prefer": {
             "type": "string",
             "description": "Comma delimited list of features for scheduler to prefer but not a strict requirement like a constraint. Value can be used for job submission but is only displayed for PENDING jobs."
           },
           "priority": {
             "type": "string",
             "description": "Request a specific job priority."
           },
           "qos": {
             "type": "string",
             "description": "Request a quality of service for the job."
           },
           "requeue": {
             "type": "boolean",
             "description": "Specifies that the batch job should eligible to being requeue."
           },
           "reservation": {
             "type": "string",
             "description": "Allocate resources for the job from the named reservation."
           },
           "signal": {
             "pattern": "(B:|)sig_num(@sig_time|)",
             "type": "string",
             "description": "When a job is within sig_time seconds of its end time, send it the signal sig_num."
           },
           "sockets_per_node": {
             "type": "integer",
             "description": "Restrict node selection to nodes with at least the specified number of sockets."
           },
           "spread_job": {
             "type": "boolean",
             "description": "Spread the job allocation over as many nodes as possible and attempt to evenly distribute tasks across the allocated nodes."
           },
           "standard_error": {
             "type": "string",
             "description": "Instruct Slurm to connect the batch script's standard error directly to the file name."
           },
           "standard_input": {
             "type": "string",
             "description": "Instruct Slurm to connect the batch script's standard input directly to the file name specified."
           },
           "standard_output": {
             "type": "string",
             "description": "Instruct Slurm to connect the batch script's standard output directly to the file name."
           },
           "tasks": {
             "type": "integer",
             "description": "Advises the Slurm controller that job steps run within the allocation will launch a maximum of number tasks and to provide for sufficient resources."
           },
           "tasks_per_core": {
             "type": "integer",
             "description": "Request the maximum ntasks be invoked on each core."
           },
           "tasks_per_node": {
             "type": "integer",
             "description": "Request the maximum ntasks be invoked on each node."
           },
           "tasks_per_socket": {
             "type": "integer",
             "description": "Request the maximum ntasks be invoked on each socket."
           },
           "thread_specification": {
             "type": "integer",
             "description": "Count of specialized threads per node reserved by the job for system operations and not used by the application."
           },
           "threads_per_core": {
             "type": "integer",
             "description": "Restrict node selection to nodes with at least the specified number of threads per core."
           },
           "time_limit": {
             "type": "integer",
             "description": "Step time limit in minutes."
           },
           "time_minimum": {
             "type": "integer",
             "description": "Minimum run time in minutes."
           },
           "wait_all_nodes": {
             "type": "boolean",
             "description": "Do not begin execution until all nodes are ready for use."
           },
           "wckey": {
             "type": "string",
             "description": "Specify wckey to be used with job."
           }
         }
       },
       "v0.0.38_node": {
         "type": "object",
         "properties": {
           "architecture": {
             "type": "string",
             "description": "computer architecture"
           },
           "burstbuffer_network_address": {
             "type": "string",
             "description": "BcastAddr"
           },
           "boards": {
             "type": "integer",
             "description": "total number of boards per node"
           },
           "boot_time": {
             "type": "integer",
             "format": "int64",
             "description": "timestamp of node boot"
           },
           "cores": {
             "type": "integer",
             "description": "number of cores per socket"
           },
           "cpu_binding": {
             "type": "integer",
             "description": "Default task binding"
           },
           "cpu_load": {
             "type": "integer",
             "format": "int64",
             "description": "CPU load * 100"
           },
           "free_memory": {
             "type": "integer",
             "description": "free memory in MiB"
           },
           "cpus": {
             "type": "integer",
             "description": "configured count of cpus running on the node"
           },
           "features": {
             "type": "string",
             "description": ""
           },
           "active_features": {
             "type": "string",
             "description": "list of a node's available features"
           },
           "gres": {
             "type": "string",
             "description": "list of a node's generic resources"
           },
           "gres_drained": {
             "type": "string",
             "description": "list of drained GRES"
           },
           "gres_used": {
             "type": "string",
             "description": "list of GRES in current use"
           },
           "mcs_label": {
             "type": "string",
             "description": "mcs label if mcs plugin in use"
           },
           "name": {
             "type": "string",
             "description": "node name to slurm"
           },
           "next_state_after_reboot": {
             "type": "string",
             "description": "state after reboot"
           },
           "next_state_after_reboot_flags": {
             "type": "array",
             "description": "node state flags",
             "items": {
               "type": "string"
             }
           },
           "address": {
             "type": "string",
             "description": "state after reboot"
           },
           "hostname": {
             "type": "string",
             "description": "node's hostname"
           },
           "state": {
             "type": "string",
             "description": "current node state"
           },
           "state_flags": {
             "type": "array",
             "description": "node state flags",
             "items": {
               "type": "string"
             }
           },
           "operating_system": {
             "type": "string",
             "description": "operating system"
           },
           "owner": {
             "type": "string",
             "description": "User allowed to use this node"
           },
           "partitions": {
             "type": "array",
             "description": "assigned partitions",
             "items": {
               "type": "string"
             }
           },
           "port": {
             "type": "integer",
             "description": "TCP port number of the slurmd"
           },
           "real_memory": {
             "type": "integer",
             "description": "configured MB of real memory on the node"
           },
           "reason": {
             "type": "string",
             "description": "reason for node being DOWN or DRAINING"
           },
           "reason_changed_at": {
             "type": "integer",
             "description": "Time stamp when reason was set"
           },
           "reason_set_by_user": {
             "type": "string",
             "description": "User that set the reason"
           },
           "slurmd_start_time": {
             "type": "integer",
             "format": "int64",
             "description": "timestamp of slurmd startup"
           },
           "sockets": {
             "type": "integer",
             "description": "total number of sockets per node"
           },
           "threads": {
             "type": "integer",
             "description": "number of threads per core"
           },
           "temporary_disk": {
             "type": "integer",
             "description": "configured MB of total disk in TMP_FS"
           },
           "weight": {
             "type": "integer",
             "description": "arbitrary priority of node for scheduling"
           },
           "tres": {
             "type": "string",
             "description": "TRES on node"
           },
           "tres_used": {
             "type": "string",
             "description": "TRES used on node"
           },
           "tres_weighted": {
             "type": "number",
             "format": "double",
             "description": "TRES weight used on node"
           },
           "slurmd_version": {
             "type": "string",
             "description": "Slurmd version"
           },
           "alloc_cpus": {
             "type": "integer",
             "format": "int64",
             "description": "Allocated CPUs"
           },
           "idle_cpus": {
             "type": "integer",
             "format": "int64",
             "description": "Idle CPUs"
           },
           "alloc_memory": {
             "type": "integer",
             "format": "int64",
             "description": "Allocated memory (MB)"
           }
         }
       },
       "v0.0.38_nodes_response": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.38_error"
             }
           },
           "nodes": {
             "type": "array",
             "description": "nodes info",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.38_node"
             }
           }
         }
       },
       "v0.0.38_meta": {
         "type": "object",
         "properties": {
           "plugin": {
             "type": "object",
             "properties": {
               "type": {
                 "type": "string",
                 "description": ""
               },
               "name": {
                 "type": "string",
                 "description": ""
               }
             }
           },
           "Slurm": {
             "type": "object",
             "description": "Slurm information",
             "properties": {
               "version": {
                 "type": "object",
                 "properties": {
                   "major": {
                     "type": "string",
                     "description": ""
                   },
                   "micro": {
                     "type": "string",
                     "description": ""
                   },
                   "minor": {
                     "type": "string",
                     "description": ""
                   }
                 }
               },
               "release": {
                 "type": "string",
                 "description": "version specifier"
               }
             }
           }
         }
       },
       "v0.0.39_diag": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.39_meta"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.39_errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.39_warnings"
           },
           "statistics": {
             "$ref": "#\/components\/schemas\/v0.0.39_stats_msg"
           }
         }
       },
       "v0.0.39_licenses_info": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.39_meta"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.39_errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.39_warnings"
           },
           "licenses": {
             "$ref": "#\/components\/schemas\/v0.0.39_licenses"
           }
         }
       },
       "v0.0.39_pings": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.39_meta"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.39_errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.39_warnings"
           },
           "pings": {
             "$ref": "#\/components\/schemas\/v0.0.39_controller_ping_array"
           }
         }
       },
       "v0.0.39_partitions_response": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.39_meta"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.39_errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.39_warnings"
           },
           "partitions": {
             "$ref": "#\/components\/schemas\/v0.0.39_partition_info_array"
           }
         }
       },
       "v0.0.39_reservations_response": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.39_meta"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.39_errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.39_warnings"
           },
           "reservations": {
             "$ref": "#\/components\/schemas\/v0.0.39_reservation_info_array"
           }
         }
       },
       "status": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
           }
         }
       },
       "v0.0.39_warnings": {
         "type": "array",
         "description": "Slurm warnings",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_warning"
         }
       },
       "v0.0.39_warning": {
         "properties": {
           "warning": {
             "description": "Earning message",
             "type": "string"
           },
           "source": {
             "description": "Where error occurred in the source",
             "type": "string"
           },
           "description": {
             "description": "Explaination of cause of error",
             "type": "string"
           }
         },
         "type": "object"
       },
       "v0.0.39_errors": {
         "type": "array",
         "description": "Slurm errors",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_error"
         }
       },
       "v0.0.39_error": {
         "properties": {
           "error_number": {
             "description": "Slurm internal error number",
             "type": "integer"
           },
           "error": {
             "description": "Error message",
             "type": "string"
           },
           "source": {
             "description": "Where error occurred in the source",
             "type": "string"
           },
           "description": {
             "description": "Explaination of cause of error",
             "type": "string"
           }
         },
         "type": "object"
       },
       "v0.0.39_job_update_response": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.39_meta"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.39_errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.39_warnings"
           },
           "results": {
             "$ref": "#\/components\/schemas\/v0.0.39_job_array_response_msg_ptr"
           }
         }
       },
       "v0.0.39_job_submission_response": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.39_meta"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.39_errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.39_warnings"
           },
           "job_id": {
             "description": "new job ID",
             "type": "integer"
           },
           "step_id": {
             "description": "new job step ID",
             "type": "string"
           },
           "job_submit_user_msg": {
             "description": "Message to user from job_submit plugin",
             "type": "string"
           }
         }
       },
       "v0.0.39_jobs_response": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.39_meta"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.39_errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.39_warnings"
           },
           "jobs": {
             "$ref": "#\/components\/schemas\/v0.0.39_job_info_msg"
           }
         }
       },
       "v0.0.39_job_submission": {
         "properties": {
           "script": {
             "type": "string",
             "description": "Executable script (full contents) to run in batch step for all job components"
           },
           "job": {
             "$ref": "#\/components\/schemas\/v0.0.39_job_desc_msg"
           },
           "jobs": {
             "$ref": "#\/components\/schemas\/v0.0.39_job_desc_msg_list"
           }
         }
       },
       "v0.0.39_nodes_response": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.39_meta"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.39_errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.39_warnings"
           },
           "nodes": {
             "$ref": "#\/components\/schemas\/v0.0.39_nodes"
           }
         }
       },
       "v0.0.39_meta": {
         "type": "object",
         "properties": {
           "plugin": {
             "type": "object",
             "properties": {
               "type": {
                 "type": "string",
                 "description": ""
               },
               "name": {
                 "type": "string",
                 "description": ""
               }
             }
           },
           "Slurm": {
             "type": "object",
             "description": "Slurm information",
             "properties": {
               "version": {
                 "type": "object",
                 "properties": {
                   "major": {
                     "type": "integer",
                     "description": ""
                   },
                   "micro": {
                     "type": "integer",
                     "description": ""
                   },
                   "minor": {
                     "type": "integer",
                     "description": ""
                   }
                 }
               },
               "release": {
                 "type": "string",
                 "description": "version specifier"
               }
             }
           }
         }
       },
       "v0.0.39_job_desc_msg": {
         "type": "object",
         "properties": {
           "account": {
             "type": "string"
           },
           "account_gather_frequency": {
             "type": "string"
           },
           "admin_comment": {
             "type": "string"
           },
           "allocation_node_list": {
             "type": "string"
           },
           "allocation_node_port": {
             "type": "integer",
             "format": "int32"
           },
           "argv": {
             "$ref": "#\/components\/schemas\/v0.0.39_job_desc_msg_argv"
           },
           "array": {
             "type": "string"
           },
           "batch_features": {
             "type": "string"
           },
           "begin_time": {
             "type": "integer",
             "format": "int64"
           },
           "flags": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "KILL_INVALID_DEPENDENCY",
                 "NO_KILL_INVALID_DEPENDENCY",
                 "HAS_STATE_DIRECTORY",
                 "TESTING_BACKFILL",
                 "GRES_BINDING_ENFORCED",
                 "TEST_NOW_ONLY",
                 "SEND_JOB_ENVIRONMENT",
                 "SPREAD_JOB",
                 "PREFER_MINIMUM_NODE_COUNT",
                 "JOB_KILL_HURRY",
                 "SKIP_TRES_STRING_ACCOUNTING",
                 "SIBLING_CLUSTER_UPDATE_ONLY",
                 "HETEROGENEOUS_JOB",
                 "EXACT_TASK_COUNT_REQUESTED",
                 "EXACT_CPU_COUNT_REQUESTED",
                 "TESTING_WHOLE_NODE_BACKFILL",
                 "TOP_PRIORITY_JOB",
                 "ACCRUE_COUNT_CLEARED",
                 "GRED_BINDING_DISABLED",
                 "JOB_WAS_RUNNING",
                 "JOB_ACCRUE_TIME_RESET",
                 "CRON_JOB",
                 "EXACT_MEMORY_REQUESTED",
                 "JOB_RESIZED",
                 "USING_DEFAULT_ACCOUNT",
                 "USING_DEFAULT_PARTITION",
                 "USING_DEFAULT_QOS",
                 "USING_DEFAULT_WCKEY",
                 "DEPENDENT",
                 "MAGNETIC",
                 "PARTITION_ASSIGNED",
                 "BACKFILL_ATTEMPTED",
                 "SCHEDULING_ATTEMPTED",
                 "SAVE_BATCH_SCRIPT"
               ]
             }
           },
           "burst_buffer": {
             "type": "string"
           },
           "clusters": {
             "type": "string"
           },
           "cluster_constraint": {
             "type": "string"
           },
           "comment": {
             "type": "string"
           },
           "contiguous": {
             "type": "boolean"
           },
           "container": {
             "type": "string"
           },
           "container_id": {
             "type": "string"
           },
           "core_specification": {
             "type": "integer",
             "format": "int32"
           },
           "thread_specification": {
             "type": "integer",
             "format": "int32"
           },
           "cpu_binding": {
             "type": "string"
           },
           "cpu_binding_flags": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "VERBOSE",
                 "CPU_BIND_TO_THREADS",
                 "CPU_BIND_TO_CORES",
                 "CPU_BIND_TO_SOCKETS",
                 "CPU_BIND_TO_LDOMS",
                 "CPU_BIND_NONE",
                 "CPU_BIND_RANK",
                 "CPU_BIND_MAP",
                 "CPU_BIND_MASK",
                 "CPU_BIND_LDRANK",
                 "CPU_BIND_LDMAP",
                 "CPU_BIND_LDMASK",
                 "CPU_BIND_ONE_THREAD_PER_CORE",
                 "CPU_AUTO_BIND_TO_THREADS",
                 "CPU_AUTO_BIND_TO_CORES",
                 "CPU_AUTO_BIND_TO_SOCKETS",
                 "SLURMD_OFF_SPEC",
                 "CPU_BIND_OFF"
               ]
             }
           },
           "cpu_frequency": {
             "type": "string"
           },
           "cpus_per_tres": {
             "type": "string"
           },
           "crontab": {
             "$ref": "#\/components\/schemas\/v0.0.39_cron_entry_ptr"
           },
           "deadline": {
             "type": "integer",
             "format": "int64"
           },
           "delay_boot": {
             "type": "integer",
             "format": "int32"
           },
           "dependency": {
             "type": "string"
           },
           "end_time": {
             "type": "integer",
             "format": "int64"
           },
           "environment": {
             "$ref": "#\/components\/schemas\/v0.0.39_job_desc_msg_env"
           },
           "excluded_nodes": {
             "$ref": "#\/components\/schemas\/v0.0.39_csv_list"
           },
           "extra": {
             "type": "string"
           },
           "constraints": {
             "type": "string"
           },
           "group_id": {
             "type": "string"
           },
           "hetjob_group": {
             "type": "integer",
             "format": "int32"
           },
           "immediate": {
             "type": "boolean"
           },
           "job_id": {
             "type": "integer",
             "format": "int32"
           },
           "kill_on_node_fail": {
             "type": "boolean"
           },
           "licenses": {
             "type": "string"
           },
           "mail_type": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "BEGIN",
                 "END",
                 "FAIL",
                 "REQUEUE",
                 "TIME=100%",
                 "TIME=90%",
                 "TIME=80%",
                 "TIME=50%",
                 "STAGE_OUT",
                 "ARRAY_TASKS",
                 "INVALID_DEPENDENCY"
               ]
             }
           },
           "mail_user": {
             "type": "string"
           },
           "mcs_label": {
             "type": "string"
           },
           "memory_binding": {
             "type": "string"
           },
           "memory_binding_type": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "VERBOSE",
                 "NONE",
                 "RANK",
                 "MAP",
                 "MASK",
                 "LOCAL",
                 "SORT",
                 "PREFER"
               ]
             }
           },
           "memory_per_tres": {
             "type": "string"
           },
           "name": {
             "type": "string"
           },
           "network": {
             "type": "string"
           },
           "nice": {
             "type": "integer",
             "format": "int32"
           },
           "tasks": {
             "type": "integer",
             "format": "int32"
           },
           "open_mode": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "APPEND",
                 "TRUNCATE"
               ]
             }
           },
           "reserve_ports": {
             "type": "integer",
             "format": "int32"
           },
           "overcommit": {
             "type": "boolean"
           },
           "partition": {
             "type": "string"
           },
           "distribution_plane_size": {
             "type": "integer",
             "format": "int32"
           },
           "power_flags": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "EQUAL_POWER"
               ]
             }
           },
           "prefer": {
             "type": "string"
           },
           "priority": {
             "type": "integer",
             "format": "int32"
           },
           "profile": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "NOT_SET",
                 "NONE",
                 "ENERGY",
                 "LUSTRE",
                 "NETWORK",
                 "TASK"
               ]
             }
           },
           "qos": {
             "type": "string"
           },
           "reboot": {
             "type": "boolean"
           },
           "required_nodes": {
             "$ref": "#\/components\/schemas\/v0.0.39_csv_list"
           },
           "requeue": {
             "type": "boolean"
           },
           "reservation": {
             "type": "string"
           },
           "script": {
             "type": "string"
           },
           "shared": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "none",
                 "oversubscribe",
                 "user",
                 "mcs"
               ]
             }
           },
           "exclusive": {
             "$ref": "#\/components\/schemas\/v0.0.39_job_exclusive"
           },
           "site_factor": {
             "type": "integer",
             "format": "int32"
           },
           "spank_environment": {
             "$ref": "#\/components\/schemas\/v0.0.39_job_desc_msg_spank_env"
           },
           "distribution": {
             "type": "string"
           },
           "time_limit": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "time_minimum": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "tres_bind": {
             "type": "string"
           },
           "tres_freq": {
             "type": "string"
           },
           "tres_per_job": {
             "type": "string"
           },
           "tres_per_node": {
             "type": "string"
           },
           "tres_per_socket": {
             "type": "string"
           },
           "tres_per_task": {
             "type": "string"
           },
           "user_id": {
             "type": "string"
           },
           "wait_all_nodes": {
             "type": "boolean"
           },
           "kill_warning_flags": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "BATCH_JOB",
                 "ARRAY_JOB",
                 "FULL_STEPS_ONLY",
                 "FULL_JOB",
                 "FEDERATION_REQUEUE",
                 "HURRY",
                 "OUT_OF_MEMORY",
                 "NO_SIBLING_JOBS",
                 "RESERVATION_JOB",
                 "WARNING_SENT"
               ]
             }
           },
           "kill_warning_signal": {
             "type": "string"
           },
           "kill_warning_delay": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
           },
           "current_working_directory": {
             "type": "string"
           },
           "cpus_per_task": {
             "type": "integer",
             "format": "int32"
           },
           "minimum_cpus": {
             "type": "integer",
             "format": "int32"
           },
           "maximum_cpus": {
             "type": "integer",
             "format": "int32"
           },
           "nodes": {
             "type": "string"
           },
           "minimum_nodes": {
             "type": "integer",
             "format": "int32"
           },
           "maximum_nodes": {
             "type": "integer",
             "format": "int32"
           },
           "minimum_boards_per_node": {
             "type": "integer",
             "format": "int32"
           },
           "minimum_sockets_per_board": {
             "type": "integer",
             "format": "int32"
           },
           "sockets_per_node": {
             "type": "integer",
             "format": "int32"
           },
           "threads_per_core": {
             "type": "integer",
             "format": "int32"
           },
           "tasks_per_node": {
             "type": "integer",
             "format": "int32"
           },
           "tasks_per_socket": {
             "type": "integer",
             "format": "int32"
           },
           "tasks_per_core": {
             "type": "integer",
             "format": "int32"
           },
           "tasks_per_board": {
             "type": "integer",
             "format": "int32"
           },
           "ntasks_per_tres": {
             "type": "integer",
             "format": "int32"
           },
           "minimum_cpus_per_node": {
             "type": "integer",
             "format": "int32"
           },
           "memory_per_cpu": {
             "$ref": "#\/components\/schemas\/v0.0.39_job_mem_per_cpu"
           },
           "memory_per_node": {
             "$ref": "#\/components\/schemas\/v0.0.39_job_mem_per_node"
           },
           "temporary_disk_per_node": {
             "type": "integer",
             "format": "int32"
           },
           "selinux_context": {
             "type": "string"
           },
           "required_switches": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "standard_error": {
             "type": "string"
           },
           "standard_input": {
             "type": "string"
           },
           "standard_output": {
             "type": "string"
           },
           "wait_for_switch": {
             "type": "integer",
             "format": "int32"
           },
           "wckey": {
             "type": "string"
           },
           "x11": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "FORWARD_ALL_NODES",
                 "BATCH_NODE",
                 "FIRST_NODE",
                 "LAST_NODE"
               ]
             }
           },
           "x11_magic_cookie": {
             "type": "string"
           },
           "x11_target_host": {
             "type": "string"
           },
           "x11_target_port": {
             "type": "integer",
             "format": "int32"
           }
         },
         "required": [
         ]
       },
       "v0.0.39_job_desc_msg_argv": {
         "$ref": "#\/components\/schemas\/v0.0.39_string_array"
       },
       "v0.0.39_string_array": {
         "type": "array",
         "items": {
           "type": "string"
         }
       },
       "v0.0.39_cron_entry_ptr": {
         "$ref": "#\/components\/schemas\/v0.0.39_cron_entry"
       },
       "v0.0.39_cron_entry": {
         "type": "object",
         "properties": {
           "flags": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "WILD_MINUTE",
                 "WILD_HOUR",
                 "WILD_DAY_OF_MONTH",
                 "WILD_MONTH",
                 "WILD_DAY_OF_WEEK"
               ]
             }
           },
           "minute": {
             "type": "string"
           },
           "hour": {
             "type": "string"
           },
           "day_of_month": {
             "type": "string"
           },
           "month": {
             "type": "string"
           },
           "day_of_week": {
             "type": "string"
           },
           "specification": {
             "type": "string"
           },
           "command": {
             "type": "string"
           },
           "line": {
             "type": "object",
             "properties": {
               "end": {
                 "type": "integer",
                 "format": "int32"
               }
             }
           }
         },
         "required": [
         ]
       },
       "v0.0.39_job_desc_msg_env": {
         "$ref": "#\/components\/schemas\/v0.0.39_string_array"
       },
       "v0.0.39_csv_list": {
         "type": "array",
         "items": {
           "type": "string"
         }
       },
       "v0.0.39_job_exclusive": {
         "type": "array",
         "items": {
           "type": "string",
           "description": "flags",
           "enum": [
             "true",
             "false",
             "user",
             "mcs"
           ]
         }
       },
       "v0.0.39_job_desc_msg_spank_env": {
         "$ref": "#\/components\/schemas\/v0.0.39_string_array"
       },
       "v0.0.39_uint32_no_val": {
         "type": "object",
         "description": "Integer number with flags",
         "properties": {
           "set": {
             "type": "boolean",
             "description": "True if number has been set. False if number is unset",
             "default": false
           },
           "infinite": {
             "type": "boolean",
             "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
             "default": 0
           },
           "number": {
             "type": "integer",
             "format": "int64",
             "description": "If set is True the number will be set with value. Otherwise ignore number contents."
           }
         }
       },
       "v0.0.39_uint16_no_val": {
         "type": "object",
         "description": "Integer number with flags",
         "properties": {
           "set": {
             "type": "boolean",
             "description": "True if number has been set. False if number is unset",
             "default": false
           },
           "infinite": {
             "type": "boolean",
             "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
             "default": 0
           },
           "number": {
             "type": "integer",
             "format": "int64",
             "description": "If set is True the number will be set with value. Otherwise ignore number contents."
           }
         }
       },
       "v0.0.39_job_mem_per_cpu": {
         "$ref": "#\/components\/schemas\/v0.0.39_uint64_no_val"
       },
       "v0.0.39_uint64_no_val": {
         "type": "object",
         "description": "Integer number with flags",
         "properties": {
           "set": {
             "type": "boolean",
             "description": "True if number has been set. False if number is unset",
             "default": false
           },
           "infinite": {
             "type": "boolean",
             "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
             "default": 0
           },
           "number": {
             "type": "integer",
             "format": "int64",
             "description": "If set is True the number will be set with value. Otherwise ignore number contents."
           }
         }
       },
       "v0.0.39_job_mem_per_node": {
         "$ref": "#\/components\/schemas\/v0.0.39_uint64_no_val"
       },
       "v0.0.39_update_node_msg": {
         "type": "object",
         "properties": {
           "comment": {
             "type": "string"
           },
           "cpu_bind": {
             "type": "integer",
             "format": "int32"
           },
           "extra": {
             "type": "string"
           },
           "features": {
             "$ref": "#\/components\/schemas\/v0.0.39_csv_list"
           },
           "features_act": {
             "$ref": "#\/components\/schemas\/v0.0.39_csv_list"
           },
           "gres": {
             "type": "string"
           },
           "address": {
             "$ref": "#\/components\/schemas\/v0.0.39_hostlist_string"
           },
           "hostname": {
             "$ref": "#\/components\/schemas\/v0.0.39_hostlist_string"
           },
           "name": {
             "$ref": "#\/components\/schemas\/v0.0.39_hostlist_string"
           },
           "state": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "INVALID",
                 "UNKNOWN",
                 "DOWN",
                 "IDLE",
                 "ALLOCATED",
                 "ERROR",
                 "MIXED",
                 "FUTURE",
                 "PERFCTRS",
                 "RESERVED",
                 "UNDRAIN",
                 "CLOUD",
                 "RESUME",
                 "DRAIN",
                 "COMPLETING",
                 "NOT_RESPONDING",
                 "POWERED_DOWN",
                 "FAIL",
                 "POWERING_UP",
                 "MAINTENANCE",
                 "REBOOT_REQUESTED",
                 "REBOOT_CANCELED",
                 "POWERING_DOWN",
                 "DYNAMIC_FUTURE",
                 "REBOOT_ISSUED",
                 "PLANNED",
                 "INVALID_REG",
                 "POWER_DOWN",
                 "POWER_UP",
                 "POWER_DRAIN",
                 "DYNAMIC_NORM"
               ]
             }
           },
           "reason": {
             "type": "string"
           },
           "reason_uid": {
             "type": "string"
           },
           "resume_after": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "weight": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           }
         },
         "required": [
         ]
       },
       "v0.0.39_hostlist_string": {
         "type": "array",
         "items": {
           "type": "string"
         }
       },
       "v0.0.39_stats_msg": {
         "type": "object",
         "properties": {
           "parts_packed": {
             "type": "integer",
             "format": "int32"
           },
           "req_time": {
             "type": "integer",
             "format": "int64"
           },
           "req_time_start": {
             "type": "integer",
             "format": "int64"
           },
           "server_thread_count": {
             "type": "integer",
             "format": "int32"
           },
           "agent_queue_size": {
             "type": "integer",
             "format": "int32"
           },
           "agent_count": {
             "type": "integer",
             "format": "int32"
           },
           "agent_thread_count": {
             "type": "integer",
             "format": "int32"
           },
           "dbd_agent_queue_size": {
             "type": "integer",
             "format": "int32"
           },
           "gettimeofday_latency": {
             "type": "integer",
             "format": "int32"
           },
           "schedule_cycle_max": {
             "type": "integer",
             "format": "int32"
           },
           "schedule_cycle_last": {
             "type": "integer",
             "format": "int32"
           },
           "schedule_cycle_total": {
             "type": "integer",
             "format": "int32"
           },
           "schedule_cycle_mean": {
             "type": "integer",
             "format": "int64"
           },
           "schedule_cycle_mean_depth": {
             "type": "integer",
             "format": "int64"
           },
           "schedule_cycle_per_minute": {
             "type": "integer",
             "format": "int64"
           },
           "schedule_queue_length": {
             "type": "integer",
             "format": "int32"
           },
           "jobs_submitted": {
             "type": "integer",
             "format": "int32"
           },
           "jobs_started": {
             "type": "integer",
             "format": "int32"
           },
           "jobs_completed": {
             "type": "integer",
             "format": "int32"
           },
           "jobs_canceled": {
             "type": "integer",
             "format": "int32"
           },
           "jobs_failed": {
             "type": "integer",
             "format": "int32"
           },
           "jobs_pending": {
             "type": "integer",
             "format": "int32"
           },
           "jobs_running": {
             "type": "integer",
             "format": "int32"
           },
           "job_states_ts": {
             "type": "integer",
             "format": "int64"
           },
           "bf_backfilled_jobs": {
             "type": "integer",
             "format": "int32"
           },
           "bf_last_backfilled_jobs": {
             "type": "integer",
             "format": "int32"
           },
           "bf_backfilled_het_jobs": {
             "type": "integer",
             "format": "int32"
           },
           "bf_cycle_counter": {
             "type": "integer",
             "format": "int32"
           },
           "bf_cycle_mean": {
             "type": "integer",
             "format": "int64"
           },
           "bf_depth_mean": {
             "type": "integer",
             "format": "int64"
           },
           "bf_depth_mean_try": {
             "type": "integer",
             "format": "int64"
           },
           "bf_cycle_sum": {
             "type": "integer",
             "format": "int64"
           },
           "bf_cycle_last": {
             "type": "integer",
             "format": "int32"
           },
           "bf_last_depth": {
             "type": "integer",
             "format": "int32"
           },
           "bf_last_depth_try": {
             "type": "integer",
             "format": "int32"
           },
           "bf_depth_sum": {
             "type": "integer",
             "format": "int32"
           },
           "bf_depth_try_sum": {
             "type": "integer",
             "format": "int32"
           },
           "bf_queue_len": {
             "type": "integer",
             "format": "int32"
           },
           "bf_queue_len_mean": {
             "type": "integer",
             "format": "int64"
           },
           "bf_queue_len_sum": {
             "type": "integer",
             "format": "int32"
           },
           "bf_table_size": {
             "type": "integer",
             "format": "int32"
           },
           "bf_table_size_mean": {
             "type": "integer",
             "format": "int64"
           },
           "bf_when_last_cycle": {
             "type": "integer",
             "format": "int64"
           },
           "bf_active": {
             "type": "boolean"
           },
           "rpcs_by_message_type": {
             "$ref": "#\/components\/schemas\/v0.0.39_stats_msg_rpcs_by_type"
           },
           "rpcs_by_user": {
             "$ref": "#\/components\/schemas\/v0.0.39_stats_msg_rpcs_by_user"
           }
         },
         "required": [
         ]
       },
       "v0.0.39_stats_msg_rpcs_by_type": {
         "type": "array",
         "description": "RPCs by message type",
         "items": {
           "type": "object",
           "description": "RPC",
           "properties": {
             "message_type": {
               "type": "string",
               "description": "Message type as string"
             },
             "type_id": {
               "type": "integer",
               "format": "int32",
               "description": "Message type as integer"
             },
             "count": {
               "type": "integer",
               "format": "int64",
               "description": "Number of RPCs received"
             },
             "average_time": {
               "type": "integer",
               "format": "int64",
               "description": "Average time spent processing RPC in seconds"
             },
             "total_time": {
               "type": "integer",
               "format": "int64",
               "description": "Total time spent processing RPC in seconds"
             }
           }
         }
       },
       "v0.0.39_stats_msg_rpcs_by_user": {
         "type": "array",
         "description": "RPCs by user",
         "items": {
           "type": "object",
           "description": "user",
           "properties": {
             "user": {
               "type": "string",
               "description": "user name"
             },
             "user_id": {
               "type": "integer",
               "format": "int32",
               "description": "user id (numeric)"
             },
             "count": {
               "type": "integer",
               "format": "int64",
               "description": "Number of RPCs received"
             },
             "average_time": {
               "type": "integer",
               "format": "int64",
               "description": "Average time spent processing RPC in seconds"
             },
             "total_time": {
               "type": "integer",
               "format": "int64",
               "description": "Total time spent processing RPC in seconds"
             }
           }
         }
       },
       "v0.0.39_licenses": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_license"
         }
       },
       "v0.0.39_license": {
         "type": "object",
         "properties": {
           "LicenseName": {
             "type": "string"
           },
           "Total": {
             "type": "integer",
             "format": "int32"
           },
           "Used": {
             "type": "integer",
             "format": "int32"
           },
           "Free": {
             "type": "integer",
             "format": "int32"
           },
           "Remote": {
             "type": "boolean"
           },
           "Reserved": {
             "type": "integer",
             "format": "int32"
           },
           "LastConsumed": {
             "type": "integer",
             "format": "int32"
           },
           "LastDeficit": {
             "type": "integer",
             "format": "int32"
           },
           "LastUpdate": {
             "type": "integer",
             "format": "int64"
           }
         },
         "required": [
         ]
       },
       "v0.0.39_controller_ping_array": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_controller_ping"
         }
       },
       "v0.0.39_controller_ping": {
         "type": "object",
         "properties": {
           "hostname": {
             "type": "string"
           },
           "pinged": {
             "type": "string"
           },
           "latency": {
             "type": "integer",
             "format": "int64"
           },
           "mode": {
             "type": "string"
           }
         },
         "required": [
         ]
       },
       "v0.0.39_partition_info_array": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_partition_info"
         }
       },
       "v0.0.39_partition_info": {
         "type": "object",
         "properties": {
           "nodes": {
             "type": "object",
             "properties": {
               "total": {
                 "type": "integer",
                 "format": "int32"
               }
             }
           },
           "accounts": {
             "type": "object",
             "properties": {
               "deny": {
                 "type": "string"
               }
             }
           },
           "groups": {
             "type": "object",
             "properties": {
               "allowed": {
                 "type": "string"
               }
             }
           },
           "qos": {
             "type": "object",
             "properties": {
               "assigned": {
                 "type": "string"
               }
             }
           },
           "alternate": {
             "type": "string"
           },
           "tres": {
             "type": "object",
             "properties": {
               "configured": {
                 "type": "string"
               }
             }
           },
           "cluster": {
             "type": "string"
           },
           "cpus": {
             "type": "object",
             "properties": {
               "total": {
                 "type": "integer",
                 "format": "int32"
               }
             }
           },
           "defaults": {
             "type": "object",
             "properties": {
               "job": {
                 "type": "string"
               }
             }
           },
           "grace_time": {
             "type": "integer",
             "format": "int32"
           },
           "maximums": {
             "type": "object",
             "properties": {
               "over_time_limit": {
                 "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
               }
             }
           },
           "minimums": {
             "type": "object",
             "properties": {
               "nodes": {
                 "type": "integer",
                 "format": "int32"
               }
             }
           },
           "name": {
             "type": "string"
           },
           "node_sets": {
             "type": "string"
           },
           "priority": {
             "type": "object",
             "properties": {
               "tier": {
                 "type": "integer",
                 "format": "int32"
               }
             }
           },
           "timeouts": {
             "type": "object",
             "properties": {
               "suspend": {
                 "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
               }
             }
           },
           "suspend_time": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           }
         },
         "required": [
         ]
       },
       "v0.0.39_reservation_info_array": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_reservation_info"
         }
       },
       "v0.0.39_reservation_info": {
         "type": "object",
         "properties": {
           "accounts": {
             "type": "string"
           },
           "burst_buffer": {
             "type": "string"
           },
           "core_count": {
             "type": "integer",
             "format": "int32"
           },
           "core_specializations": {
             "$ref": "#\/components\/schemas\/v0.0.39_reservation_info_core_spec"
           },
           "end_time": {
             "type": "integer",
             "format": "int64"
           },
           "features": {
             "type": "string"
           },
           "flags": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "MAINT",
                 "NO_MAINT",
                 "DAILY",
                 "NO_DAILY",
                 "WEEKLY",
                 "NO_WEEKLY",
                 "IGNORE_JOBS",
                 "NO_IGNORE_JOBS",
                 "ANY_NODES",
                 "STATIC",
                 "NO_STATIC",
                 "PART_NODES",
                 "NO_PART_NODES",
                 "OVERLAP",
                 "SPEC_NODES",
                 "FIRST_CORES",
                 "TIME_FLOAT",
                 "REPLACE",
                 "ALL_NODES",
                 "PURGE_COMP",
                 "WEEKDAY",
                 "NO_WEEKDAY",
                 "WEEKEND",
                 "NO_WEEKEND",
                 "FLEX",
                 "NO_FLEX",
                 "DURATION_PLUS",
                 "DURATION_MINUS",
                 "NO_HOLD_JOBS_AFTER_END",
                 "NO_PURGE_COMP",
                 "MAGNETIC",
                 "SKIP",
                 "HOURLY",
                 "NO_HOURLY",
                 "REOCCURRING"
               ]
             }
           },
           "groups": {
             "type": "string"
           },
           "licenses": {
             "type": "string"
           },
           "max_start_delay": {
             "type": "integer",
             "format": "int32"
           },
           "name": {
             "type": "string"
           },
           "node_count": {
             "type": "integer",
             "format": "int32"
           },
           "node_list": {
             "type": "string"
           },
           "partition": {
             "type": "string"
           },
           "purge_completed": {
             "type": "object",
             "properties": {
               "time": {
                 "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
               }
             }
           },
           "start_time": {
             "type": "integer",
             "format": "int64"
           },
           "watts": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "tres": {
             "type": "string"
           },
           "users": {
             "type": "string"
           }
         },
         "required": [
         ]
       },
       "v0.0.39_reservation_info_core_spec": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_reservation_core_spec"
         }
       },
       "v0.0.39_reservation_core_spec": {
         "type": "object",
         "properties": {
           "node": {
             "type": "string"
           },
           "core": {
             "type": "string"
           }
         },
         "required": [
         ]
       },
       "v0.0.39_job_array_response_msg_ptr": {
         "$ref": "#\/components\/schemas\/v0.0.39_job_array_response_msg"
       },
       "v0.0.39_job_array_response_msg": {
         "type": "array",
         "description": "Result per ArrayJob",
         "items": {
           "type": "object",
           "description": "ArrayJob",
           "properties": {
             "job_id": {
               "type": "integer",
               "format": "int32",
               "description": "JobId"
             },
             "error_code": {
               "type": "integer",
               "format": "int32",
               "description": "numeric error code"
             },
             "error": {
               "type": "string",
               "description": "error code description"
             },
             "why": {
               "type": "string",
               "description": "error message"
             }
           }
         }
       },
       "v0.0.39_job_info_msg": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_job_info"
         }
       },
       "v0.0.39_job_info": {
         "type": "object",
         "properties": {
           "account": {
             "type": "string"
           },
           "accrue_time": {
             "type": "integer",
             "format": "int64"
           },
           "admin_comment": {
             "type": "string"
           },
           "allocating_node": {
             "type": "string"
           },
           "array_job_id": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "array_task_id": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "array_max_tasks": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "array_task_string": {
             "type": "string"
           },
           "association_id": {
             "type": "integer",
             "format": "int32"
           },
           "batch_features": {
             "type": "string"
           },
           "batch_flag": {
             "type": "boolean"
           },
           "batch_host": {
             "type": "string"
           },
           "flags": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "KILL_INVALID_DEPENDENCY",
                 "NO_KILL_INVALID_DEPENDENCY",
                 "HAS_STATE_DIRECTORY",
                 "TESTING_BACKFILL",
                 "GRES_BINDING_ENFORCED",
                 "TEST_NOW_ONLY",
                 "SEND_JOB_ENVIRONMENT",
                 "SPREAD_JOB",
                 "PREFER_MINIMUM_NODE_COUNT",
                 "JOB_KILL_HURRY",
                 "SKIP_TRES_STRING_ACCOUNTING",
                 "SIBLING_CLUSTER_UPDATE_ONLY",
                 "HETEROGENEOUS_JOB",
                 "EXACT_TASK_COUNT_REQUESTED",
                 "EXACT_CPU_COUNT_REQUESTED",
                 "TESTING_WHOLE_NODE_BACKFILL",
                 "TOP_PRIORITY_JOB",
                 "ACCRUE_COUNT_CLEARED",
                 "GRED_BINDING_DISABLED",
                 "JOB_WAS_RUNNING",
                 "JOB_ACCRUE_TIME_RESET",
                 "CRON_JOB",
                 "EXACT_MEMORY_REQUESTED",
                 "JOB_RESIZED",
                 "USING_DEFAULT_ACCOUNT",
                 "USING_DEFAULT_PARTITION",
                 "USING_DEFAULT_QOS",
                 "USING_DEFAULT_WCKEY",
                 "DEPENDENT",
                 "MAGNETIC",
                 "PARTITION_ASSIGNED",
                 "BACKFILL_ATTEMPTED",
                 "SCHEDULING_ATTEMPTED",
                 "SAVE_BATCH_SCRIPT"
               ]
             }
           },
           "burst_buffer": {
             "type": "string"
           },
           "burst_buffer_state": {
             "type": "string"
           },
           "cluster": {
             "type": "string"
           },
           "cluster_features": {
             "type": "string"
           },
           "command": {
             "type": "string"
           },
           "comment": {
             "type": "string"
           },
           "container": {
             "type": "string"
           },
           "container_id": {
             "type": "string"
           },
           "contiguous": {
             "type": "boolean"
           },
           "core_spec": {
             "type": "integer",
             "format": "int32"
           },
           "thread_spec": {
             "type": "integer",
             "format": "int32"
           },
           "cores_per_socket": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
           },
           "billable_tres": {
             "$ref": "#\/components\/schemas\/v0.0.39_float64_no_val"
           },
           "cpus_per_task": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
           },
           "cpu_frequency_minimum": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "cpu_frequency_maximum": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "cpu_frequency_governor": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "cpus_per_tres": {
             "type": "string"
           },
           "cron": {
             "type": "string"
           },
           "deadline": {
             "type": "integer",
             "format": "int64"
           },
           "delay_boot": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "dependency": {
             "type": "string"
           },
           "derived_exit_code": {
             "type": "integer",
             "format": "int32"
           },
           "eligible_time": {
             "type": "integer",
             "format": "int64"
           },
           "end_time": {
             "type": "integer",
             "format": "int64"
           },
           "excluded_nodes": {
             "type": "string"
           },
           "exit_code": {
             "type": "integer",
             "format": "int32"
           },
           "extra": {
             "type": "string"
           },
           "failed_node": {
             "type": "string"
           },
           "features": {
             "type": "string"
           },
           "federation_origin": {
             "type": "string"
           },
           "federation_siblings_active": {
             "type": "string"
           },
           "federation_siblings_viable": {
             "type": "string"
           },
           "gres_detail": {
             "$ref": "#\/components\/schemas\/v0.0.39_job_info_gres_detail"
           },
           "group_id": {
             "type": "integer",
             "format": "int32"
           },
           "group_name": {
             "type": "string"
           },
           "het_job_id": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "het_job_id_set": {
             "type": "string"
           },
           "het_job_offset": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "job_id": {
             "type": "integer",
             "format": "int32"
           },
           "job_resources": {
             "$ref": "#\/components\/schemas\/v0.0.39_job_res_ptr"
           },
           "job_size_str": {
             "$ref": "#\/components\/schemas\/v0.0.39_csv_list"
           },
           "job_state": {
             "type": "string"
           },
           "last_sched_evaluation": {
             "type": "integer",
             "format": "int64"
           },
           "licenses": {
             "type": "string"
           },
           "mail_type": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "BEGIN",
                 "END",
                 "FAIL",
                 "REQUEUE",
                 "TIME=100%",
                 "TIME=90%",
                 "TIME=80%",
                 "TIME=50%",
                 "STAGE_OUT",
                 "ARRAY_TASKS",
                 "INVALID_DEPENDENCY"
               ]
             }
           },
           "mail_user": {
             "type": "string"
           },
           "max_cpus": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "max_nodes": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "mcs_label": {
             "type": "string"
           },
           "memory_per_tres": {
             "type": "string"
           },
           "name": {
             "type": "string"
           },
           "network": {
             "type": "string"
           },
           "nodes": {
             "type": "string"
           },
           "nice": {
             "type": "integer",
             "format": "int32"
           },
           "tasks_per_core": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
           },
           "tasks_per_tres": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
           },
           "tasks_per_node": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
           },
           "tasks_per_socket": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
           },
           "tasks_per_board": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
           },
           "cpus": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "node_count": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "tasks": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "partition": {
             "type": "string"
           },
           "prefer": {
             "type": "string"
           },
           "memory_per_cpu": {
             "$ref": "#\/components\/schemas\/v0.0.39_job_mem_per_cpu"
           },
           "memory_per_node": {
             "$ref": "#\/components\/schemas\/v0.0.39_job_mem_per_node"
           },
           "minimum_cpus_per_node": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
           },
           "minimum_tmp_disk_per_node": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "power": {
             "type": "object",
             "properties": {
               "flags": {
                 "type": "array",
                 "items": {
                   "type": "string",
                   "description": "flags",
                   "enum": [
                     "EQUAL_POWER"
                   ]
                 }
               }
             }
           },
           "preempt_time": {
             "type": "integer",
             "format": "int64"
           },
           "preemptable_time": {
             "type": "integer",
             "format": "int64"
           },
           "pre_sus_time": {
             "type": "integer",
             "format": "int64"
           },
           "priority": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "profile": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "NOT_SET",
                 "NONE",
                 "ENERGY",
                 "LUSTRE",
                 "NETWORK",
                 "TASK"
               ]
             }
           },
           "qos": {
             "type": "string"
           },
           "reboot": {
             "type": "boolean"
           },
           "required_nodes": {
             "type": "string"
           },
           "minimum_switches": {
             "type": "integer",
             "format": "int32"
           },
           "requeue": {
             "type": "boolean"
           },
           "resize_time": {
             "type": "integer",
             "format": "int64"
           },
           "restart_cnt": {
             "type": "integer",
             "format": "int32"
           },
           "resv_name": {
             "type": "string"
           },
           "scheduled_nodes": {
             "type": "string"
           },
           "selinux_context": {
             "type": "string"
           },
           "shared": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "none",
                 "oversubscribe",
                 "user",
                 "mcs"
               ]
             }
           },
           "exclusive": {
             "$ref": "#\/components\/schemas\/v0.0.39_job_exclusive"
           },
           "show_flags": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "ALL",
                 "DETAIL",
                 "MIXED",
                 "LOCAL",
                 "SIBLING",
                 "FEDERATION",
                 "FUTURE"
               ]
             }
           },
           "sockets_per_board": {
             "type": "integer",
             "format": "int32"
           },
           "sockets_per_node": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
           },
           "start_time": {
             "type": "integer",
             "format": "int64"
           },
           "state_description": {
             "type": "string"
           },
           "state_reason": {
             "type": "string"
           },
           "standard_error": {
             "type": "string"
           },
           "standard_input": {
             "type": "string"
           },
           "standard_output": {
             "type": "string"
           },
           "submit_time": {
             "type": "integer",
             "format": "int64"
           },
           "suspend_time": {
             "type": "integer",
             "format": "int64"
           },
           "system_comment": {
             "type": "string"
           },
           "time_limit": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "time_minimum": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "threads_per_core": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint16_no_val"
           },
           "tres_bind": {
             "type": "string"
           },
           "tres_freq": {
             "type": "string"
           },
           "tres_per_job": {
             "type": "string"
           },
           "tres_per_node": {
             "type": "string"
           },
           "tres_per_socket": {
             "type": "string"
           },
           "tres_per_task": {
             "type": "string"
           },
           "tres_req_str": {
             "type": "string"
           },
           "tres_alloc_str": {
             "type": "string"
           },
           "user_id": {
             "type": "integer",
             "format": "int32"
           },
           "user_name": {
             "type": "string"
           },
           "maximum_switch_wait_time": {
             "type": "integer",
             "format": "int32"
           },
           "wckey": {
             "type": "string"
           },
           "current_working_directory": {
             "type": "string"
           }
         },
         "required": [
         ]
       },
       "v0.0.39_float64_no_val": {
         "type": "object",
         "description": "64 bit floating point number with flags",
         "properties": {
           "set": {
             "type": "boolean",
             "description": "True if number has been set. False if number is unset",
             "default": false
           },
           "infinite": {
             "type": "boolean",
             "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
             "default": 0.000000
           },
           "number": {
             "type": "number",
             "format": "double",
             "description": "If set is True the number will be set with value. Otherwise ignore number contents."
           }
         }
       },
       "v0.0.39_job_info_gres_detail": {
         "type": "array",
         "items": {
           "type": "string"
         }
       },
       "v0.0.39_job_res_ptr": {
         "$ref": "#\/components\/schemas\/v0.0.39_job_res"
       },
       "v0.0.39_job_res": {
         "type": "object",
         "properties": {
           "nodes": {
             "type": "string"
           },
           "allocated_cores": {
             "type": "integer",
             "format": "int32"
           },
           "allocated_cpus": {
             "type": "integer",
             "format": "int32"
           },
           "allocated_hosts": {
             "type": "integer",
             "format": "int32"
           },
           "allocated_nodes": {
             "$ref": "#\/components\/schemas\/v0.0.39_job_res_nodes"
           }
         },
         "required": [
         ]
       },
       "v0.0.39_job_res_nodes": {
         "type": "array",
         "description": "job node resources",
         "items": {
         }
       },
       "v0.0.39_job_desc_msg_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_job_desc_msg"
         }
       },
       "v0.0.39_nodes": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_node"
         }
       },
       "v0.0.39_node": {
         "type": "object",
         "properties": {
           "architecture": {
             "type": "string"
           },
           "burstbuffer_network_address": {
             "type": "string"
           },
           "boards": {
             "type": "integer",
             "format": "int32"
           },
           "boot_time": {
             "type": "integer",
             "format": "int64"
           },
           "cluster_name": {
             "type": "string"
           },
           "cores": {
             "type": "integer",
             "format": "int32"
           },
           "specialized_cores": {
             "type": "integer",
             "format": "int32"
           },
           "cpu_binding": {
             "type": "integer",
             "format": "int32"
           },
           "cpu_load": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "free_mem": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint64_no_val"
           },
           "cpus": {
             "type": "integer",
             "format": "int32"
           },
           "effective_cpus": {
             "type": "integer",
             "format": "int32"
           },
           "specialized_cpus": {
             "type": "string"
           },
           "energy": {
             "$ref": "#\/components\/schemas\/v0.0.39_acct_gather_energy_ptr"
           },
           "external_sensors": {
             "$ref": "#\/components\/schemas\/v0.0.39_ext_sensors_data_ptr"
           },
           "extra": {
             "type": "string"
           },
           "power": {
             "$ref": "#\/components\/schemas\/v0.0.39_power_mgmt_data_ptr"
           },
           "features": {
             "$ref": "#\/components\/schemas\/v0.0.39_csv_list"
           },
           "active_features": {
             "$ref": "#\/components\/schemas\/v0.0.39_csv_list"
           },
           "gres": {
             "type": "string"
           },
           "gres_drained": {
             "type": "string"
           },
           "gres_used": {
             "type": "string"
           },
           "last_busy": {
             "type": "integer",
             "format": "int64"
           },
           "mcs_label": {
             "type": "string"
           },
           "specialized_memory": {
             "type": "integer",
             "format": "int64"
           },
           "name": {
             "type": "string"
           },
           "next_state_after_reboot": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "INVALID",
                 "UNKNOWN",
                 "DOWN",
                 "IDLE",
                 "ALLOCATED",
                 "ERROR",
                 "MIXED",
                 "FUTURE",
                 "PERFCTRS",
                 "RESERVED",
                 "UNDRAIN",
                 "CLOUD",
                 "RESUME",
                 "DRAIN",
                 "COMPLETING",
                 "NOT_RESPONDING",
                 "POWERED_DOWN",
                 "FAIL",
                 "POWERING_UP",
                 "MAINTENANCE",
                 "REBOOT_REQUESTED",
                 "REBOOT_CANCELED",
                 "POWERING_DOWN",
                 "DYNAMIC_FUTURE",
                 "REBOOT_ISSUED",
                 "PLANNED",
                 "INVALID_REG",
                 "POWER_DOWN",
                 "POWER_UP",
                 "POWER_DRAIN",
                 "DYNAMIC_NORM"
               ]
             }
           },
           "address": {
             "type": "string"
           },
           "hostname": {
             "type": "string"
           },
           "state": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "INVALID",
                 "UNKNOWN",
                 "DOWN",
                 "IDLE",
                 "ALLOCATED",
                 "ERROR",
                 "MIXED",
                 "FUTURE",
                 "PERFCTRS",
                 "RESERVED",
                 "UNDRAIN",
                 "CLOUD",
                 "RESUME",
                 "DRAIN",
                 "COMPLETING",
                 "NOT_RESPONDING",
                 "POWERED_DOWN",
                 "FAIL",
                 "POWERING_UP",
                 "MAINTENANCE",
                 "REBOOT_REQUESTED",
                 "REBOOT_CANCELED",
                 "POWERING_DOWN",
                 "DYNAMIC_FUTURE",
                 "REBOOT_ISSUED",
                 "PLANNED",
                 "INVALID_REG",
                 "POWER_DOWN",
                 "POWER_UP",
                 "POWER_DRAIN",
                 "DYNAMIC_NORM"
               ]
             }
           },
           "operating_system": {
             "type": "string"
           },
           "owner": {
             "type": "string"
           },
           "partitions": {
             "$ref": "#\/components\/schemas\/v0.0.39_csv_list"
           },
           "port": {
             "type": "integer",
             "format": "int32"
           },
           "real_memory": {
             "type": "integer",
             "format": "int64"
           },
           "comment": {
             "type": "string"
           },
           "reason": {
             "type": "string"
           },
           "reason_changed_at": {
             "type": "integer",
             "format": "int64"
           },
           "reason_set_by_user": {
             "type": "string"
           },
           "resume_after": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint64_no_val"
           },
           "reservation": {
             "type": "string"
           },
           "alloc_memory": {
             "type": "integer",
             "format": "int64"
           },
           "alloc_cpus": {
             "type": "integer",
             "format": "int32"
           },
           "alloc_idle_cpus": {
             "type": "integer",
             "format": "int32"
           },
           "tres_used": {
             "type": "string"
           },
           "tres_weighted": {
             "type": "number",
             "format": "double"
           },
           "slurmd_start_time": {
             "type": "integer",
             "format": "int64"
           },
           "sockets": {
             "type": "integer",
             "format": "int32"
           },
           "threads": {
             "type": "integer",
             "format": "int32"
           },
           "temporary_disk": {
             "type": "integer",
             "format": "int32"
           },
           "weight": {
             "type": "integer",
             "format": "int32"
           },
           "tres": {
             "type": "string"
           },
           "version": {
             "type": "string"
           }
         },
         "required": [
         ]
       },
       "v0.0.39_acct_gather_energy_ptr": {
         "$ref": "#\/components\/schemas\/v0.0.39_acct_gather_energy"
       },
       "v0.0.39_acct_gather_energy": {
         "type": "object",
         "properties": {
           "average_watts": {
             "type": "integer",
             "format": "int32"
           },
           "base_consumed_energy": {
             "type": "integer",
             "format": "int64"
           },
           "consumed_energy": {
             "type": "integer",
             "format": "int64"
           },
           "current_watts": {
             "type": "integer",
             "format": "int32"
           },
           "previous_consumed_energy": {
             "type": "integer",
             "format": "int64"
           },
           "last_collected": {
             "type": "integer",
             "format": "int64"
           }
         },
         "required": [
         ]
       },
       "v0.0.39_ext_sensors_data_ptr": {
         "$ref": "#\/components\/schemas\/v0.0.39_ext_sensors_data"
       },
       "v0.0.39_ext_sensors_data": {
         "type": "object",
         "properties": {
           "consumed_energy": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint64_no_val"
           },
           "temperature": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "energy_update_time": {
             "type": "integer",
             "format": "int64"
           },
           "current_watts": {
             "type": "integer",
             "format": "int32"
           }
         },
         "required": [
         ]
       },
       "v0.0.39_power_mgmt_data_ptr": {
         "$ref": "#\/components\/schemas\/v0.0.39_power_mgmt_data"
       },
       "v0.0.39_power_mgmt_data": {
         "type": "object",
         "properties": {
           "maximum_watts": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "current_watts": {
             "type": "integer",
             "format": "int32"
           },
           "total_energy": {
             "type": "integer",
             "format": "int64"
           },
           "new_maximum_watts": {
             "type": "integer",
             "format": "int32"
           },
           "peak_watts": {
             "type": "integer",
             "format": "int32"
           },
           "lowest_watts": {
             "type": "integer",
             "format": "int32"
           },
           "new_job_time": {
             "type": "integer",
             "format": "int64"
           },
           "state": {
             "type": "integer",
             "format": "int32"
           },
           "time_start_day": {
             "type": "integer",
             "format": "int64"
           }
         },
         "required": [
         ]
       },
       "dbv0.0.37_diag": {
         "properties": {
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_error"
             }
           },
           "statistics": {
             "type": "object",
             "description": "dictionary of Slurmdb statistics",
             "properties": {
               "time_start": {
                 "type": "integer",
                 "description": "Unix timestamp of start time"
               },
               "rollups": {
                 "type": "array",
                 "items": {
                   "type": "object",
                   "description": "Rollup statistics",
                   "properties": {
                     "type": {
                       "type": "string",
                       "description": "Type of rollup"
                     },
                     "last_run": {
                       "type": "integer",
                       "description": "Timestamp of last rollup"
                     },
                     "last_cycle": {
                       "type": "integer",
                       "description": "Timestamp of last cycle"
                     },
                     "max_cycle": {
                       "type": "integer",
                       "description": "Max time of all cycles"
                     },
                     "total_time": {
                       "type": "integer",
                       "description": "Total time (s) spent doing rollup"
                     },
                     "mean_cycles": {
                       "type": "integer",
                       "description": "Average time (s) of cycle"
                     }
                   }
                 }
               },
               "RPCs": {
                 "type": "array",
                 "items": {
                   "type": "object",
                   "description": "Statistics by RPC type",
                   "properties": {
                     "rpc": {
                       "type": "string",
                       "description": "RPC type"
                     },
                     "count": {
                       "type": "integer",
                       "description": "Number of RPCs"
                     },
                     "time": {
                       "type": "object",
                       "description": "Time values",
                       "properties": {
                         "average": {
                           "type": "integer",
                           "description": "Average time spent processing this RPC type"
                         },
                         "total": {
                           "type": "integer",
                           "description": "Total time spent processing this RPC type"
                         }
                       }
                     }
                   }
                 }
               },
               "users": {
                 "type": "array",
                 "items": {
                   "type": "object",
                   "description": "Statistics by user RPCs",
                   "properties": {
                     "user": {
                       "type": "string",
                       "description": "User name"
                     },
                     "count": {
                       "type": "integer",
                       "description": "Number of RPCs"
                     },
                     "time": {
                       "type": "object",
                       "description": "Time values",
                       "properties": {
                         "average": {
                           "type": "integer",
                           "description": "Average time spent processing each user RPC"
                         },
                         "total": {
                           "type": "integer",
                           "description": "Total time spent processing each user RPC"
                         }
                       }
                     }
                   }
                 }
               }
             }
           }
         }
       },
       "dbv0.0.37_account": {
         "type": "object",
         "description": "Account description",
         "properties": {
           "associations": {
             "type": "array",
             "description": "List of assigned associations",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_association_short_info"
             }
           },
           "coordinators": {
             "type": "array",
             "description": "List of assigned coordinators",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_coordinator_info"
             }
           },
           "description": {
             "type": "string",
             "description": "Description of account"
           },
           "name": {
             "type": "string",
             "description": "Name of account"
           },
           "organization": {
             "type": "string",
             "description": "Assigned organization of account"
           },
           "flags": {
             "type": "array",
             "description": "List of properties of account",
             "items": {
               "type": "string",
               "description": "String of property name"
             }
           }
         }
       },
       "dbv0.0.37_account_info": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_error"
             }
           },
           "accounts": {
             "type": "array",
             "description": "List of accounts",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_account"
             }
           }
         }
       },
       "dbv0.0.37_coordinator_info": {
         "type": "object",
         "properties": {
           "name": {
             "type": "string",
             "description": "Name of user"
           },
           "direct": {
             "type": "integer",
             "description": "If user is coordinator of this account directly or coordinator status was inheirted from a higher account in the tree"
           }
         }
       },
       "dbv0.0.37_association_short_info": {
         "type": "object",
         "properties": {
           "account": {
             "type": "string",
             "description": "Account name"
           },
           "cluster": {
             "type": "string",
             "description": "Cluster name"
           },
           "partition": {
             "type": "string",
             "description": "Partition name (optional)"
           },
           "user": {
             "type": "string",
             "description": "User name"
           }
         }
       },
       "dbv0.0.37_response_account_delete": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_error"
             }
           }
         }
       },
       "dbv0.0.37_response_wckey_add": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_error"
             }
           }
         }
       },
       "dbv0.0.37_wckey_info": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_error"
             }
           },
           "wckeys": {
             "type": "array",
             "description": "List of wckeys",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_wckey"
             }
           }
         }
       },
       "dbv0.0.37_wckey": {
         "type": "object",
         "properties": {
           "accounts": {
             "type": "array",
             "description": "List of assigned accounts",
             "items": {
               "type": "string",
               "description": "Account name"
             }
           },
           "cluster": {
             "type": "string",
             "description": "Cluster name"
           },
           "id": {
             "type": "integer",
             "description": "wckey database unique id"
           },
           "name": {
             "type": "string",
             "description": "wckey name"
           },
           "user": {
             "type": "string",
             "description": "wckey user"
           },
           "flags": {
             "type": "array",
             "description": "List of properties of wckey",
             "items": {
               "type": "string",
               "description": "String of property name"
             }
           }
         }
       },
       "dbv0.0.37_response_wckey_delete": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_error"
             }
           }
         }
       },
       "dbv0.0.37_response_cluster_add": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_error"
             }
           }
         }
       },
       "dbv0.0.37_cluster_info": {
         "type": "object",
         "properties": {
           "controller": {
             "type": "object",
             "description": "Information about controller",
             "properties": {
               "host": {
                 "type": "string",
                 "description": "Hostname"
               },
               "port": {
                 "type": "integer",
                 "description": "Port number"
               }
             }
           },
           "flags": {
             "type": "array",
             "description": "List of properties of cluster",
             "items": {
               "type": "string",
               "description": "String of property name"
             }
           },
           "name": {
             "type": "string",
             "description": "Cluster name"
           },
           "nodes": {
             "type": "string",
             "description": "Assigned nodes"
           },
           "select_plugin": {
             "type": "string",
             "description": "Configured select plugin"
           },
           "associations": {
             "type": "object",
             "description": "Information about associations",
             "properties": {
               "root": {
                 "$ref": "#\/components\/schemas\/dbv0.0.37_association_short_info"
               }
             }
           },
           "rpc_version": {
             "type": "integer",
             "description": "Number rpc version"
           },
           "tres": {
             "type": "array",
             "description": "List of TRES in cluster",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_response_tres"
             }
           }
         }
       },
       "dbv0.0.37_response_cluster_delete": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_error"
             }
           }
         }
       },
       "dbv0.0.37_response_user_update": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_error"
             }
           }
         }
       },
       "dbv0.0.37_user": {
         "type": "object",
         "description": "User description",
         "properties": {
           "administrator_level": {
             "type": "string",
             "description": "Description of administrator level"
           },
           "associations": {
             "type": "object",
             "description": "Assigned associations",
             "properties": {
               "root": {
                 "$ref": "#\/components\/schemas\/dbv0.0.37_association_short_info"
               }
             }
           },
           "coordinators": {
             "type": "array",
             "description": "List of assigned coordinators",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_coordinator_info"
             }
           },
           "default": {
             "type": "object",
             "description": "Default settings",
             "properties": {
               "account": {
                 "type": "string",
                 "description": "Default account name"
               },
               "wckey": {
                 "type": "string",
                 "description": "Default wckey"
               }
             }
           },
           "name": {
             "type": "string",
             "description": "User name"
           }
         }
       },
       "dbv0.0.37_user_info": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_error"
             }
           },
           "users": {
             "type": "array",
             "description": "Array of users",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_user"
             }
           }
         }
       },
       "dbv0.0.37_response_user_delete": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_error"
             }
           }
         }
       },
       "dbv0.0.37_response_association_delete": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_error"
             }
           }
         }
       },
       "dbv0.0.37_association": {
         "type": "object",
         "description": "Association description",
         "properties": {
           "is_default": {
             "type": "integer",
             "description": "is default association"
           },
           "account": {
             "type": "string",
             "description": "Assigned account"
           },
           "cluster": {
             "type": "string",
             "description": "Assigned cluster"
           },
           "default": {
             "type": "object",
             "description": "Default settings",
             "properties": {
               "qos": {
                 "type": "string",
                 "description": "Default QOS"
               }
             }
           },
           "flags": {
             "type": "array",
             "description": "List of properties of association",
             "items": {
               "type": "string",
               "description": "String of property name"
             }
           },
           "max": {
             "type": "object",
             "description": "Max settings",
             "properties": {
               "jobs": {
                 "type": "object",
                 "description": "Max jobs settings",
                 "properties": {
                   "active": {
                     "type": "integer",
                     "description": "Max TRES for active total jobs"
                   },
                   "accruing": {
                     "type": "integer",
                     "description": "Max TRES for job accruing priority"
                   },
                   "total": {
                     "type": "integer",
                     "description": "Max TRES for job total submitted"
                   },
                   "per": {
                     "type": "object",
                     "description": "Max jobs per settings",
                     "properties": {
                       "wall_clock": {
                         "type": "integer",
                         "description": "Max wallclock per job"
                       }
                     }
                   }
                 }
               },
               "per": {
                 "type": "object",
                 "description": "Max per settings",
                 "properties": {
                   "account": {
                     "type": "object",
                     "description": "Max per accounting settings",
                     "properties": {
                       "wall_clock": {
                         "type": "integer",
                         "description": "Max wallclock per account"
                       }
                     }
                   }
                 }
               },
               "tres": {
                 "type": "object",
                 "description": "Max TRES settings",
                 "properties": {
                   "group": {
                     "type": "object",
                     "description": "Max TRES per group",
                     "properties": {
                       "minutes": {
                         "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
                       },
                       "active": {
                         "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
                       }
                     }
                   },
                   "per": {
                     "type": "object",
                     "description": "Max TRES per settings",
                     "properties": {
                       "job": {
                         "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
                       },
                       "node": {
                         "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
                       }
                     }
                   },
                   "total": {
                     "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
                   },
                   "minutes": {
                     "type": "object",
                     "description": "Max TRES minutes settings",
                     "properties": {
                       "per": {
                         "type": "object",
                         "description": "Max TRES minutes per settings",
                         "properties": {
                           "job": {
                             "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
                           }
                         }
                       },
                       "total": {
                         "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
                       }
                     }
                   }
                 }
               }
             }
           },
           "min": {
             "type": "object",
             "description": "Min settings",
             "properties": {
               "priority_threshold": {
                 "type": "integer",
                 "description": "Min priority threshold"
               }
             }
           },
           "parent_account": {
             "type": "string",
             "description": "Parent account name"
           },
           "partition": {
             "type": "string",
             "description": "Assigned partition"
           },
           "priority": {
             "type": "integer",
             "description": "Assigned priority"
           },
           "qos": {
             "type": "array",
             "description": "Assigned QOS",
             "items": {
               "type": "string",
               "description": "Assigned single QOS name"
             }
           },
           "shares_raw": {
             "type": "integer",
             "description": "Raw fairshare shares"
           },
           "usage": {
             "type": "object",
             "description": "Association usage",
             "properties": {
               "accrue_job_count": {
                 "type": "integer",
                 "description": "Jobs accuring priority"
               },
               "group_used_wallclock": {
                 "type": "number",
                 "description": "Group used wallclock time (s)"
               },
               "fairshare_factor": {
                 "type": "number",
                 "description": "Fairshare factor"
               },
               "fairshare_shares": {
                 "type": "integer",
                 "description": "Fairshare shares"
               },
               "normalized_priority": {
                 "type": "integer",
                 "description": "Currently active jobs"
               },
               "normalized_shares": {
                 "type": "number",
                 "description": "Normalized shares"
               },
               "effective_normalized_usage": {
                 "type": "number",
                 "description": "Effective normalized usage"
               },
               "raw_usage": {
                 "type": "integer",
                 "description": "Raw usage"
               },
               "job_count": {
                 "type": "integer",
                 "description": "Total jobs submitted"
               },
               "fairshare_level": {
                 "type": "number",
                 "description": "Fairshare level"
               }
             }
           },
           "user": {
             "type": "string",
             "description": "Assigned user"
           }
         }
       },
       "dbv0.0.37_associations_info": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_error"
             }
           },
           "associations": {
             "type": "array",
             "description": "Array of associations",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_association"
             }
           }
         }
       },
       "dbv0.0.37_qos": {
         "type": "object",
         "description": "QOS description",
         "properties": {
           "description": {
             "type": "string",
             "description": "QOS description"
           },
           "flags": {
             "type": "array",
             "description": "List of properties of QOS",
             "items": {
               "type": "string",
               "description": "String of property name"
             }
           },
           "id": {
             "type": "string",
             "description": "Database id"
           },
           "limits": {
             "type": "object",
             "description": "Assigned limits",
             "properties": {
               "factor": {
                 "type": "number",
                 "description": "factor to apply to TRES count for associations using this QOS"
               },
               "max": {
                 "type": "object",
                 "description": "Limits on max settings",
                 "properties": {
                   "wall_clock": {
                     "type": "object",
                     "description": "Limit on wallclock settings",
                     "properties": {
                       "per": {
                         "type": "object",
                         "description": "Limit on wallclock per settings",
                         "properties": {
                           "qos": {
                             "type": "integer",
                             "description": "Max wallclock per QOS"
                           },
                           "job": {
                             "type": "integer",
                             "description": "Max wallclock per job"
                           }
                         }
                       }
                     }
                   },
                   "jobs": {
                     "type": "object",
                     "description": "Limits on jobs settings",
                     "properties": {
                       "active_jobs": {
                         "type": "object",
                         "description": "Limits on active jobs settings",
                         "properties": {
                           "per": {
                             "type": "object",
                             "description": "Limits on active jobs per settings",
                             "properties": {
                               "account": {
                                 "type": "integer",
                                 "description": "Max jobs per account"
                               },
                               "user": {
                                 "type": "integer",
                                 "description": "Max jobs per user"
                               }
                             }
                           }
                         }
                       }
                     }
                   },
                   "accruing": {
                     "type": "object",
                     "description": "Limits on accruing priority",
                     "properties": {
                       "per": {
                         "type": "object",
                         "description": "Max accuring priority per setting",
                         "properties": {
                           "account": {
                             "type": "integer",
                             "description": "Max accuring priority per account"
                           },
                           "user": {
                             "type": "integer",
                             "description": "Max accuring priority per user"
                           }
                         }
                       }
                     }
                   },
                   "tres": {
                     "type": "object",
                     "description": "Limits on TRES",
                     "properties": {
                       "minutes": {
                         "type": "object",
                         "description": "Max TRES minutes settings",
                         "properties": {
                           "per": {
                             "type": "object",
                             "description": "Max TRES minutes per settings",
                             "properties": {
                               "job": {
                                 "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
                               },
                               "account": {
                                 "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
                               },
                               "user": {
                                 "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
                               }
                             }
                           }
                         }
                       },
                       "per": {
                         "type": "object",
                         "description": "Max TRES per settings",
                         "properties": {
                           "account": {
                             "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
                           },
                           "job": {
                             "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
                           },
                           "node": {
                             "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
                           },
                           "user": {
                             "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
                           }
                         }
                       }
                     }
                   }
                 }
               },
               "min": {
                 "type": "object",
                 "description": "Min limit settings",
                 "properties": {
                   "priority_threshold": {
                     "type": "integer",
                     "description": "Min priority threshold"
                   },
                   "tres": {
                     "type": "object",
                     "description": "Min tres settings",
                     "properties": {
                       "per": {
                         "type": "object",
                         "description": "Min tres per settings",
                         "properties": {
                           "job": {
                             "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
                           }
                         }
                       }
                     }
                   }
                 }
               }
             }
           },
           "preempt": {
             "type": "object",
             "description": "Preemption settings",
             "properties": {
               "list": {
                 "type": "array",
                 "description": "List of preemptable QOS",
                 "items": {
                   "type": "string",
                   "description": "Preemptable QOS"
                 }
               },
               "mode": {
                 "type": "array",
                 "description": "List of preemption modes",
                 "items": {
                   "type": "string",
                   "description": "Preemption mode"
                 }
               },
               "exempt_time": {
                 "type": "integer",
                 "description": "Grace period (s) before jobs can preempted"
               }
             }
           },
           "priority": {
             "type": "integer",
             "description": "QOS priority"
           },
           "usage_factor": {
             "type": "number",
             "description": "Usage factor"
           },
           "usage_threshold": {
             "type": "number",
             "description": "Usage threshold"
           }
         }
       },
       "dbv0.0.37_qos_info": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_error"
             }
           },
           "qos": {
             "type": "array",
             "description": "Array of QOS",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_qos"
             }
           }
         }
       },
       "dbv0.0.37_response_qos_delete": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_error"
             }
           }
         }
       },
       "dbv0.0.37_response_associations": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_error"
             }
           }
         }
       },
       "dbv0.0.37_response_tres": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_error"
             }
           }
         }
       },
       "dbv0.0.37_tres_info": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_error"
             }
           },
           "tres": {
             "type": "array",
             "description": "Array of tres",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
             }
           }
         }
       },
       "dbv0.0.37_tres_list": {
         "type": "array",
         "description": "TRES list of attributes",
         "items": {
           "type": "object",
           "properties": {
             "type": {
               "type": "string",
               "description": "TRES type"
             },
             "name": {
               "type": "string",
               "description": "TRES name (optional)"
             },
             "id": {
               "type": "integer",
               "description": "database id"
             },
             "count": {
               "type": "integer",
               "description": "count of TRES"
             }
           }
         }
       },
       "dbv0.0.37_job_info": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_error"
             }
           },
           "jobs": {
             "type": "array",
             "description": "Array of jobs",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_job"
             }
           }
         }
       },
       "dbv0.0.37_job": {
         "type": "object",
         "description": "Single job description",
         "properties": {
           "account": {
             "type": "string",
             "description": "Account charged by job"
           },
           "comment": {
             "type": "object",
             "description": "Job comments by type",
             "properties": {
               "administrator": {
                 "type": "string",
                 "description": "Administrator set comment"
               },
               "job": {
                 "type": "string",
                 "description": "Job comment"
               },
               "system": {
                 "type": "string",
                 "description": "System set comment"
               }
             }
           },
           "allocation_nodes": {
             "type": "string",
             "description": "Nodes allocated to job"
           },
           "array": {
             "type": "object",
             "description": "Array properties (optional)",
             "properties": {
               "job_id": {
                 "type": "integer",
                 "description": "Job id of array"
               },
               "limits": {
                 "type": "object",
                 "description": "Limits on array settings",
                 "properties": {
                   "max": {
                     "type": "object",
                     "description": "Limits on array settings",
                     "properties": {
                       "running": {
                         "type": "object",
                         "description": "Limits on array settings",
                         "properties": {
                           "tasks": {
                             "type": "integer",
                             "description": "Max running tasks in array at any one time"
                           }
                         }
                       }
                     }
                   }
                 }
               },
               "task": {
                 "type": "string",
                 "description": "Array task"
               },
               "task_id": {
                 "type": "integer",
                 "description": "Array task id"
               }
             }
           },
           "time": {
             "type": "object",
             "description": "Time properties",
             "properties": {
               "elapsed": {
                 "type": "integer",
                 "description": "Total time elapsed"
               },
               "eligible": {
                 "type": "integer",
                 "description": "Total time eligible to run"
               },
               "end": {
                 "type": "integer",
                 "description": "Timestamp of when job ended"
               },
               "start": {
                 "type": "integer",
                 "description": "Timestamp of when job started"
               },
               "submission": {
                 "type": "integer",
                 "description": "Timestamp of when job submitted"
               },
               "suspended": {
                 "type": "integer",
                 "description": "Timestamp of when job last suspended"
               },
               "system": {
                 "type": "object",
                 "description": "System time values",
                 "properties": {
                   "seconds": {
                     "type": "integer",
                     "description": "Total number of CPU-seconds used by the system on behalf of the process (in kernel mode), in seconds"
                   },
                   "microseconds": {
                     "type": "integer",
                     "description": "Total number of CPU-seconds used by the system on behalf of the process (in kernel mode), in microseconds"
                   }
                 }
               },
               "total": {
                 "type": "object",
                 "description": "System time values",
                 "properties": {
                   "seconds": {
                     "type": "integer",
                     "description": "Total number of CPU-seconds used by the job, in seconds"
                   },
                   "microseconds": {
                     "type": "integer",
                     "description": "Total number of CPU-seconds used by the job, in microseconds"
                   }
                 }
               },
               "user": {
                 "type": "object",
                 "description": "User land time values",
                 "properties": {
                   "seconds": {
                     "type": "integer",
                     "description": "Total number of CPU-seconds used by the job in user land, in seconds"
                   },
                   "microseconds": {
                     "type": "integer",
                     "description": "Total number of CPU-seconds used by the job in user land, in microseconds"
                   }
                 }
               },
               "limit": {
                 "type": "integer",
                 "description": "Job wall clock time limit"
               }
             }
           },
           "association": {
             "$ref": "#\/components\/schemas\/dbv0.0.37_association_short_info"
           },
           "cluster": {
             "type": "string",
             "description": "Assigned cluster"
           },
           "constraints": {
             "type": "string",
             "description": "Constraints on job"
           },
           "derived_exit_code": {
             "$ref": "#\/components\/schemas\/dbv0.0.37_job_exit_code"
           },
           "exit_code": {
             "$ref": "#\/components\/schemas\/dbv0.0.37_job_exit_code"
           },
           "flags": {
             "type": "array",
             "description": "List of properties of job",
             "items": {
               "type": "string",
               "description": "String of property name"
             }
           },
           "group": {
             "type": "string",
             "description": "User's group to run job"
           },
           "het": {
             "type": "object",
             "description": "Heterogeneous Job details (optional)",
             "properties": {
               "job_id": {
                 "type": "object",
                 "description": "Parent HetJob id"
               },
               "job_offset": {
                 "type": "object",
                 "description": "Offset of this job to parent"
               }
             }
           },
           "job_id": {
             "type": "integer",
             "description": "Job id"
           },
           "name": {
             "type": "string",
             "description": "Assigned job name"
           },
           "mcs": {
             "type": "object",
             "description": "Multi-Category Security",
             "properties": {
               "label": {
                 "type": "string",
                 "description": "Assigned MCS label"
               }
             }
           },
           "nodes": {
             "type": "string",
             "description": "List of nodes allocated for job"
           },
           "partition": {
             "type": "string",
             "description": "Assigned job's partition"
           },
           "priority": {
             "type": "integer",
             "description": "Priority"
           },
           "qos": {
             "type": "string",
             "description": "Assigned qos name"
           },
           "required": {
             "type": "object",
             "description": "Job run requirements",
             "properties": {
               "CPUs": {
                 "type": "integer",
                 "description": "Required number of CPUs"
               },
               "memory": {
                 "type": "integer",
                 "description": "Required amount of memory (MiB)"
               }
             }
           },
           "kill_request_user": {
             "type": "string",
             "description": "User who requested job killed"
           },
           "reservation": {
             "type": "object",
             "description": "Reservation usage details",
             "properties": {
               "id": {
                 "type": "integer",
                 "description": "Database id of reservation"
               },
               "name": {
                 "type": "integer",
                 "description": "Name of reservation"
               }
             }
           },
           "state": {
             "type": "object",
             "description": "State properties of job",
             "properties": {
               "current": {
                 "type": "string",
                 "description": "Current state of job"
               },
               "reason": {
                 "type": "string",
                 "description": "Last reason job didn't run"
               }
             }
           },
           "steps": {
             "type": "array",
             "description": "Job step description",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_job_step"
             }
           },
           "tres": {
             "type": "object",
             "description": "TRES settings",
             "properties": {
               "allocated": {
                 "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
               },
               "requested": {
                 "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
               }
             }
           },
           "user": {
             "type": "string",
             "description": "Job user"
           },
           "wckey": {
             "type": "object",
             "description": "Job assigned wckey details",
             "properties": {
               "wckey": {
                 "type": "string",
                 "description": "Job assigned wckey"
               },
               "flags": {
                 "type": "array",
                 "description": "wckey flags",
                 "items": {
                   "type": "string",
                   "description": "Flag string"
                 }
               }
             }
           },
           "working_directory": {
             "type": "string",
             "description": "Directory where job was initially started"
           }
         }
       },
       "dbv0.0.37_job_exit_code": {
         "type": "object",
         "properties": {
           "status": {
             "type": "string",
             "description": "Job exit status"
           },
           "return_code": {
             "type": "integer",
             "description": "Return code from parent process"
           },
           "signal": {
             "type": "object",
             "description": "Signal details (if signaled)",
             "properties": {
               "signal_id": {
                 "type": "integer",
                 "description": "Signal number process received"
               },
               "name": {
                 "type": "string",
                 "description": "Name of signal received"
               }
             }
           }
         }
       },
       "dbv0.0.37_job_step": {
         "type": "object",
         "properties": {
           "time": {
             "type": "object",
             "description": "Time properties",
             "properties": {
               "elapsed": {
                 "type": "integer",
                 "description": "Total time elapsed"
               },
               "end": {
                 "type": "integer",
                 "description": "Timestamp of when job ended"
               },
               "start": {
                 "type": "integer",
                 "description": "Timestamp of when job started"
               },
               "suspended": {
                 "type": "integer",
                 "description": "Timestamp of when job last suspended"
               },
               "system": {
                 "type": "object",
                 "description": "System time values",
                 "properties": {
                   "seconds": {
                     "type": "integer",
                     "description": "Total number of CPU-seconds used by the system on behalf of the process (in kernel mode), in seconds"
                   },
                   "microseconds": {
                     "type": "integer",
                     "description": "Total number of CPU-seconds used by the system on behalf of the process (in kernel mode), in microseconds"
                   }
                 }
               },
               "total": {
                 "type": "object",
                 "description": "System time values",
                 "properties": {
                   "seconds": {
                     "type": "integer",
                     "description": "Total number of CPU-seconds used by the job, in seconds"
                   },
                   "microseconds": {
                     "type": "integer",
                     "description": "Total number of CPU-seconds used by the job, in microseconds"
                   }
                 }
               },
               "user": {
                 "type": "object",
                 "description": "User land time values",
                 "properties": {
                   "seconds": {
                     "type": "integer",
                     "description": "Total number of CPU-seconds used by the job in user land, in seconds"
                   },
                   "microseconds": {
                     "type": "integer",
                     "description": "Total number of CPU-seconds used by the job in user land, in microseconds"
                   }
                 }
               }
             }
           },
           "exit_code": {
             "$ref": "#\/components\/schemas\/dbv0.0.37_job_exit_code"
           },
           "nodes": {
             "type": "object",
             "description": "Node details",
             "properties": {
               "count": {
                 "type": "integer",
                 "description": "Total number of nodes in step"
               },
               "range": {
                 "type": "string",
                 "description": "Nodes in step"
               }
             }
           },
           "tasks": {
             "type": "object",
             "description": "Task properties",
             "properties": {
               "count": {
                 "type": "integer",
                 "description": "Number of tasks in step"
               }
             }
           },
           "pid": {
             "type": "string",
             "description": "First process PID"
           },
           "CPU": {
             "type": "object",
             "description": "CPU properties",
             "properties": {
               "requested_frequency": {
                 "type": "object",
                 "description": "CPU frequency requested",
                 "properties": {
                   "min": {
                     "type": "integer",
                     "description": "Min CPU frequency"
                   },
                   "max": {
                     "type": "integer",
                     "description": "Max CPU frequency"
                   }
                 }
               },
               "governor": {
                 "type": "array",
                 "description": "CPU governor",
                 "items": {
                   "type": "string",
                   "description": "CPU governor type"
                 }
               }
             }
           },
           "kill_request_user": {
             "type": "string",
             "description": "User who requested job killed"
           },
           "state": {
             "type": "string",
             "description": "State of job step"
           },
           "statistics": {
             "type": "object",
             "description": "Statistics of job step",
             "properties": {
               "CPU": {
                 "type": "object",
                 "description": "Statistics of CPU",
                 "properties": {
                   "actual_frequency": {
                     "type": "integer",
                     "description": "Actual frequency of CPU during step"
                   }
                 }
               },
               "energy": {
                 "type": "object",
                 "description": "Statistics of energy",
                 "properties": {
                   "consumed": {
                     "type": "integer",
                     "description": "Energy consumed during step"
                   }
                 }
               }
             }
           },
           "step": {
             "type": "object",
             "description": "Step details",
             "properties": {
               "job_id": {
                 "type": "integer",
                 "description": "Parent job id"
               },
               "het": {
                 "type": "object",
                 "description": "Heterogeneous job details",
                 "properties": {
                   "component": {
                     "type": "integer",
                     "description": "Parent HetJob component id"
                   }
                 }
               },
               "id": {
                 "type": "string",
                 "description": "Step id"
               },
               "name": {
                 "type": "string",
                 "description": "Step name"
               }
             }
           },
           "task": {
             "type": "object",
             "description": "Task properties",
             "properties": {
               "distribution": {
                 "type": "string",
                 "description": "Task distribution type"
               }
             }
           },
           "tres": {
             "type": "object",
             "description": "TRES usage",
             "properties": {
               "requested": {
                 "type": "object",
                 "description": "TRES requested for job",
                 "properties": {
                   "average": {
                     "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
                   },
                   "max": {
                     "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
                   },
                   "min": {
                     "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
                   },
                   "total": {
                     "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
                   }
                 }
               },
               "consumed": {
                 "type": "object",
                 "description": "TRES requested for job",
                 "properties": {
                   "average": {
                     "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
                   },
                   "max": {
                     "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
                   },
                   "min": {
                     "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
                   },
                   "total": {
                     "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
                   }
                 }
               },
               "allocated": {
                 "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
               }
             }
           }
         }
       },
       "dbv0.0.37_config_info": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_error"
             }
           },
           "tres": {
             "type": "array",
             "description": "Array of TRES",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_tres_list"
             }
           },
           "accounts": {
             "type": "array",
             "description": "Array of accounts",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_account"
             }
           },
           "associations": {
             "type": "array",
             "description": "Array of associations",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_association"
             }
           },
           "users": {
             "type": "array",
             "description": "Array of users",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_user"
             }
           },
           "qos": {
             "type": "array",
             "description": "Array of qos",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_qos"
             }
           },
           "wckeys": {
             "type": "array",
             "description": "Array of wckeys",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_wckey"
             }
           }
         }
       },
       "dbv0.0.37_account_response": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_error"
             }
           }
         }
       },
       "dbv0.0.37_config_response": {
         "type": "object",
         "properties": {
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.37_error"
             }
           }
         }
       },
       "dbv0.0.37_error": {
         "properties": {
           "errno": {
             "description": "Error number",
             "type": "integer"
           },
           "error": {
             "description": "Error message",
             "type": "string"
           }
         },
         "type": "object"
       },
       "dbv0.0.38_diag": {
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_error"
             }
           },
           "statistics": {
             "type": "object",
             "properties": {
               "time_start": {
                 "type": "integer",
                 "description": "Unix timestamp of start time"
               },
               "rollups": {
                 "type": "array",
                 "items": {
                   "type": "object",
                   "description": "Rollup statistics",
                   "properties": {
                     "type": {
                       "type": "string",
                       "description": "Type of rollup"
                     },
                     "last_run": {
                       "type": "integer",
                       "description": "Timestamp of last rollup"
                     },
                     "last_cycle": {
                       "type": "integer",
                       "description": "Timestamp of last cycle"
                     },
                     "max_cycle": {
                       "type": "integer",
                       "description": "Max time of all cycles"
                     },
                     "total_time": {
                       "type": "integer",
                       "description": "Total time (s) spent doing rollup"
                     },
                     "mean_cycles": {
                       "type": "integer",
                       "description": "Average time (s) of cycle"
                     }
                   }
                 }
               },
               "RPCs": {
                 "type": "array",
                 "items": {
                   "type": "object",
                   "description": "Statistics by RPC type",
                   "properties": {
                     "rpc": {
                       "type": "string",
                       "description": "RPC type"
                     },
                     "count": {
                       "type": "integer",
                       "description": "Number of RPCs"
                     },
                     "time": {
                       "type": "object",
                       "description": "Time values",
                       "properties": {
                         "average": {
                           "type": "integer",
                           "description": "Average time spent processing this RPC type"
                         },
                         "total": {
                           "type": "integer",
                           "description": "Total time spent processing this RPC type"
                         }
                       }
                     }
                   }
                 }
               },
               "users": {
                 "type": "array",
                 "items": {
                   "type": "object",
                   "description": "Statistics by user RPCs",
                   "properties": {
                     "user": {
                       "type": "string",
                       "description": "User name"
                     },
                     "count": {
                       "type": "integer",
                       "description": "Number of RPCs"
                     },
                     "time": {
                       "type": "object",
                       "description": "Time values",
                       "properties": {
                         "average": {
                           "type": "integer",
                           "description": "Average time spent processing each user RPC"
                         },
                         "total": {
                           "type": "integer",
                           "description": "Total time spent processing each user RPC"
                         }
                       }
                     }
                   }
                 }
               }
             }
           }
         }
       },
       "dbv0.0.38_account": {
         "type": "object",
         "description": "Account description",
         "properties": {
           "associations": {
             "type": "array",
             "description": "List of assigned associations",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_association_short_info"
             }
           },
           "coordinators": {
             "type": "array",
             "description": "List of assigned coordinators",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_coordinator_info"
             }
           },
           "description": {
             "type": "string",
             "description": "Description of account"
           },
           "name": {
             "type": "string",
             "description": "Name of account"
           },
           "organization": {
             "type": "string",
             "description": "Assigned organization of account"
           },
           "flags": {
             "type": "array",
             "description": "List of properties of account",
             "items": {
               "type": "string",
               "description": "String of property name"
             }
           }
         }
       },
       "dbv0.0.38_account_info": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_error"
             }
           },
           "accounts": {
             "type": "array",
             "description": "List of accounts",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_account"
             }
           }
         }
       },
       "dbv0.0.38_coordinator_info": {
         "type": "object",
         "properties": {
           "name": {
             "type": "string",
             "description": "Name of user"
           },
           "direct": {
             "type": "integer",
             "description": "If user is coordinator of this account directly or coordinator status was inheirted from a higher account in the tree"
           }
         }
       },
       "dbv0.0.38_association_short_info": {
         "type": "object",
         "properties": {
           "account": {
             "type": "string",
             "description": "Account name"
           },
           "cluster": {
             "type": "string",
             "description": "Cluster name"
           },
           "partition": {
             "type": "string",
             "description": "Partition name (optional)"
           },
           "user": {
             "type": "string",
             "description": "User name"
           }
         }
       },
       "dbv0.0.38_response_account_delete": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_error"
             }
           }
         }
       },
       "dbv0.0.38_response_wckey_add": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_error"
             }
           }
         }
       },
       "dbv0.0.38_wckey_info": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_error"
             }
           },
           "wckeys": {
             "type": "array",
             "description": "List of wckeys",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_wckey"
             }
           }
         }
       },
       "dbv0.0.38_wckey": {
         "type": "object",
         "properties": {
           "cluster": {
             "type": "string",
             "description": "Cluster name"
           },
           "id": {
             "type": "integer",
             "description": "wckey database unique id"
           },
           "name": {
             "type": "string",
             "description": "wckey name"
           },
           "user": {
             "type": "string",
             "description": "wckey user"
           },
           "flags": {
             "type": "array",
             "description": "List of properties of wckey",
             "items": {
               "type": "string",
               "description": "String of property name"
             }
           },
           "accounting": {
             "type": "array",
             "description": "List of accounting records",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_accounting"
             }
           }
         }
       },
       "dbv0.0.38_response_wckey_delete": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_error"
             }
           }
         }
       },
       "dbv0.0.38_response_cluster_add": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_error"
             }
           }
         }
       },
       "dbv0.0.38_cluster_info": {
         "type": "object",
         "properties": {
           "controller": {
             "type": "object",
             "description": "Information about controller",
             "properties": {
               "host": {
                 "type": "string",
                 "description": "Hostname"
               },
               "port": {
                 "type": "integer",
                 "description": "Port number"
               }
             }
           },
           "flags": {
             "type": "array",
             "description": "List of properties of cluster",
             "items": {
               "type": "string",
               "description": "String of property name"
             }
           },
           "name": {
             "type": "string",
             "description": "Cluster name"
           },
           "nodes": {
             "type": "string",
             "description": "Assigned nodes"
           },
           "select_plugin": {
             "type": "string",
             "description": "Configured select plugin"
           },
           "associations": {
             "type": "object",
             "description": "Information about associations",
             "properties": {
               "root": {
                 "$ref": "#\/components\/schemas\/dbv0.0.38_association_short_info"
               }
             }
           },
           "rpc_version": {
             "type": "integer",
             "description": "Number rpc version"
           },
           "tres": {
             "type": "array",
             "description": "List of TRES in cluster",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_response_tres"
             }
           }
         }
       },
       "dbv0.0.38_response_cluster_delete": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_error"
             }
           }
         }
       },
       "dbv0.0.38_response_user_update": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_error"
             }
           }
         }
       },
       "dbv0.0.38_user": {
         "type": "object",
         "description": "User description",
         "properties": {
           "administrator_level": {
             "type": "string",
             "description": "Description of administrator level"
           },
           "associations": {
             "type": "array",
             "description": "Assigned associations",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_association_short_info"
             }
           },
           "coordinators": {
             "type": "array",
             "description": "List of assigned coordinators",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_coordinator_info"
             }
           },
           "default": {
             "type": "object",
             "description": "Default settings",
             "properties": {
               "account": {
                 "type": "string",
                 "description": "Default account name"
               },
               "wckey": {
                 "type": "string",
                 "description": "Default wckey"
               }
             }
           },
           "flags": {
             "type": "array",
             "description": "List of properties of user",
             "items": {
               "type": "string",
               "description": "String of property name"
             }
           },
           "name": {
             "type": "string",
             "description": "User name"
           }
         }
       },
       "dbv0.0.38_user_info": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_error"
             }
           },
           "users": {
             "type": "array",
             "description": "Array of users",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_user"
             }
           }
         }
       },
       "dbv0.0.38_response_user_delete": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_error"
             }
           }
         }
       },
       "dbv0.0.38_association": {
         "type": "object",
         "description": "Association description",
         "properties": {
           "account": {
             "type": "string",
             "description": "Assigned account"
           },
           "cluster": {
             "type": "string",
             "description": "Assigned cluster"
           },
           "default": {
             "type": "object",
             "description": "Default settings",
             "properties": {
               "qos": {
                 "type": "string",
                 "description": "Default QOS"
               }
             }
           },
           "flags": {
             "type": "array",
             "description": "List of properties of association",
             "items": {
               "type": "string",
               "description": "String of property name"
             }
           },
           "max": {
             "type": "object",
             "description": "Max settings",
             "properties": {
               "jobs": {
                 "type": "object",
                 "description": "Max jobs settings",
                 "properties": {
                   "per": {
                     "type": "object",
                     "description": "Max jobs per settings",
                     "properties": {
                       "wall_clock": {
                         "type": "integer",
                         "description": "Max wallclock per job"
                       }
                     }
                   }
                 }
               },
               "per": {
                 "type": "object",
                 "description": "Max per settings",
                 "properties": {
                   "account": {
                     "type": "object",
                     "description": "Max per accounting settings",
                     "properties": {
                       "wall_clock": {
                         "type": "integer",
                         "description": "Max wallclock per account"
                       }
                     }
                   }
                 }
               },
               "tres": {
                 "type": "object",
                 "description": "Max TRES settings",
                 "properties": {
                   "per": {
                     "type": "object",
                     "description": "Max TRES per settings",
                     "properties": {
                       "job": {
                         "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                       },
                       "node": {
                         "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                       }
                     }
                   },
                   "total": {
                     "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                   },
                   "minutes": {
                     "type": "object",
                     "description": "Max TRES minutes settings",
                     "properties": {
                       "per": {
                         "type": "object",
                         "description": "Max TRES minutes per settings",
                         "properties": {
                           "job": {
                             "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                           }
                         }
                       },
                       "total": {
                         "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                       }
                     }
                   }
                 }
               }
             }
           },
           "min": {
             "type": "object",
             "description": "Min settings",
             "properties": {
               "priority_threshold": {
                 "type": "integer",
                 "description": "Min priority threshold"
               }
             }
           },
           "parent_account": {
             "type": "string",
             "description": "Parent account name"
           },
           "partition": {
             "type": "string",
             "description": "Assigned partition"
           },
           "priority": {
             "type": "integer",
             "description": "Assigned priority"
           },
           "shares_raw": {
             "type": "integer",
             "description": "Raw fairshare shares"
           },
           "usage": {
             "type": "object",
             "description": "Association usage",
             "properties": {
               "accrue_job_count": {
                 "type": "integer",
                 "description": "Jobs accuring priority"
               },
               "group_used_wallclock": {
                 "type": "number",
                 "description": "Group used wallclock time (s)"
               },
               "fairshare_factor": {
                 "type": "number",
                 "description": "Fairshare factor"
               },
               "fairshare_shares": {
                 "type": "integer",
                 "description": "Fairshare shares"
               },
               "normalized_priority": {
                 "type": "integer",
                 "description": "Currently active jobs"
               },
               "normalized_shares": {
                 "type": "number",
                 "description": "Normalized shares"
               },
               "effective_normalized_usage": {
                 "type": "number",
                 "description": "Effective normalized usage"
               },
               "raw_usage": {
                 "type": "integer",
                 "description": "Raw usage"
               },
               "job_count": {
                 "type": "integer",
                 "description": "Total jobs submitted"
               },
               "fairshare_level": {
                 "type": "number",
                 "description": "Fairshare level"
               }
             }
           },
           "user": {
             "type": "string",
             "description": "Assigned user"
           },
           "QOS": {
             "type": "array",
             "description": "Assigned QOS",
             "items": {
               "type": "string",
               "description": "Assigned single QOS name"
             }
           }
         }
       },
       "dbv0.0.38_associations_info": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_error"
             }
           },
           "associations": {
             "type": "array",
             "description": "Array of associations",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_association"
             }
           }
         }
       },
       "dbv0.0.38_qos": {
         "type": "object",
         "description": "QOS description",
         "properties": {
           "description": {
             "type": "string",
             "description": "QOS description"
           },
           "flags": {
             "type": "array",
             "description": "List of properties of QOS",
             "items": {
               "type": "string",
               "description": "String of property name"
             }
           },
           "id": {
             "type": "string",
             "description": "Database id"
           },
           "limits": {
             "type": "object",
             "description": "Assigned limits",
             "properties": {
               "factor": {
                 "type": "number",
                 "description": "factor to apply to TRES count for associations using this QOS"
               },
               "max": {
                 "type": "object",
                 "description": "Limits on max settings",
                 "properties": {
                   "wall_clock": {
                     "type": "object",
                     "description": "Limit on wallclock settings",
                     "properties": {
                       "per": {
                         "type": "object",
                         "description": "Limit on wallclock per settings",
                         "properties": {
                           "qos": {
                             "type": "integer",
                             "description": "Max wallclock per QOS"
                           },
                           "job": {
                             "type": "integer",
                             "description": "Max wallclock per job"
                           }
                         }
                       }
                     }
                   },
                   "jobs": {
                     "type": "object",
                     "description": "Limits on jobs settings",
                     "properties": {
                       "active_jobs": {
                         "type": "object",
                         "description": "Limits on active jobs settings",
                         "properties": {
                           "per": {
                             "type": "object",
                             "description": "Limits on active jobs per settings",
                             "properties": {
                               "account": {
                                 "type": "integer",
                                 "description": "Max jobs per account"
                               },
                               "user": {
                                 "type": "integer",
                                 "description": "Max jobs per user"
                               }
                             }
                           }
                         }
                       }
                     }
                   },
                   "accruing": {
                     "type": "object",
                     "description": "Limits on accruing priority",
                     "properties": {
                       "per": {
                         "type": "object",
                         "description": "Max accuring priority per setting",
                         "properties": {
                           "account": {
                             "type": "integer",
                             "description": "Max accuring priority per account"
                           },
                           "user": {
                             "type": "integer",
                             "description": "Max accuring priority per user"
                           }
                         }
                       }
                     }
                   },
                   "tres": {
                     "type": "object",
                     "description": "Limits on TRES",
                     "properties": {
                       "minutes": {
                         "type": "object",
                         "description": "Max TRES minutes settings",
                         "properties": {
                           "per": {
                             "type": "object",
                             "description": "Max TRES minutes per settings",
                             "properties": {
                               "job": {
                                 "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                               },
                               "account": {
                                 "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                               },
                               "user": {
                                 "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                               },
                               "qos": {
                                 "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                               }
                             }
                           }
                         }
                       },
                       "per": {
                         "type": "object",
                         "description": "Max TRES per settings",
                         "properties": {
                           "account": {
                             "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                           },
                           "job": {
                             "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                           },
                           "node": {
                             "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                           },
                           "user": {
                             "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                           }
                         }
                       }
                     }
                   }
                 }
               },
               "min": {
                 "type": "object",
                 "description": "Min limit settings",
                 "properties": {
                   "priority_threshold": {
                     "type": "integer",
                     "description": "Min priority threshold"
                   },
                   "tres": {
                     "type": "object",
                     "description": "Min tres settings",
                     "properties": {
                       "per": {
                         "type": "object",
                         "description": "Min tres per settings",
                         "properties": {
                           "job": {
                             "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                           }
                         }
                       }
                     }
                   }
                 }
               }
             }
           },
           "preempt": {
             "type": "object",
             "description": "Preemption settings",
             "properties": {
               "list": {
                 "type": "array",
                 "description": "List of preemptable QOS",
                 "items": {
                   "type": "string",
                   "description": "Preemptable QOS"
                 }
               },
               "mode": {
                 "type": "array",
                 "description": "List of preemption modes",
                 "items": {
                   "type": "string",
                   "description": "Preemption mode"
                 }
               },
               "exempt_time": {
                 "type": "integer",
                 "description": "Grace period (s) before jobs can preempted"
               }
             }
           },
           "priority": {
             "type": "integer",
             "description": "QOS priority"
           },
           "usage_factor": {
             "type": "number",
             "description": "Usage factor"
           },
           "usage_threshold": {
             "type": "number",
             "description": "Usage threshold"
           },
           "name": {
             "description": "Assigned name of QOS",
             "type": "string"
           }
         }
       },
       "dbv0.0.38_qos_info": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_error"
             }
           },
           "qos": {
             "type": "array",
             "description": "Array of QOS",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_qos"
             }
           }
         }
       },
       "dbv0.0.38_response_qos": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_error"
             }
           }
         }
       },
       "dbv0.0.38_response_qos_delete": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_error"
             }
           }
         }
       },
       "dbv0.0.38_response_associations": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_error"
             }
           }
         }
       },
       "dbv0.0.38_response_tres": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_error"
             }
           }
         }
       },
       "dbv0.0.38_tres_info": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_error"
             }
           },
           "tres": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
           }
         }
       },
       "dbv0.0.38_tres_list": {
         "type": "array",
         "description": "TRES list of attributes",
         "items": {
           "type": "object",
           "properties": {
             "type": {
               "type": "string",
               "description": "TRES type"
             },
             "name": {
               "type": "string",
               "description": "TRES name (optional)"
             },
             "id": {
               "type": "integer",
               "description": "database id"
             },
             "count": {
               "type": "integer",
               "description": "count of TRES"
             }
           }
         }
       },
       "dbv0.0.38_job_info": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_error"
             }
           },
           "jobs": {
             "type": "array",
             "description": "Array of jobs",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_job"
             }
           }
         }
       },
       "dbv0.0.38_job": {
         "type": "object",
         "description": "Single job description",
         "properties": {
           "account": {
             "type": "string",
             "description": "Account charged by job"
           },
           "comment": {
             "type": "object",
             "description": "Job comments by type",
             "properties": {
               "administrator": {
                 "type": "string",
                 "description": "Administrator set comment"
               },
               "job": {
                 "type": "string",
                 "description": "Job comment"
               },
               "system": {
                 "type": "string",
                 "description": "System set comment"
               }
             }
           },
           "allocation_nodes": {
             "type": "string",
             "description": "Nodes allocated to job"
           },
           "array": {
             "type": "object",
             "description": "Array properties (optional)",
             "properties": {
               "job_id": {
                 "type": "integer",
                 "description": "Job id of array"
               },
               "limits": {
                 "type": "object",
                 "description": "Limits on array settings",
                 "properties": {
                   "max": {
                     "type": "object",
                     "description": "Limits on array settings",
                     "properties": {
                       "running": {
                         "type": "object",
                         "description": "Limits on array settings",
                         "properties": {
                           "tasks": {
                             "type": "integer",
                             "description": "Max running tasks in array at any one time"
                           }
                         }
                       }
                     }
                   }
                 }
               },
               "task": {
                 "type": "string",
                 "description": "Array task"
               },
               "task_id": {
                 "type": "integer",
                 "description": "Array task id"
               }
             }
           },
           "time": {
             "type": "object",
             "description": "Time properties",
             "properties": {
               "elapsed": {
                 "type": "integer",
                 "description": "Total time elapsed"
               },
               "eligible": {
                 "type": "integer",
                 "description": "Total time eligible to run"
               },
               "end": {
                 "type": "integer",
                 "description": "Timestamp of when job ended"
               },
               "start": {
                 "type": "integer",
                 "description": "Timestamp of when job started"
               },
               "submission": {
                 "type": "integer",
                 "description": "Timestamp of when job submitted"
               },
               "suspended": {
                 "type": "integer",
                 "description": "Timestamp of when job last suspended"
               },
               "system": {
                 "type": "object",
                 "description": "System time values",
                 "properties": {
                   "seconds": {
                     "type": "integer",
                     "description": "Total number of CPU-seconds used by the system on behalf of the process (in kernel mode), in seconds"
                   },
                   "microseconds": {
                     "type": "integer",
                     "description": "Total number of CPU-seconds used by the system on behalf of the process (in kernel mode), in microseconds"
                   }
                 }
               },
               "total": {
                 "type": "object",
                 "description": "System time values",
                 "properties": {
                   "seconds": {
                     "type": "integer",
                     "description": "Total number of CPU-seconds used by the job, in seconds"
                   },
                   "microseconds": {
                     "type": "integer",
                     "description": "Total number of CPU-seconds used by the job, in microseconds"
                   }
                 }
               },
               "user": {
                 "type": "object",
                 "description": "User land time values",
                 "properties": {
                   "seconds": {
                     "type": "integer",
                     "description": "Total number of CPU-seconds used by the job in user land, in seconds"
                   },
                   "microseconds": {
                     "type": "integer",
                     "description": "Total number of CPU-seconds used by the job in user land, in microseconds"
                   }
                 }
               },
               "limit": {
                 "type": "integer",
                 "description": "Job wall clock time limit"
               }
             }
           },
           "association": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_association_short_info"
           },
           "cluster": {
             "type": "string",
             "description": "Assigned cluster"
           },
           "constraints": {
             "type": "string",
             "description": "Constraints on job"
           },
           "derived_exit_code": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_job_exit_code"
           },
           "exit_code": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_job_exit_code"
           },
           "flags": {
             "type": "array",
             "description": "List of properties of job",
             "items": {
               "type": "string",
               "description": "String of property name"
             }
           },
           "group": {
             "type": "string",
             "description": "User's group to run job"
           },
           "het": {
             "type": "object",
             "description": "Heterogeneous Job details (optional)",
             "properties": {
               "job_id": {
                 "type": "integer",
                 "description": "Parent HetJob id"
               },
               "job_offset": {
                 "type": "integer",
                 "description": "Offset of this job to parent"
               }
             }
           },
           "job_id": {
             "type": "integer",
             "description": "Job id"
           },
           "name": {
             "type": "string",
             "description": "Assigned job name"
           },
           "mcs": {
             "type": "object",
             "description": "Multi-Category Security",
             "properties": {
               "label": {
                 "type": "string",
                 "description": "Assigned MCS label"
               }
             }
           },
           "nodes": {
             "type": "string",
             "description": "List of nodes allocated for job"
           },
           "partition": {
             "type": "string",
             "description": "Assigned job's partition"
           },
           "priority": {
             "type": "integer",
             "description": "Priority"
           },
           "qos": {
             "type": "string",
             "description": "Assigned qos name"
           },
           "required": {
             "type": "object",
             "description": "Job run requirements",
             "properties": {
               "CPUs": {
                 "type": "integer",
                 "description": "Required number of CPUs"
               },
               "memory": {
                 "type": "integer",
                 "description": "Required amount of memory (MiB)"
               }
             }
           },
           "kill_request_user": {
             "type": "string",
             "description": "User who requested job killed"
           },
           "reservation": {
             "type": "object",
             "description": "Reservation usage details",
             "properties": {
               "id": {
                 "type": "integer",
                 "description": "Database id of reservation"
               },
               "name": {
                 "type": "integer",
                 "description": "Name of reservation"
               }
             }
           },
           "state": {
             "type": "object",
             "description": "State properties of job",
             "properties": {
               "current": {
                 "type": "string",
                 "description": "Current state of job"
               },
               "reason": {
                 "type": "string",
                 "description": "Last reason job didn't run"
               }
             }
           },
           "steps": {
             "type": "array",
             "description": "Job step description",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_job_step"
             }
           },
           "tres": {
             "type": "object",
             "description": "TRES settings",
             "properties": {
               "allocated": {
                 "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
               },
               "requested": {
                 "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
               }
             }
           },
           "user": {
             "type": "string",
             "description": "Job user"
           },
           "wckey": {
             "type": "object",
             "description": "Job assigned wckey details",
             "properties": {
               "wckey": {
                 "type": "string",
                 "description": "Job assigned wckey"
               },
               "flags": {
                 "type": "array",
                 "description": "wckey flags",
                 "items": {
                   "type": "string",
                   "description": "Flag string"
                 }
               }
             }
           },
           "working_directory": {
             "type": "string",
             "description": "Directory where job was initially started"
           },
           "container": {
             "type": "string",
             "description": "absolute path to OCI container bundle"
           }
         }
       },
       "dbv0.0.38_job_exit_code": {
         "type": "object",
         "properties": {
           "status": {
             "type": "string",
             "description": "Job exit status"
           },
           "return_code": {
             "type": "integer",
             "description": "Return code from parent process"
           },
           "signal": {
             "type": "object",
             "description": "Signal details (if signaled)",
             "properties": {
               "signal_id": {
                 "type": "integer",
                 "description": "Signal number process received"
               },
               "name": {
                 "type": "string",
                 "description": "Name of signal received"
               }
             }
           }
         }
       },
       "dbv0.0.38_job_step": {
         "type": "object",
         "properties": {
           "time": {
             "type": "object",
             "description": "Time properties",
             "properties": {
               "elapsed": {
                 "type": "integer",
                 "description": "Total time elapsed"
               },
               "end": {
                 "type": "integer",
                 "description": "Timestamp of when job ended"
               },
               "start": {
                 "type": "integer",
                 "description": "Timestamp of when job started"
               },
               "suspended": {
                 "type": "integer",
                 "description": "Timestamp of when job last suspended"
               },
               "system": {
                 "type": "object",
                 "description": "System time values",
                 "properties": {
                   "seconds": {
                     "type": "integer",
                     "description": "Total number of CPU-seconds used by the system on behalf of the process (in kernel mode), in seconds"
                   },
                   "microseconds": {
                     "type": "integer",
                     "description": "Total number of CPU-seconds used by the system on behalf of the process (in kernel mode), in microseconds"
                   }
                 }
               },
               "total": {
                 "type": "object",
                 "description": "System time values",
                 "properties": {
                   "seconds": {
                     "type": "integer",
                     "description": "Total number of CPU-seconds used by the job, in seconds"
                   },
                   "microseconds": {
                     "type": "integer",
                     "description": "Total number of CPU-seconds used by the job, in microseconds"
                   }
                 }
               },
               "user": {
                 "type": "object",
                 "description": "User land time values",
                 "properties": {
                   "seconds": {
                     "type": "integer",
                     "description": "Total number of CPU-seconds used by the job in user land, in seconds"
                   },
                   "microseconds": {
                     "type": "integer",
                     "description": "Total number of CPU-seconds used by the job in user land, in microseconds"
                   }
                 }
               }
             }
           },
           "exit_code": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_job_exit_code"
           },
           "nodes": {
             "type": "object",
             "description": "Node details",
             "properties": {
               "count": {
                 "type": "integer",
                 "description": "Total number of nodes in step"
               },
               "range": {
                 "type": "string",
                 "description": "Nodes in step"
               }
             }
           },
           "tasks": {
             "type": "object",
             "description": "Task properties",
             "properties": {
               "count": {
                 "type": "integer",
                 "description": "Number of tasks in step"
               }
             }
           },
           "pid": {
             "type": "string",
             "description": "First process PID"
           },
           "CPU": {
             "type": "object",
             "description": "CPU properties",
             "properties": {
               "requested_frequency": {
                 "type": "object",
                 "description": "CPU frequency requested",
                 "properties": {
                   "min": {
                     "type": "integer",
                     "description": "Min CPU frequency"
                   },
                   "max": {
                     "type": "integer",
                     "description": "Max CPU frequency"
                   }
                 }
               },
               "governor": {
                 "type": "array",
                 "description": "CPU governor",
                 "items": {
                   "type": "string",
                   "description": "CPU governor type"
                 }
               }
             }
           },
           "kill_request_user": {
             "type": "string",
             "description": "User who requested job killed"
           },
           "state": {
             "type": "string",
             "description": "State of job step"
           },
           "statistics": {
             "type": "object",
             "description": "Statistics of job step",
             "properties": {
               "CPU": {
                 "type": "object",
                 "description": "Statistics of CPU",
                 "properties": {
                   "actual_frequency": {
                     "type": "integer",
                     "description": "Actual frequency of CPU during step"
                   }
                 }
               },
               "energy": {
                 "type": "object",
                 "description": "Statistics of energy",
                 "properties": {
                   "consumed": {
                     "type": "integer",
                     "description": "Energy consumed during step"
                   }
                 }
               }
             }
           },
           "step": {
             "type": "object",
             "description": "Step details",
             "properties": {
               "job_id": {
                 "type": "integer",
                 "description": "Parent job id"
               },
               "het": {
                 "type": "object",
                 "description": "Heterogeneous job details",
                 "properties": {
                   "component": {
                     "type": "integer",
                     "description": "Parent HetJob component id"
                   }
                 }
               },
               "id": {
                 "type": "string",
                 "description": "Step id"
               },
               "name": {
                 "type": "string",
                 "description": "Step name"
               }
             }
           },
           "task": {
             "description": "Task distribution properties",
             "type": "string"
           },
           "tres": {
             "type": "object",
             "description": "TRES usage",
             "properties": {
               "requested": {
                 "type": "object",
                 "description": "TRES requested for job",
                 "properties": {
                   "average": {
                     "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                   },
                   "max": {
                     "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                   },
                   "min": {
                     "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                   },
                   "total": {
                     "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                   }
                 }
               },
               "consumed": {
                 "type": "object",
                 "description": "TRES requested for job",
                 "properties": {
                   "average": {
                     "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                   },
                   "max": {
                     "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                   },
                   "min": {
                     "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                   },
                   "total": {
                     "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
                   }
                 }
               },
               "allocated": {
                 "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
               }
             }
           }
         }
       },
       "dbv0.0.38_config_info": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_error"
             }
           },
           "tres": {
             "type": "array",
             "description": "Array of TRES",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
             }
           },
           "accounts": {
             "type": "array",
             "description": "Array of accounts",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_account"
             }
           },
           "associations": {
             "type": "array",
             "description": "Array of associations",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_association"
             }
           },
           "users": {
             "type": "array",
             "description": "Array of users",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_user"
             }
           },
           "qos": {
             "type": "array",
             "description": "Array of qos",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_qos"
             }
           },
           "wckeys": {
             "type": "array",
             "description": "Array of wckeys",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_wckey"
             }
           }
         }
       },
       "dbv0.0.38_account_response": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_error"
             }
           }
         }
       },
       "dbv0.0.38_config_response": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_error"
             }
           }
         }
       },
       "dbv0.0.38_errors": {
         "type": "array",
         "description": "Slurm errors",
         "items": {
           "$ref": "#\/components\/schemas\/dbv0.0.38_error"
         }
       },
       "dbv0.0.38_error": {
         "properties": {
           "error_number": {
             "description": "Slurm internal error number",
             "type": "integer"
           },
           "error": {
             "description": "Error message",
             "type": "string"
           },
           "source": {
             "description": "Where error occurred in the source",
             "type": "string"
           },
           "description": {
             "description": "Explaination of cause of error",
             "type": "string"
           }
         },
         "type": "object"
       },
       "dbv0.0.38_meta": {
         "type": "object",
         "properties": {
           "plugin": {
             "type": "object",
             "properties": {
               "type": {
                 "type": "string",
                 "description": ""
               },
               "name": {
                 "type": "string",
                 "description": ""
               }
             }
           },
           "Slurm": {
             "type": "object",
             "description": "Slurm information",
             "properties": {
               "version": {
                 "type": "object",
                 "properties": {
                   "major": {
                     "type": "string",
                     "description": ""
                   },
                   "micro": {
                     "type": "string",
                     "description": ""
                   },
                   "minor": {
                     "type": "string",
                     "description": ""
                   }
                 }
               },
               "release": {
                 "type": "string",
                 "description": "version specifier"
               }
             }
           }
         }
       },
       "dbv0.0.38_update_users": {
         "properties": {
           "users": {
             "type": "array",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_user"
             }
           }
         },
         "type": "object"
       },
       "dbv0.0.38_update_qos": {
         "properties": {
           "qos": {
             "type": "array",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_qos"
             }
           }
         },
         "type": "object"
       },
       "dbv0.0.38_update_account": {
         "properties": {
           "accounts": {
             "type": "array",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_account"
             }
           }
         },
         "type": "object"
       },
       "dbv0.0.38_clusters_properties": {
         "type": "object",
         "properties": {
           "clusters": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_cluster_info"
           }
         }
       },
       "dbv0.0.38_response_associations_delete": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_meta"
           },
           "errors": {
             "type": "array",
             "description": "Slurm errors",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_error"
             }
           },
           "removed_associations": {
             "type": "array",
             "description": "the associations",
             "items": {
               "type": "string"
             }
           }
         }
       },
       "dbv0.0.38_tres_update": {
         "type": "object",
         "properties": {
           "tres": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
           }
         }
       },
       "dbv0.0.38_set_config": {
         "type": "object",
         "properties": {
           "clusters": {
             "type": "array",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_clusters_properties"
             }
           },
           "TRES": {
             "type": "array",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
             }
           },
           "accounts": {
             "type": "array",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_update_account"
             }
           },
           "users": {
             "type": "array",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_user"
             }
           },
           "qos": {
             "type": "array",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_qos"
             }
           },
           "wckeys": {
             "type": "array",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_wckey"
             }
           },
           "associations": {
             "type": "array",
             "items": {
               "$ref": "#\/components\/schemas\/dbv0.0.38_association"
             }
           }
         }
       },
       "dbv0.0.38_accounting": {
         "type": "object",
         "properties": {
           "allocated": {
             "type": "integer",
             "description": "total seconds allocated"
           },
           "id": {
             "type": "integer",
             "description": "association\/wckey ID"
           },
           "start": {
             "type": "integer",
             "description": "UNIX timestamp when accounting period started"
           },
           "TRES": {
             "$ref": "#\/components\/schemas\/dbv0.0.38_tres_list"
           }
         }
       },
       "dbv0.0.39_diag": {
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
           },
           "statistics": {
             "$ref": "#\/components\/schemas\/v0.0.39_stats_rec_ptr"
           }
         }
       },
       "dbv0.0.39_account_info": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
           },
           "accounts": {
             "$ref": "#\/components\/schemas\/v0.0.39_account_list"
           }
         }
       },
       "dbv0.0.39_wckey_info": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
           },
           "wckeys": {
             "$ref": "#\/components\/schemas\/v0.0.39_wckey_list"
           }
         }
       },
       "dbv0.0.39_user_info": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
           },
           "users": {
             "$ref": "#\/components\/schemas\/v0.0.39_user_list"
           }
         }
       },
       "dbv0.0.39_associations_info": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
           },
           "associations": {
             "$ref": "#\/components\/schemas\/v0.0.39_assoc_list"
           }
         }
       },
       "dbv0.0.39_qos_info": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
           },
           "qos": {
             "$ref": "#\/components\/schemas\/v0.0.39_qos_list"
           }
         }
       },
       "dbv0.0.39_tres_info": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
           },
           "tres": {
             "$ref": "#\/components\/schemas\/v0.0.39_tres_list"
           }
         }
       },
       "dbv0.0.39_job_info": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
           },
           "jobs": {
             "$ref": "#\/components\/schemas\/v0.0.39_job_list"
           }
         }
       },
       "dbv0.0.39_clusters_info": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
           },
           "clusters": {
             "$ref": "#\/components\/schemas\/v0.0.39_cluster_rec_list"
           }
         }
       },
       "dbv0.0.39_config_info": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
           },
           "tres": {
             "$ref": "#\/components\/schemas\/v0.0.39_tres_list"
           },
           "accounts": {
             "$ref": "#\/components\/schemas\/v0.0.39_account_list"
           },
           "associations": {
             "$ref": "#\/components\/schemas\/v0.0.39_assoc_list"
           },
           "users": {
             "$ref": "#\/components\/schemas\/v0.0.39_user_list"
           },
           "qos": {
             "$ref": "#\/components\/schemas\/v0.0.39_qos_list"
           },
           "wckeys": {
             "$ref": "#\/components\/schemas\/v0.0.39_wckey_list"
           },
           "clusters": {
             "$ref": "#\/components\/schemas\/v0.0.39_cluster_rec_list"
           }
         }
       },
       "dbv0.0.39_warnings": {
         "type": "array",
         "description": "Slurm warnings",
         "items": {
           "$ref": "#\/components\/schemas\/dbv0.0.39_warning"
         }
       },
       "dbv0.0.39_warning": {
         "properties": {
           "warning": {
             "description": "Earning message",
             "type": "string"
           },
           "source": {
             "description": "Where error occurred in the source",
             "type": "string"
           },
           "description": {
             "description": "Explaination of cause of error",
             "type": "string"
           }
         },
         "type": "object"
       },
       "dbv0.0.39_errors": {
         "type": "array",
         "description": "Slurm errors",
         "items": {
           "$ref": "#\/components\/schemas\/dbv0.0.39_error"
         }
       },
       "dbv0.0.39_error": {
         "properties": {
           "error_number": {
             "description": "Slurm internal error number",
             "type": "integer"
           },
           "error": {
             "description": "Error message",
             "type": "string"
           },
           "source": {
             "description": "Where error occurred in the source",
             "type": "string"
           },
           "description": {
             "description": "Explaination of cause of error",
             "type": "string"
           }
         },
         "type": "object"
       },
       "dbv0.0.39_meta": {
         "type": "object",
         "properties": {
           "plugin": {
             "type": "object",
             "properties": {
               "type": {
                 "type": "string",
                 "description": ""
               },
               "name": {
                 "type": "string",
                 "description": ""
               }
             }
           },
           "Slurm": {
             "type": "object",
             "description": "Slurm information",
             "properties": {
               "version": {
                 "type": "object",
                 "properties": {
                   "major": {
                     "type": "integer",
                     "description": ""
                   },
                   "micro": {
                     "type": "integer",
                     "description": ""
                   },
                   "minor": {
                     "type": "integer",
                     "description": ""
                   }
                 }
               },
               "release": {
                 "type": "string",
                 "description": "version specifier"
               }
             }
           }
         }
       },
       "dbv0.0.39_update_users": {
         "properties": {
           "users": {
             "$ref": "#\/components\/schemas\/v0.0.39_user_list"
           }
         },
         "type": "object"
       },
       "dbv0.0.39_update_qos": {
         "properties": {
           "qos": {
             "$ref": "#\/components\/schemas\/v0.0.39_qos_list"
           }
         },
         "type": "object"
       },
       "dbv0.0.39_response_associations_delete": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_meta"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/dbv0.0.39_warnings"
           },
           "removed_associations": {
             "type": "array",
             "description": "the associations",
             "items": {
               "type": "string"
             }
           }
         }
       },
       "dbv0.0.39_tres_update": {
         "type": "object",
         "properties": {
           "tres": {
             "$ref": "#\/components\/schemas\/v0.0.39_tres_list"
           }
         }
       },
       "dbv0.0.39_set_config": {
         "type": "object",
         "properties": {
           "clusters": {
             "$ref": "#\/components\/schemas\/v0.0.39_cluster_rec_list"
           },
           "TRES": {
             "type": "array",
             "items": {
               "$ref": "#\/components\/schemas\/v0.0.39_tres_list"
             }
           },
           "accounts": {
             "$ref": "#\/components\/schemas\/v0.0.39_account_list"
           },
           "users": {
             "$ref": "#\/components\/schemas\/v0.0.39_user_list"
           },
           "qos": {
             "$ref": "#\/components\/schemas\/v0.0.39_qos_list"
           },
           "wckeys": {
             "$ref": "#\/components\/schemas\/v0.0.39_wckey_list"
           },
           "associations": {
             "$ref": "#\/components\/schemas\/v0.0.39_assoc_list"
           }
         }
       },
       "v0.0.39_stats_rec_ptr": {
         "$ref": "#\/components\/schemas\/v0.0.39_stats_rec"
       },
       "v0.0.39_stats_rec": {
         "type": "object",
         "properties": {
           "time_start": {
             "type": "integer",
             "format": "int64"
           },
           "rollups": {
             "$ref": "#\/components\/schemas\/v0.0.39_rollup_stats_ptr"
           },
           "RPCs": {
             "$ref": "#\/components\/schemas\/v0.0.39_stats_rpc_list"
           },
           "users": {
             "$ref": "#\/components\/schemas\/v0.0.39_stats_user_list"
           }
         },
         "required": [
         ]
       },
       "v0.0.39_rollup_stats_ptr": {
         "$ref": "#\/components\/schemas\/v0.0.39_rollup_stats"
       },
       "v0.0.39_rollup_stats": {
         "type": "array",
         "description": "list of recorded rollup statistics",
         "items": {
           "type": "object",
           "description": "recorded rollup statistics",
           "properties": {
             "type": {
               "type": "string",
               "description": "type",
               "enum": [
                 "internal",
                 "user",
                 "unknown"
               ]
             },
             "last run": {
               "type": "integer",
               "format": "int32",
               "description": "Last time rollup ran (UNIX timestamp)"
             },
             "max_cycle": {
               "type": "integer",
               "format": "int64",
               "description": "longest rollup time (seconds)"
             },
             "total_time": {
               "type": "integer",
               "format": "int64",
               "description": "total time spent doing rollups (seconds)"
             },
             "total_cycles": {
               "type": "integer",
               "format": "int64",
               "description": "number of rollups since last_run"
             },
             "mean_cycles": {
               "type": "integer",
               "format": "int64",
               "description": "average time for rollup (seconds)"
             }
           }
         }
       },
       "v0.0.39_stats_rpc_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_stats_rpc"
         }
       },
       "v0.0.39_stats_rpc": {
         "type": "object",
         "properties": {
           "rpc": {
             "type": "string"
           },
           "count": {
             "type": "integer",
             "format": "int32"
           },
           "time": {
             "type": "object",
             "properties": {
               "total": {
                 "type": "integer",
                 "format": "int64"
               }
             }
           }
         },
         "required": [
         ]
       },
       "v0.0.39_stats_user_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_stats_user"
         }
       },
       "v0.0.39_stats_user": {
         "type": "object",
         "properties": {
           "user": {
             "type": "string"
           },
           "count": {
             "type": "integer",
             "format": "int32"
           },
           "time": {
             "type": "object",
             "properties": {
               "total": {
                 "type": "integer",
                 "format": "int64"
               }
             }
           }
         },
         "required": [
         ]
       },
       "v0.0.39_account_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_account"
         }
       },
       "v0.0.39_account": {
         "type": "object",
         "properties": {
           "associations": {
             "$ref": "#\/components\/schemas\/v0.0.39_assoc_short_list"
           },
           "coordinators": {
             "$ref": "#\/components\/schemas\/v0.0.39_coord_list"
           },
           "description": {
             "type": "string"
           },
           "name": {
             "type": "string"
           },
           "organization": {
             "type": "string"
           },
           "flags": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "DELETED"
               ]
             }
           }
         },
         "required": [
           "description",
           "name",
           "organization"
         ]
       },
       "v0.0.39_assoc_short_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_assoc_short"
         }
       },
       "v0.0.39_assoc_short": {
         "type": "object",
         "properties": {
           "account": {
             "type": "string"
           },
           "cluster": {
             "type": "string"
           },
           "partition": {
             "type": "string"
           },
           "user": {
             "type": "string"
           }
         },
         "required": [
           "user"
         ]
       },
       "v0.0.39_coord_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_coord"
         }
       },
       "v0.0.39_coord": {
         "type": "object",
         "properties": {
           "name": {
             "type": "string"
           },
           "direct": {
             "type": "boolean"
           }
         },
         "required": [
           "name"
         ]
       },
       "v0.0.39_wckey_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_wckey"
         }
       },
       "v0.0.39_wckey": {
         "type": "object",
         "properties": {
           "accounting": {
             "$ref": "#\/components\/schemas\/v0.0.39_accounting_list"
           },
           "cluster": {
             "type": "string"
           },
           "id": {
             "type": "integer",
             "format": "int32"
           },
           "name": {
             "type": "string"
           },
           "user": {
             "type": "string"
           },
           "flags": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "DELETED"
               ]
             }
           }
         },
         "required": [
           "cluster",
           "name",
           "user"
         ]
       },
       "v0.0.39_accounting_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_accounting"
         }
       },
       "v0.0.39_accounting": {
         "type": "object",
         "properties": {
           "allocated": {
             "type": "object",
             "properties": {
               "seconds": {
                 "type": "integer",
                 "format": "int64"
               }
             }
           },
           "id": {
             "type": "integer",
             "format": "int32"
           },
           "start": {
             "type": "integer",
             "format": "int64"
           },
           "TRES": {
             "$ref": "#\/components\/schemas\/v0.0.39_tres"
           }
         },
         "required": [
         ]
       },
       "v0.0.39_tres": {
         "type": "object",
         "properties": {
           "type": {
             "type": "string"
           },
           "name": {
             "type": "string"
           },
           "id": {
             "type": "integer",
             "format": "int32"
           },
           "count": {
             "type": "integer",
             "format": "int64"
           }
         },
         "required": [
           "type"
         ]
       },
       "v0.0.39_user_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_user"
         }
       },
       "v0.0.39_user": {
         "type": "object",
         "properties": {
           "administrator_level": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "Not Set",
                 "None",
                 "Operator",
                 "Administrator"
               ]
             }
           },
           "associations": {
             "$ref": "#\/components\/schemas\/v0.0.39_assoc_short_list"
           },
           "coordinators": {
             "$ref": "#\/components\/schemas\/v0.0.39_coord_list"
           },
           "default": {
             "type": "object",
             "properties": {
               "wckey": {
                 "type": "string"
               }
             }
           },
           "flags": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "NONE",
                 "DELETED"
               ]
             }
           },
           "name": {
             "type": "string"
           },
           "old_name": {
             "type": "string"
           },
           "wckeys": {
             "$ref": "#\/components\/schemas\/v0.0.39_wckey_list"
           }
         },
         "required": [
           "name"
         ]
       },
       "v0.0.39_assoc_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_assoc"
         }
       },
       "v0.0.39_assoc": {
         "type": "object",
         "properties": {
           "account": {
             "type": "string"
           },
           "cluster": {
             "type": "string"
           },
           "default": {
             "type": "object",
             "properties": {
               "qos": {
                 "type": "string"
               }
             }
           },
           "flags": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "DELETED"
               ]
             }
           },
           "max": {
             "type": "object",
             "properties": {
               "jobs": {
                 "type": "object",
                 "properties": {
                   "per": {
                     "type": "object",
                     "properties": {
                       "wall_clock": {
                         "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
                       }
                     }
                   }
                 }
               }
             }
           },
           "is_default": {
             "type": "boolean"
           },
           "min": {
             "type": "object",
             "properties": {
               "priority_threshold": {
                 "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
               }
             }
           },
           "parent_account": {
             "type": "string"
           },
           "partition": {
             "type": "string"
           },
           "priority": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "qos": {
             "$ref": "#\/components\/schemas\/v0.0.39_qos_string_id_list"
           },
           "shares_raw": {
             "type": "integer",
             "format": "int32"
           },
           "usage": {
             "$ref": "#\/components\/schemas\/v0.0.39_assoc_usage_ptr"
           },
           "user": {
             "type": "string"
           }
         },
         "required": [
           "user"
         ]
       },
       "v0.0.39_tres_str": {
         "$ref": "#\/components\/schemas\/v0.0.39_tres_list"
       },
       "v0.0.39_tres_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_tres"
         }
       },
       "v0.0.39_qos_string_id_list": {
         "type": "array",
         "description": "List of QOS names",
         "items": {
           "type": "string"
         }
       },
       "v0.0.39_assoc_usage_ptr": {
         "$ref": "#\/components\/schemas\/v0.0.39_assoc_usage"
       },
       "v0.0.39_assoc_usage": {
         "type": "object",
         "properties": {
           "accrue_job_count": {
             "type": "integer",
             "format": "int32"
           },
           "group_used_wallclock": {
             "type": "number",
             "format": "double"
           },
           "fairshare_factor": {
             "type": "number",
             "format": "double"
           },
           "fairshare_shares": {
             "type": "integer",
             "format": "int32"
           },
           "normalized_priority": {
             "type": "number",
             "format": "double"
           },
           "normalized_shares": {
             "type": "number",
             "format": "double"
           },
           "effective_normalized_usage": {
             "type": "number"
           },
           "normalized_usage": {
             "type": "number"
           },
           "raw_usage": {
             "type": "number"
           },
           "active_jobs": {
             "type": "integer",
             "format": "int32"
           },
           "job_count": {
             "type": "integer",
             "format": "int32"
           },
           "fairshare_level": {
             "type": "number"
           }
         },
         "required": [
         ]
       },
       "v0.0.39_qos_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_qos"
         }
       },
       "v0.0.39_qos": {
         "type": "object",
         "properties": {
           "description": {
             "type": "string"
           },
           "flags": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "NOT_SET",
                 "ADD",
                 "REMOVE",
                 "PARTITION_MINIMUM_NODE",
                 "PARTITION_MAXIMUM_NODE",
                 "PARTITION_TIME_LIMIT",
                 "ENFORCE_USAGE_THRESHOLD",
                 "NO_RESERVE",
                 "REQUIRED_RESERVATION",
                 "DENY_LIMIT",
                 "OVERRIDE_PARTITION_QOS",
                 "NO_DECAY",
                 "USAGE_FACTOR_SAFE"
               ]
             }
           },
           "id": {
             "type": "integer",
             "format": "int32"
           },
           "limits": {
             "type": "object",
             "properties": {
               "min": {
                 "type": "object",
                 "properties": {
                   "tres": {
                     "type": "object",
                     "properties": {
                       "per": {
                         "type": "object",
                         "properties": {
                           "job": {
                             "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
                           }
                         }
                       }
                     }
                   }
                 }
               }
             }
           },
           "name": {
             "type": "string"
           },
           "preempt": {
             "type": "object",
             "properties": {
               "exempt_time": {
                 "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
               }
             }
           },
           "priority": {
             "type": "integer",
             "format": "int32"
           },
           "usage_factor": {
             "$ref": "#\/components\/schemas\/v0.0.39_float64_no_val"
           },
           "usage_threshold": {
             "$ref": "#\/components\/schemas\/v0.0.39_float64_no_val"
           }
         },
         "required": [
         ]
       },
       "v0.0.39_qos_preempt_list": {
         "type": "array",
         "items": {
           "type": "string"
         }
       },
       "v0.0.39_job_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_job"
         }
       },
       "v0.0.39_job": {
         "type": "object",
         "properties": {
           "account": {
             "type": "string"
           },
           "comment": {
             "type": "object",
             "properties": {
               "system": {
                 "type": "string"
               }
             }
           },
           "allocation_nodes": {
             "type": "integer",
             "format": "int32"
           },
           "array": {
             "type": "object",
             "properties": {
               "task": {
                 "type": "string"
               }
             }
           },
           "association": {
             "$ref": "#\/components\/schemas\/v0.0.39_assoc_id"
           },
           "block": {
             "type": "string"
           },
           "cluster": {
             "type": "string"
           },
           "constraints": {
             "type": "string"
           },
           "container": {
             "type": "string"
           },
           "derived_exit_code": {
             "$ref": "#\/components\/schemas\/v0.0.39_job_exit_code"
           },
           "time": {
             "type": "object",
             "properties": {
               "user": {
                 "type": "object",
                 "properties": {
                   "microseconds": {
                     "type": "integer",
                     "format": "int64"
                   }
                 }
               }
             }
           },
           "exit_code": {
             "$ref": "#\/components\/schemas\/v0.0.39_job_exit_code"
           },
           "extra": {
             "type": "string"
           },
           "failed_node": {
             "type": "string"
           },
           "flags": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "NONE",
                 "CLEAR_SCHEDULING",
                 "NOT_SET",
                 "STARTED_ON_SUBMIT",
                 "STARTED_ON_SCHEDULE",
                 "STARTED_ON_BACKFILL"
               ]
             }
           },
           "group": {
             "type": "string"
           },
           "het": {
             "type": "object",
             "properties": {
               "job_offset": {
                 "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
               }
             }
           },
           "job_id": {
             "type": "integer",
             "format": "int32"
           },
           "name": {
             "type": "string"
           },
           "licenses": {
             "type": "string"
           },
           "mcs": {
             "type": "object",
             "properties": {
               "label": {
                 "type": "string"
               }
             }
           },
           "nodes": {
             "type": "string"
           },
           "partition": {
             "type": "string"
           },
           "priority": {
             "$ref": "#\/components\/schemas\/v0.0.39_uint32_no_val"
           },
           "qos": {
             "type": "string"
           },
           "required": {
             "type": "object",
             "properties": {
               "memory": {
                 "type": "integer",
                 "format": "int64"
               }
             }
           },
           "kill_request_user": {
             "type": "string"
           },
           "reservation": {
             "type": "object",
             "properties": {
               "name": {
                 "type": "string"
               }
             }
           },
           "script": {
             "type": "string"
           },
           "state": {
             "type": "object",
             "properties": {
               "reason": {
                 "type": "string"
               }
             }
           },
           "steps": {
             "$ref": "#\/components\/schemas\/v0.0.39_step_list"
           },
           "submit_line": {
             "type": "string"
           },
           "tres": {
             "type": "object",
             "properties": {
               "requested": {
                 "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
               }
             }
           },
           "used_gres": {
             "type": "string"
           },
           "user": {
             "type": "string"
           },
           "wckey": {
             "$ref": "#\/components\/schemas\/v0.0.39_wckey_tag"
           },
           "working_directory": {
             "type": "string"
           }
         },
         "required": [
         ]
       },
       "v0.0.39_assoc_id": {
         "$ref": "#\/components\/schemas\/v0.0.39_assoc_short_ptr"
       },
       "v0.0.39_assoc_short_ptr": {
         "$ref": "#\/components\/schemas\/v0.0.39_assoc_short"
       },
       "v0.0.39_job_exit_code": {
         "type": "object",
         "description": "job exit details",
         "properties": {
           "status": {
             "type": "string",
             "description": "exit status"
           },
           "return_code": {
             "type": "integer",
             "format": "int32",
             "description": "return code (numeric)"
           },
           "signal": {
             "type": "object",
             "description": "Job exited due to signal",
             "properties": {
               "signal_id": {
                 "type": "integer",
                 "format": "int32",
                 "description": "signal numeric ID"
               },
               "name": {
                 "type": "string",
                 "description": "signal name"
               }
             }
           }
         }
       },
       "v0.0.39_step_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_step"
         }
       },
       "v0.0.39_step": {
         "type": "object",
         "properties": {
           "time": {
             "type": "object",
             "properties": {
               "user": {
                 "type": "object",
                 "properties": {
                   "microseconds": {
                     "type": "integer",
                     "format": "int32"
                   }
                 }
               }
             }
           },
           "exit_code": {
             "$ref": "#\/components\/schemas\/v0.0.39_job_exit_code"
           },
           "nodes": {
             "type": "object",
             "properties": {
               "list": {
                 "$ref": "#\/components\/schemas\/v0.0.39_step_nodes"
               }
             }
           },
           "tasks": {
             "type": "object",
             "properties": {
               "count": {
                 "type": "integer",
                 "format": "int32"
               }
             }
           },
           "pid": {
             "type": "string"
           },
           "CPU": {
             "type": "object",
             "properties": {
               "governor": {
                 "type": "string"
               }
             }
           },
           "kill_request_user": {
             "type": "string"
           },
           "state": {
             "type": "string"
           },
           "statistics": {
             "type": "object",
             "properties": {
               "energy": {
                 "type": "object",
                 "properties": {
                   "consumed": {
                     "$ref": "#\/components\/schemas\/v0.0.39_uint64_no_val"
                   }
                 }
               }
             }
           },
           "step": {
             "type": "object",
             "properties": {
               "name": {
                 "type": "string"
               }
             }
           },
           "task": {
             "type": "object",
             "properties": {
               "distribution": {
                 "type": "string"
               }
             }
           },
           "tres": {
             "type": "object",
             "properties": {
               "allocated": {
                 "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
               }
             }
           }
         },
         "required": [
         ]
       },
       "v0.0.39_slurm_step_id": {
         "type": "object",
         "description": "step details",
         "properties": {
           "job_id": {
             "type": "integer",
             "format": "int32",
             "description": "JobID"
           },
           "step_het_component": {
             "type": "integer",
             "format": "int32",
             "description": "HetStep"
           },
           "step_id": {
             "type": "string"
           }
         }
       },
       "v0.0.39_step_nodes": {
         "$ref": "#\/components\/schemas\/v0.0.39_hostlist"
       },
       "v0.0.39_hostlist": {
         "type": "array",
         "items": {
           "type": "string"
         }
       },
       "v0.0.39_step_tres_req_max": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_tres"
         }
       },
       "v0.0.39_step_tres_req_min": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_tres"
         }
       },
       "v0.0.39_step_tres_usage_max": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_tres"
         }
       },
       "v0.0.39_step_tres_usage_min": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_tres"
         }
       },
       "v0.0.39_wckey_tag": {
         "type": "object",
         "description": "wckey details",
         "properties": {
           "wckey": {
             "type": "string",
             "description": "wckey"
           },
           "flags": {
             "type": "array",
             "description": "active flags",
             "items": {
               "type": "string",
               "description": "flag",
               "enum": [
                 "ASSIGNED_DEFAULT"
               ]
             }
           }
         }
       },
       "v0.0.39_cluster_rec_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.39_cluster_rec"
         }
       },
       "v0.0.39_cluster_rec": {
         "type": "object",
         "properties": {
           "controller": {
             "type": "object",
             "properties": {
               "port": {
                 "type": "integer",
                 "format": "int32"
               }
             }
           },
           "flags": {
             "type": "array",
             "items": {
               "type": "string",
               "description": "flags",
               "enum": [
                 "REGISTERING",
                 "MULTIPLE_SLURMD",
                 "FRONT_END",
                 "CRAY_NATIVE",
                 "FEDERATION",
                 "EXTERNAL"
               ]
             }
           },
           "name": {
             "type": "string"
           },
           "nodes": {
             "type": "string"
           },
           "select_plugin": {
             "type": "string"
           },
           "associations": {
             "type": "object",
             "properties": {
               "root": {
                 "$ref": "#\/components\/schemas\/v0.0.39_assoc_short_ptr"
               }
             }
           },
           "rpc_version": {
             "type": "integer",
             "format": "int32"
           },
           "tres": {
             "$ref": "#\/components\/schemas\/v0.0.39_tres_str"
           }
         },
         "required": [
         ]
       }
     },
     "securitySchemes": {
       "user": {
         "type": "apiKey",
         "description": "User name",
         "name": "X-SLURM-USER-NAME",
         "in": "header"
       },
       "token": {
         "type": "apiKey",
         "description": "User access token",
         "name": "X-SLURM-USER-TOKEN",
         "in": "header"
       }
     }
   },
   "openapi": "3.0.2",
   "info": {
     "title": "Slurm Rest API",
     "description": "API to access and control Slurm.",
     "termsOfService": "https:\/\/github.com\/SchedMD\/slurm\/blob\/master\/DISCLAIMER",
     "contact": {
       "name": "SchedMD LLC",
       "url": "https:\/\/www.schedmd.com\/",
       "email": "sales@schedmd.com"
     },
     "license": {
       "name": "Apache 2.0",
       "url": "https:\/\/www.apache.org\/licenses\/LICENSE-2.0.html"
     },
     "version": "0.0.37"
   },
   "security": [
     {
       "user": [
       ],
       "token": [
       ]
     }
   ],
   "servers": [
     {
       "url": "\/"
     }
   ]
 }